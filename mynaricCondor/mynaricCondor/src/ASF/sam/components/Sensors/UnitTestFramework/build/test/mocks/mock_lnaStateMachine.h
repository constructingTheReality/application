/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_LNASTATEMACHINE_H
#define _MOCK_LNASTATEMACHINE_H

#include "unity.h"
#include "lnaStateMachine.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_lnaStateMachine_Init(void);
void mock_lnaStateMachine_Destroy(void);
void mock_lnaStateMachine_Verify(void);




#define eLnaLoopStateDisableFunction_Ignore() eLnaLoopStateDisableFunction_CMockIgnore()
void eLnaLoopStateDisableFunction_CMockIgnore(void);
#define eLnaLoopStateDisableFunction_StopIgnore() eLnaLoopStateDisableFunction_CMockStopIgnore()
void eLnaLoopStateDisableFunction_CMockStopIgnore(void);
#define eLnaLoopStateDisableFunction_Expect() eLnaLoopStateDisableFunction_CMockExpect(__LINE__)
void eLnaLoopStateDisableFunction_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_eLnaLoopStateDisableFunction_CALLBACK)(int cmock_num_calls);
void eLnaLoopStateDisableFunction_AddCallback(CMOCK_eLnaLoopStateDisableFunction_CALLBACK Callback);
void eLnaLoopStateDisableFunction_Stub(CMOCK_eLnaLoopStateDisableFunction_CALLBACK Callback);
#define eLnaLoopStateDisableFunction_StubWithCallback eLnaLoopStateDisableFunction_Stub
#define eLnaLoopStateStandbyFunction_Ignore() eLnaLoopStateStandbyFunction_CMockIgnore()
void eLnaLoopStateStandbyFunction_CMockIgnore(void);
#define eLnaLoopStateStandbyFunction_StopIgnore() eLnaLoopStateStandbyFunction_CMockStopIgnore()
void eLnaLoopStateStandbyFunction_CMockStopIgnore(void);
#define eLnaLoopStateStandbyFunction_Expect() eLnaLoopStateStandbyFunction_CMockExpect(__LINE__)
void eLnaLoopStateStandbyFunction_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_eLnaLoopStateStandbyFunction_CALLBACK)(int cmock_num_calls);
void eLnaLoopStateStandbyFunction_AddCallback(CMOCK_eLnaLoopStateStandbyFunction_CALLBACK Callback);
void eLnaLoopStateStandbyFunction_Stub(CMOCK_eLnaLoopStateStandbyFunction_CALLBACK Callback);
#define eLnaLoopStateStandbyFunction_StubWithCallback eLnaLoopStateStandbyFunction_Stub
#define eLnaLoopStateApcFunction_Ignore() eLnaLoopStateApcFunction_CMockIgnore()
void eLnaLoopStateApcFunction_CMockIgnore(void);
#define eLnaLoopStateApcFunction_StopIgnore() eLnaLoopStateApcFunction_CMockStopIgnore()
void eLnaLoopStateApcFunction_CMockStopIgnore(void);
#define eLnaLoopStateApcFunction_Expect() eLnaLoopStateApcFunction_CMockExpect(__LINE__)
void eLnaLoopStateApcFunction_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_eLnaLoopStateApcFunction_CALLBACK)(int cmock_num_calls);
void eLnaLoopStateApcFunction_AddCallback(CMOCK_eLnaLoopStateApcFunction_CALLBACK Callback);
void eLnaLoopStateApcFunction_Stub(CMOCK_eLnaLoopStateApcFunction_CALLBACK Callback);
#define eLnaLoopStateApcFunction_StubWithCallback eLnaLoopStateApcFunction_Stub
#define eLnaLoopStateAccFunction_Ignore() eLnaLoopStateAccFunction_CMockIgnore()
void eLnaLoopStateAccFunction_CMockIgnore(void);
#define eLnaLoopStateAccFunction_StopIgnore() eLnaLoopStateAccFunction_CMockStopIgnore()
void eLnaLoopStateAccFunction_CMockStopIgnore(void);
#define eLnaLoopStateAccFunction_Expect() eLnaLoopStateAccFunction_CMockExpect(__LINE__)
void eLnaLoopStateAccFunction_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_eLnaLoopStateAccFunction_CALLBACK)(int cmock_num_calls);
void eLnaLoopStateAccFunction_AddCallback(CMOCK_eLnaLoopStateAccFunction_CALLBACK Callback);
void eLnaLoopStateAccFunction_Stub(CMOCK_eLnaLoopStateAccFunction_CALLBACK Callback);
#define eLnaLoopStateAccFunction_StubWithCallback eLnaLoopStateAccFunction_Stub
#define eLnaLoopStateIdentificationFunction_Ignore() eLnaLoopStateIdentificationFunction_CMockIgnore()
void eLnaLoopStateIdentificationFunction_CMockIgnore(void);
#define eLnaLoopStateIdentificationFunction_StopIgnore() eLnaLoopStateIdentificationFunction_CMockStopIgnore()
void eLnaLoopStateIdentificationFunction_CMockStopIgnore(void);
#define eLnaLoopStateIdentificationFunction_Expect() eLnaLoopStateIdentificationFunction_CMockExpect(__LINE__)
void eLnaLoopStateIdentificationFunction_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_eLnaLoopStateIdentificationFunction_CALLBACK)(int cmock_num_calls);
void eLnaLoopStateIdentificationFunction_AddCallback(CMOCK_eLnaLoopStateIdentificationFunction_CALLBACK Callback);
void eLnaLoopStateIdentificationFunction_Stub(CMOCK_eLnaLoopStateIdentificationFunction_CALLBACK Callback);
#define eLnaLoopStateIdentificationFunction_StubWithCallback eLnaLoopStateIdentificationFunction_Stub
#define vLnaStateMachineInit_Ignore() vLnaStateMachineInit_CMockIgnore()
void vLnaStateMachineInit_CMockIgnore(void);
#define vLnaStateMachineInit_StopIgnore() vLnaStateMachineInit_CMockStopIgnore()
void vLnaStateMachineInit_CMockStopIgnore(void);
#define vLnaStateMachineInit_Expect() vLnaStateMachineInit_CMockExpect(__LINE__)
void vLnaStateMachineInit_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_vLnaStateMachineInit_CALLBACK)(int cmock_num_calls);
void vLnaStateMachineInit_AddCallback(CMOCK_vLnaStateMachineInit_CALLBACK Callback);
void vLnaStateMachineInit_Stub(CMOCK_vLnaStateMachineInit_CALLBACK Callback);
#define vLnaStateMachineInit_StubWithCallback vLnaStateMachineInit_Stub
#define vLnaStateMachineUpdate_Ignore() vLnaStateMachineUpdate_CMockIgnore()
void vLnaStateMachineUpdate_CMockIgnore(void);
#define vLnaStateMachineUpdate_StopIgnore() vLnaStateMachineUpdate_CMockStopIgnore()
void vLnaStateMachineUpdate_CMockStopIgnore(void);
#define vLnaStateMachineUpdate_Expect() vLnaStateMachineUpdate_CMockExpect(__LINE__)
void vLnaStateMachineUpdate_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_vLnaStateMachineUpdate_CALLBACK)(int cmock_num_calls);
void vLnaStateMachineUpdate_AddCallback(CMOCK_vLnaStateMachineUpdate_CALLBACK Callback);
void vLnaStateMachineUpdate_Stub(CMOCK_vLnaStateMachineUpdate_CALLBACK Callback);
#define vLnaStateMachineUpdate_StubWithCallback vLnaStateMachineUpdate_Stub
#define eLnaReportState_IgnoreAndReturn(cmock_retval) eLnaReportState_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void eLnaReportState_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, eLnaState_t cmock_to_return);
#define eLnaReportState_StopIgnore() eLnaReportState_CMockStopIgnore()
void eLnaReportState_CMockStopIgnore(void);
#define eLnaReportState_ExpectAndReturn(cmock_retval) eLnaReportState_CMockExpectAndReturn(__LINE__, cmock_retval)
void eLnaReportState_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, eLnaState_t cmock_to_return);
typedef eLnaState_t (* CMOCK_eLnaReportState_CALLBACK)(int cmock_num_calls);
void eLnaReportState_AddCallback(CMOCK_eLnaReportState_CALLBACK Callback);
void eLnaReportState_Stub(CMOCK_eLnaReportState_CALLBACK Callback);
#define eLnaReportState_StubWithCallback eLnaReportState_Stub
#define vLnaAlarmProtocolDetected_Ignore() vLnaAlarmProtocolDetected_CMockIgnore()
void vLnaAlarmProtocolDetected_CMockIgnore(void);
#define vLnaAlarmProtocolDetected_StopIgnore() vLnaAlarmProtocolDetected_CMockStopIgnore()
void vLnaAlarmProtocolDetected_CMockStopIgnore(void);
#define vLnaAlarmProtocolDetected_Expect() vLnaAlarmProtocolDetected_CMockExpect(__LINE__)
void vLnaAlarmProtocolDetected_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_vLnaAlarmProtocolDetected_CALLBACK)(int cmock_num_calls);
void vLnaAlarmProtocolDetected_AddCallback(CMOCK_vLnaAlarmProtocolDetected_CALLBACK Callback);
void vLnaAlarmProtocolDetected_Stub(CMOCK_vLnaAlarmProtocolDetected_CALLBACK Callback);
#define vLnaAlarmProtocolDetected_StubWithCallback vLnaAlarmProtocolDetected_Stub
#define vLnaCriticalErrorDetected_Ignore() vLnaCriticalErrorDetected_CMockIgnore()
void vLnaCriticalErrorDetected_CMockIgnore(void);
#define vLnaCriticalErrorDetected_StopIgnore() vLnaCriticalErrorDetected_CMockStopIgnore()
void vLnaCriticalErrorDetected_CMockStopIgnore(void);
#define vLnaCriticalErrorDetected_Expect() vLnaCriticalErrorDetected_CMockExpect(__LINE__)
void vLnaCriticalErrorDetected_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_vLnaCriticalErrorDetected_CALLBACK)(int cmock_num_calls);
void vLnaCriticalErrorDetected_AddCallback(CMOCK_vLnaCriticalErrorDetected_CALLBACK Callback);
void vLnaCriticalErrorDetected_Stub(CMOCK_vLnaCriticalErrorDetected_CALLBACK Callback);
#define vLnaCriticalErrorDetected_StubWithCallback vLnaCriticalErrorDetected_Stub
#define vSetDisableLna_Ignore() vSetDisableLna_CMockIgnore()
void vSetDisableLna_CMockIgnore(void);
#define vSetDisableLna_StopIgnore() vSetDisableLna_CMockStopIgnore()
void vSetDisableLna_CMockStopIgnore(void);
#define vSetDisableLna_Expect() vSetDisableLna_CMockExpect(__LINE__)
void vSetDisableLna_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_vSetDisableLna_CALLBACK)(int cmock_num_calls);
void vSetDisableLna_AddCallback(CMOCK_vSetDisableLna_CALLBACK Callback);
void vSetDisableLna_Stub(CMOCK_vSetDisableLna_CALLBACK Callback);
#define vSetDisableLna_StubWithCallback vSetDisableLna_Stub

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
