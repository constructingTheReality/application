/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_BOOSTERSTATEMACHINE_H
#define _MOCK_BOOSTERSTATEMACHINE_H

#include "unity.h"
#include "boosterStateMachine.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_boosterStateMachine_Init(void);
void mock_boosterStateMachine_Destroy(void);
void mock_boosterStateMachine_Verify(void);




#define eBoosterLoopStateDisableFunction_Ignore() eBoosterLoopStateDisableFunction_CMockIgnore()
void eBoosterLoopStateDisableFunction_CMockIgnore(void);
#define eBoosterLoopStateDisableFunction_StopIgnore() eBoosterLoopStateDisableFunction_CMockStopIgnore()
void eBoosterLoopStateDisableFunction_CMockStopIgnore(void);
#define eBoosterLoopStateDisableFunction_Expect() eBoosterLoopStateDisableFunction_CMockExpect(__LINE__)
void eBoosterLoopStateDisableFunction_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_eBoosterLoopStateDisableFunction_CALLBACK)(int cmock_num_calls);
void eBoosterLoopStateDisableFunction_AddCallback(CMOCK_eBoosterLoopStateDisableFunction_CALLBACK Callback);
void eBoosterLoopStateDisableFunction_Stub(CMOCK_eBoosterLoopStateDisableFunction_CALLBACK Callback);
#define eBoosterLoopStateDisableFunction_StubWithCallback eBoosterLoopStateDisableFunction_Stub
#define eBoosterLoopStateStandbyFunction_Ignore() eBoosterLoopStateStandbyFunction_CMockIgnore()
void eBoosterLoopStateStandbyFunction_CMockIgnore(void);
#define eBoosterLoopStateStandbyFunction_StopIgnore() eBoosterLoopStateStandbyFunction_CMockStopIgnore()
void eBoosterLoopStateStandbyFunction_CMockStopIgnore(void);
#define eBoosterLoopStateStandbyFunction_Expect() eBoosterLoopStateStandbyFunction_CMockExpect(__LINE__)
void eBoosterLoopStateStandbyFunction_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_eBoosterLoopStateStandbyFunction_CALLBACK)(int cmock_num_calls);
void eBoosterLoopStateStandbyFunction_AddCallback(CMOCK_eBoosterLoopStateStandbyFunction_CALLBACK Callback);
void eBoosterLoopStateStandbyFunction_Stub(CMOCK_eBoosterLoopStateStandbyFunction_CALLBACK Callback);
#define eBoosterLoopStateStandbyFunction_StubWithCallback eBoosterLoopStateStandbyFunction_Stub
#define eBoosterLoopStateApcFunction_Ignore() eBoosterLoopStateApcFunction_CMockIgnore()
void eBoosterLoopStateApcFunction_CMockIgnore(void);
#define eBoosterLoopStateApcFunction_StopIgnore() eBoosterLoopStateApcFunction_CMockStopIgnore()
void eBoosterLoopStateApcFunction_CMockStopIgnore(void);
#define eBoosterLoopStateApcFunction_Expect() eBoosterLoopStateApcFunction_CMockExpect(__LINE__)
void eBoosterLoopStateApcFunction_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_eBoosterLoopStateApcFunction_CALLBACK)(int cmock_num_calls);
void eBoosterLoopStateApcFunction_AddCallback(CMOCK_eBoosterLoopStateApcFunction_CALLBACK Callback);
void eBoosterLoopStateApcFunction_Stub(CMOCK_eBoosterLoopStateApcFunction_CALLBACK Callback);
#define eBoosterLoopStateApcFunction_StubWithCallback eBoosterLoopStateApcFunction_Stub
#define eBoosterLoopStateAccFunction_Ignore() eBoosterLoopStateAccFunction_CMockIgnore()
void eBoosterLoopStateAccFunction_CMockIgnore(void);
#define eBoosterLoopStateAccFunction_StopIgnore() eBoosterLoopStateAccFunction_CMockStopIgnore()
void eBoosterLoopStateAccFunction_CMockStopIgnore(void);
#define eBoosterLoopStateAccFunction_Expect() eBoosterLoopStateAccFunction_CMockExpect(__LINE__)
void eBoosterLoopStateAccFunction_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_eBoosterLoopStateAccFunction_CALLBACK)(int cmock_num_calls);
void eBoosterLoopStateAccFunction_AddCallback(CMOCK_eBoosterLoopStateAccFunction_CALLBACK Callback);
void eBoosterLoopStateAccFunction_Stub(CMOCK_eBoosterLoopStateAccFunction_CALLBACK Callback);
#define eBoosterLoopStateAccFunction_StubWithCallback eBoosterLoopStateAccFunction_Stub
#define vHpaCriticalErrorDetected_Ignore() vHpaCriticalErrorDetected_CMockIgnore()
void vHpaCriticalErrorDetected_CMockIgnore(void);
#define vHpaCriticalErrorDetected_StopIgnore() vHpaCriticalErrorDetected_CMockStopIgnore()
void vHpaCriticalErrorDetected_CMockStopIgnore(void);
#define vHpaCriticalErrorDetected_Expect() vHpaCriticalErrorDetected_CMockExpect(__LINE__)
void vHpaCriticalErrorDetected_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_vHpaCriticalErrorDetected_CALLBACK)(int cmock_num_calls);
void vHpaCriticalErrorDetected_AddCallback(CMOCK_vHpaCriticalErrorDetected_CALLBACK Callback);
void vHpaCriticalErrorDetected_Stub(CMOCK_vHpaCriticalErrorDetected_CALLBACK Callback);
#define vHpaCriticalErrorDetected_StubWithCallback vHpaCriticalErrorDetected_Stub
#define vBoosterStateMachineInit_Ignore() vBoosterStateMachineInit_CMockIgnore()
void vBoosterStateMachineInit_CMockIgnore(void);
#define vBoosterStateMachineInit_StopIgnore() vBoosterStateMachineInit_CMockStopIgnore()
void vBoosterStateMachineInit_CMockStopIgnore(void);
#define vBoosterStateMachineInit_ExpectAnyArgs() vBoosterStateMachineInit_CMockExpectAnyArgs(__LINE__)
void vBoosterStateMachineInit_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vBoosterStateMachineInit_Expect(pxLaserBeamDescriptor) vBoosterStateMachineInit_CMockExpect(__LINE__, pxLaserBeamDescriptor)
void vBoosterStateMachineInit_CMockExpect(UNITY_LINE_TYPE cmock_line, xAmplifierDescriptor_t* pxLaserBeamDescriptor);
typedef void (* CMOCK_vBoosterStateMachineInit_CALLBACK)(xAmplifierDescriptor_t* pxLaserBeamDescriptor, int cmock_num_calls);
void vBoosterStateMachineInit_AddCallback(CMOCK_vBoosterStateMachineInit_CALLBACK Callback);
void vBoosterStateMachineInit_Stub(CMOCK_vBoosterStateMachineInit_CALLBACK Callback);
#define vBoosterStateMachineInit_StubWithCallback vBoosterStateMachineInit_Stub
#define vBoosterStateMachineInit_ExpectWithArray(pxLaserBeamDescriptor, pxLaserBeamDescriptor_Depth) vBoosterStateMachineInit_CMockExpectWithArray(__LINE__, pxLaserBeamDescriptor, pxLaserBeamDescriptor_Depth)
void vBoosterStateMachineInit_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, xAmplifierDescriptor_t* pxLaserBeamDescriptor, int pxLaserBeamDescriptor_Depth);
#define vBoosterStateMachineInit_ReturnThruPtr_pxLaserBeamDescriptor(pxLaserBeamDescriptor) vBoosterStateMachineInit_CMockReturnMemThruPtr_pxLaserBeamDescriptor(__LINE__, pxLaserBeamDescriptor, sizeof(xAmplifierDescriptor_t))
#define vBoosterStateMachineInit_ReturnArrayThruPtr_pxLaserBeamDescriptor(pxLaserBeamDescriptor, cmock_len) vBoosterStateMachineInit_CMockReturnMemThruPtr_pxLaserBeamDescriptor(__LINE__, pxLaserBeamDescriptor, cmock_len * sizeof(*pxLaserBeamDescriptor))
#define vBoosterStateMachineInit_ReturnMemThruPtr_pxLaserBeamDescriptor(pxLaserBeamDescriptor, cmock_size) vBoosterStateMachineInit_CMockReturnMemThruPtr_pxLaserBeamDescriptor(__LINE__, pxLaserBeamDescriptor, cmock_size)
void vBoosterStateMachineInit_CMockReturnMemThruPtr_pxLaserBeamDescriptor(UNITY_LINE_TYPE cmock_line, xAmplifierDescriptor_t* pxLaserBeamDescriptor, size_t cmock_size);
#define vBoosterStateMachineInit_IgnoreArg_pxLaserBeamDescriptor() vBoosterStateMachineInit_CMockIgnoreArg_pxLaserBeamDescriptor(__LINE__)
void vBoosterStateMachineInit_CMockIgnoreArg_pxLaserBeamDescriptor(UNITY_LINE_TYPE cmock_line);
#define vBoosterStateMachineUpdate_Ignore() vBoosterStateMachineUpdate_CMockIgnore()
void vBoosterStateMachineUpdate_CMockIgnore(void);
#define vBoosterStateMachineUpdate_StopIgnore() vBoosterStateMachineUpdate_CMockStopIgnore()
void vBoosterStateMachineUpdate_CMockStopIgnore(void);
#define vBoosterStateMachineUpdate_Expect() vBoosterStateMachineUpdate_CMockExpect(__LINE__)
void vBoosterStateMachineUpdate_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_vBoosterStateMachineUpdate_CALLBACK)(int cmock_num_calls);
void vBoosterStateMachineUpdate_AddCallback(CMOCK_vBoosterStateMachineUpdate_CALLBACK Callback);
void vBoosterStateMachineUpdate_Stub(CMOCK_vBoosterStateMachineUpdate_CALLBACK Callback);
#define vBoosterStateMachineUpdate_StubWithCallback vBoosterStateMachineUpdate_Stub
#define eBoosterReportState_IgnoreAndReturn(cmock_retval) eBoosterReportState_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void eBoosterReportState_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, eBoosterState_t cmock_to_return);
#define eBoosterReportState_StopIgnore() eBoosterReportState_CMockStopIgnore()
void eBoosterReportState_CMockStopIgnore(void);
#define eBoosterReportState_ExpectAndReturn(cmock_retval) eBoosterReportState_CMockExpectAndReturn(__LINE__, cmock_retval)
void eBoosterReportState_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, eBoosterState_t cmock_to_return);
typedef eBoosterState_t (* CMOCK_eBoosterReportState_CALLBACK)(int cmock_num_calls);
void eBoosterReportState_AddCallback(CMOCK_eBoosterReportState_CALLBACK Callback);
void eBoosterReportState_Stub(CMOCK_eBoosterReportState_CALLBACK Callback);
#define eBoosterReportState_StubWithCallback eBoosterReportState_Stub
#define eBoosterApcReportState_IgnoreAndReturn(cmock_retval) eBoosterApcReportState_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void eBoosterApcReportState_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, eHpaApcState_t cmock_to_return);
#define eBoosterApcReportState_StopIgnore() eBoosterApcReportState_CMockStopIgnore()
void eBoosterApcReportState_CMockStopIgnore(void);
#define eBoosterApcReportState_ExpectAndReturn(cmock_retval) eBoosterApcReportState_CMockExpectAndReturn(__LINE__, cmock_retval)
void eBoosterApcReportState_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, eHpaApcState_t cmock_to_return);
typedef eHpaApcState_t (* CMOCK_eBoosterApcReportState_CALLBACK)(int cmock_num_calls);
void eBoosterApcReportState_AddCallback(CMOCK_eBoosterApcReportState_CALLBACK Callback);
void eBoosterApcReportState_Stub(CMOCK_eBoosterApcReportState_CALLBACK Callback);
#define eBoosterApcReportState_StubWithCallback eBoosterApcReportState_Stub
#define vSetDisableHpa_Ignore() vSetDisableHpa_CMockIgnore()
void vSetDisableHpa_CMockIgnore(void);
#define vSetDisableHpa_StopIgnore() vSetDisableHpa_CMockStopIgnore()
void vSetDisableHpa_CMockStopIgnore(void);
#define vSetDisableHpa_Expect() vSetDisableHpa_CMockExpect(__LINE__)
void vSetDisableHpa_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_vSetDisableHpa_CALLBACK)(int cmock_num_calls);
void vSetDisableHpa_AddCallback(CMOCK_vSetDisableHpa_CALLBACK Callback);
void vSetDisableHpa_Stub(CMOCK_vSetDisableHpa_CALLBACK Callback);
#define vSetDisableHpa_StubWithCallback vSetDisableHpa_Stub
#define vResetHpaAlarms_Ignore() vResetHpaAlarms_CMockIgnore()
void vResetHpaAlarms_CMockIgnore(void);
#define vResetHpaAlarms_StopIgnore() vResetHpaAlarms_CMockStopIgnore()
void vResetHpaAlarms_CMockStopIgnore(void);
#define vResetHpaAlarms_Expect() vResetHpaAlarms_CMockExpect(__LINE__)
void vResetHpaAlarms_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_vResetHpaAlarms_CALLBACK)(int cmock_num_calls);
void vResetHpaAlarms_AddCallback(CMOCK_vResetHpaAlarms_CALLBACK Callback);
void vResetHpaAlarms_Stub(CMOCK_vResetHpaAlarms_CALLBACK Callback);
#define vResetHpaAlarms_StubWithCallback vResetHpaAlarms_Stub
#define bBoosterGetStuckCondition_IgnoreAndReturn(cmock_retval) bBoosterGetStuckCondition_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void bBoosterGetStuckCondition_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, eBool_t cmock_to_return);
#define bBoosterGetStuckCondition_StopIgnore() bBoosterGetStuckCondition_CMockStopIgnore()
void bBoosterGetStuckCondition_CMockStopIgnore(void);
#define bBoosterGetStuckCondition_ExpectAndReturn(cmock_retval) bBoosterGetStuckCondition_CMockExpectAndReturn(__LINE__, cmock_retval)
void bBoosterGetStuckCondition_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, eBool_t cmock_to_return);
typedef eBool_t (* CMOCK_bBoosterGetStuckCondition_CALLBACK)(int cmock_num_calls);
void bBoosterGetStuckCondition_AddCallback(CMOCK_bBoosterGetStuckCondition_CALLBACK Callback);
void bBoosterGetStuckCondition_Stub(CMOCK_bBoosterGetStuckCondition_CALLBACK Callback);
#define bBoosterGetStuckCondition_StubWithCallback bBoosterGetStuckCondition_Stub

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
