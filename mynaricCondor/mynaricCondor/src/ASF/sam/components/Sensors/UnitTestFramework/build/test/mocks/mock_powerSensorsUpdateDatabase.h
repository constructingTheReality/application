/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_POWERSENSORSUPDATEDATABASE_H
#define _MOCK_POWERSENSORSUPDATEDATABASE_H

#include "unity.h"
#include "powerSensorsUpdateDatabase.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_powerSensorsUpdateDatabase_Init(void);
void mock_powerSensorsUpdateDatabase_Destroy(void);
void mock_powerSensorsUpdateDatabase_Verify(void);




#define ePowerSensorsUpdateDatabaseCommon_IgnoreAndReturn(cmock_retval) ePowerSensorsUpdateDatabaseCommon_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ePowerSensorsUpdateDatabaseCommon_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, eMpbError_t cmock_to_return);
#define ePowerSensorsUpdateDatabaseCommon_StopIgnore() ePowerSensorsUpdateDatabaseCommon_CMockStopIgnore()
void ePowerSensorsUpdateDatabaseCommon_CMockStopIgnore(void);
#define ePowerSensorsUpdateDatabaseCommon_ExpectAnyArgsAndReturn(cmock_retval) ePowerSensorsUpdateDatabaseCommon_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ePowerSensorsUpdateDatabaseCommon_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, eMpbError_t cmock_to_return);
#define ePowerSensorsUpdateDatabaseCommon_ExpectAndReturn(pxLocalPowerInputScaling, cmock_retval) ePowerSensorsUpdateDatabaseCommon_CMockExpectAndReturn(__LINE__, pxLocalPowerInputScaling, cmock_retval)
void ePowerSensorsUpdateDatabaseCommon_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, xPowerInputScaling_t* pxLocalPowerInputScaling, eMpbError_t cmock_to_return);
typedef eMpbError_t (* CMOCK_ePowerSensorsUpdateDatabaseCommon_CALLBACK)(xPowerInputScaling_t* pxLocalPowerInputScaling, int cmock_num_calls);
void ePowerSensorsUpdateDatabaseCommon_AddCallback(CMOCK_ePowerSensorsUpdateDatabaseCommon_CALLBACK Callback);
void ePowerSensorsUpdateDatabaseCommon_Stub(CMOCK_ePowerSensorsUpdateDatabaseCommon_CALLBACK Callback);
#define ePowerSensorsUpdateDatabaseCommon_StubWithCallback ePowerSensorsUpdateDatabaseCommon_Stub
#define ePowerSensorsUpdateDatabaseCommon_ExpectWithArrayAndReturn(pxLocalPowerInputScaling, pxLocalPowerInputScaling_Depth, cmock_retval) ePowerSensorsUpdateDatabaseCommon_CMockExpectWithArrayAndReturn(__LINE__, pxLocalPowerInputScaling, pxLocalPowerInputScaling_Depth, cmock_retval)
void ePowerSensorsUpdateDatabaseCommon_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, xPowerInputScaling_t* pxLocalPowerInputScaling, int pxLocalPowerInputScaling_Depth, eMpbError_t cmock_to_return);
#define ePowerSensorsUpdateDatabaseCommon_ReturnThruPtr_pxLocalPowerInputScaling(pxLocalPowerInputScaling) ePowerSensorsUpdateDatabaseCommon_CMockReturnMemThruPtr_pxLocalPowerInputScaling(__LINE__, pxLocalPowerInputScaling, sizeof(xPowerInputScaling_t))
#define ePowerSensorsUpdateDatabaseCommon_ReturnArrayThruPtr_pxLocalPowerInputScaling(pxLocalPowerInputScaling, cmock_len) ePowerSensorsUpdateDatabaseCommon_CMockReturnMemThruPtr_pxLocalPowerInputScaling(__LINE__, pxLocalPowerInputScaling, cmock_len * sizeof(*pxLocalPowerInputScaling))
#define ePowerSensorsUpdateDatabaseCommon_ReturnMemThruPtr_pxLocalPowerInputScaling(pxLocalPowerInputScaling, cmock_size) ePowerSensorsUpdateDatabaseCommon_CMockReturnMemThruPtr_pxLocalPowerInputScaling(__LINE__, pxLocalPowerInputScaling, cmock_size)
void ePowerSensorsUpdateDatabaseCommon_CMockReturnMemThruPtr_pxLocalPowerInputScaling(UNITY_LINE_TYPE cmock_line, xPowerInputScaling_t* pxLocalPowerInputScaling, size_t cmock_size);
#define ePowerSensorsUpdateDatabaseCommon_IgnoreArg_pxLocalPowerInputScaling() ePowerSensorsUpdateDatabaseCommon_CMockIgnoreArg_pxLocalPowerInputScaling(__LINE__)
void ePowerSensorsUpdateDatabaseCommon_CMockIgnoreArg_pxLocalPowerInputScaling(UNITY_LINE_TYPE cmock_line);
#define ePowerSensorsUpdateDatabaseLna_IgnoreAndReturn(cmock_retval) ePowerSensorsUpdateDatabaseLna_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ePowerSensorsUpdateDatabaseLna_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, eMpbError_t cmock_to_return);
#define ePowerSensorsUpdateDatabaseLna_StopIgnore() ePowerSensorsUpdateDatabaseLna_CMockStopIgnore()
void ePowerSensorsUpdateDatabaseLna_CMockStopIgnore(void);
#define ePowerSensorsUpdateDatabaseLna_ExpectAnyArgsAndReturn(cmock_retval) ePowerSensorsUpdateDatabaseLna_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ePowerSensorsUpdateDatabaseLna_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, eMpbError_t cmock_to_return);
#define ePowerSensorsUpdateDatabaseLna_ExpectAndReturn(pxLocalPowerInputScaling, cmock_retval) ePowerSensorsUpdateDatabaseLna_CMockExpectAndReturn(__LINE__, pxLocalPowerInputScaling, cmock_retval)
void ePowerSensorsUpdateDatabaseLna_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, xPowerInputScaling_t* pxLocalPowerInputScaling, eMpbError_t cmock_to_return);
typedef eMpbError_t (* CMOCK_ePowerSensorsUpdateDatabaseLna_CALLBACK)(xPowerInputScaling_t* pxLocalPowerInputScaling, int cmock_num_calls);
void ePowerSensorsUpdateDatabaseLna_AddCallback(CMOCK_ePowerSensorsUpdateDatabaseLna_CALLBACK Callback);
void ePowerSensorsUpdateDatabaseLna_Stub(CMOCK_ePowerSensorsUpdateDatabaseLna_CALLBACK Callback);
#define ePowerSensorsUpdateDatabaseLna_StubWithCallback ePowerSensorsUpdateDatabaseLna_Stub
#define ePowerSensorsUpdateDatabaseLna_ExpectWithArrayAndReturn(pxLocalPowerInputScaling, pxLocalPowerInputScaling_Depth, cmock_retval) ePowerSensorsUpdateDatabaseLna_CMockExpectWithArrayAndReturn(__LINE__, pxLocalPowerInputScaling, pxLocalPowerInputScaling_Depth, cmock_retval)
void ePowerSensorsUpdateDatabaseLna_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, xPowerInputScaling_t* pxLocalPowerInputScaling, int pxLocalPowerInputScaling_Depth, eMpbError_t cmock_to_return);
#define ePowerSensorsUpdateDatabaseLna_ReturnThruPtr_pxLocalPowerInputScaling(pxLocalPowerInputScaling) ePowerSensorsUpdateDatabaseLna_CMockReturnMemThruPtr_pxLocalPowerInputScaling(__LINE__, pxLocalPowerInputScaling, sizeof(xPowerInputScaling_t))
#define ePowerSensorsUpdateDatabaseLna_ReturnArrayThruPtr_pxLocalPowerInputScaling(pxLocalPowerInputScaling, cmock_len) ePowerSensorsUpdateDatabaseLna_CMockReturnMemThruPtr_pxLocalPowerInputScaling(__LINE__, pxLocalPowerInputScaling, cmock_len * sizeof(*pxLocalPowerInputScaling))
#define ePowerSensorsUpdateDatabaseLna_ReturnMemThruPtr_pxLocalPowerInputScaling(pxLocalPowerInputScaling, cmock_size) ePowerSensorsUpdateDatabaseLna_CMockReturnMemThruPtr_pxLocalPowerInputScaling(__LINE__, pxLocalPowerInputScaling, cmock_size)
void ePowerSensorsUpdateDatabaseLna_CMockReturnMemThruPtr_pxLocalPowerInputScaling(UNITY_LINE_TYPE cmock_line, xPowerInputScaling_t* pxLocalPowerInputScaling, size_t cmock_size);
#define ePowerSensorsUpdateDatabaseLna_IgnoreArg_pxLocalPowerInputScaling() ePowerSensorsUpdateDatabaseLna_CMockIgnoreArg_pxLocalPowerInputScaling(__LINE__)
void ePowerSensorsUpdateDatabaseLna_CMockIgnoreArg_pxLocalPowerInputScaling(UNITY_LINE_TYPE cmock_line);
#define ePowerSensorsUpdateDatabaseBooster_IgnoreAndReturn(cmock_retval) ePowerSensorsUpdateDatabaseBooster_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void ePowerSensorsUpdateDatabaseBooster_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, eMpbError_t cmock_to_return);
#define ePowerSensorsUpdateDatabaseBooster_StopIgnore() ePowerSensorsUpdateDatabaseBooster_CMockStopIgnore()
void ePowerSensorsUpdateDatabaseBooster_CMockStopIgnore(void);
#define ePowerSensorsUpdateDatabaseBooster_ExpectAnyArgsAndReturn(cmock_retval) ePowerSensorsUpdateDatabaseBooster_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void ePowerSensorsUpdateDatabaseBooster_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, eMpbError_t cmock_to_return);
#define ePowerSensorsUpdateDatabaseBooster_ExpectAndReturn(pxLocalPowerInputScaling, pxHpaLimitsConfig, pxHpaPowersConfig, pxLosValues, cmock_retval) ePowerSensorsUpdateDatabaseBooster_CMockExpectAndReturn(__LINE__, pxLocalPowerInputScaling, pxHpaLimitsConfig, pxHpaPowersConfig, pxLosValues, cmock_retval)
void ePowerSensorsUpdateDatabaseBooster_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, xPowerInputScaling_t* pxLocalPowerInputScaling, xHpaLimitsConfig_t* pxHpaLimitsConfig, xHpaPowersConfig_t* pxHpaPowersConfig, xLosValues_t* pxLosValues, eMpbError_t cmock_to_return);
typedef eMpbError_t (* CMOCK_ePowerSensorsUpdateDatabaseBooster_CALLBACK)(xPowerInputScaling_t* pxLocalPowerInputScaling, xHpaLimitsConfig_t* pxHpaLimitsConfig, xHpaPowersConfig_t* pxHpaPowersConfig, xLosValues_t* pxLosValues, int cmock_num_calls);
void ePowerSensorsUpdateDatabaseBooster_AddCallback(CMOCK_ePowerSensorsUpdateDatabaseBooster_CALLBACK Callback);
void ePowerSensorsUpdateDatabaseBooster_Stub(CMOCK_ePowerSensorsUpdateDatabaseBooster_CALLBACK Callback);
#define ePowerSensorsUpdateDatabaseBooster_StubWithCallback ePowerSensorsUpdateDatabaseBooster_Stub
#define ePowerSensorsUpdateDatabaseBooster_ExpectWithArrayAndReturn(pxLocalPowerInputScaling, pxLocalPowerInputScaling_Depth, pxHpaLimitsConfig, pxHpaLimitsConfig_Depth, pxHpaPowersConfig, pxHpaPowersConfig_Depth, pxLosValues, pxLosValues_Depth, cmock_retval) ePowerSensorsUpdateDatabaseBooster_CMockExpectWithArrayAndReturn(__LINE__, pxLocalPowerInputScaling, pxLocalPowerInputScaling_Depth, pxHpaLimitsConfig, pxHpaLimitsConfig_Depth, pxHpaPowersConfig, pxHpaPowersConfig_Depth, pxLosValues, pxLosValues_Depth, cmock_retval)
void ePowerSensorsUpdateDatabaseBooster_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, xPowerInputScaling_t* pxLocalPowerInputScaling, int pxLocalPowerInputScaling_Depth, xHpaLimitsConfig_t* pxHpaLimitsConfig, int pxHpaLimitsConfig_Depth, xHpaPowersConfig_t* pxHpaPowersConfig, int pxHpaPowersConfig_Depth, xLosValues_t* pxLosValues, int pxLosValues_Depth, eMpbError_t cmock_to_return);
#define ePowerSensorsUpdateDatabaseBooster_ReturnThruPtr_pxLocalPowerInputScaling(pxLocalPowerInputScaling) ePowerSensorsUpdateDatabaseBooster_CMockReturnMemThruPtr_pxLocalPowerInputScaling(__LINE__, pxLocalPowerInputScaling, sizeof(xPowerInputScaling_t))
#define ePowerSensorsUpdateDatabaseBooster_ReturnArrayThruPtr_pxLocalPowerInputScaling(pxLocalPowerInputScaling, cmock_len) ePowerSensorsUpdateDatabaseBooster_CMockReturnMemThruPtr_pxLocalPowerInputScaling(__LINE__, pxLocalPowerInputScaling, cmock_len * sizeof(*pxLocalPowerInputScaling))
#define ePowerSensorsUpdateDatabaseBooster_ReturnMemThruPtr_pxLocalPowerInputScaling(pxLocalPowerInputScaling, cmock_size) ePowerSensorsUpdateDatabaseBooster_CMockReturnMemThruPtr_pxLocalPowerInputScaling(__LINE__, pxLocalPowerInputScaling, cmock_size)
void ePowerSensorsUpdateDatabaseBooster_CMockReturnMemThruPtr_pxLocalPowerInputScaling(UNITY_LINE_TYPE cmock_line, xPowerInputScaling_t* pxLocalPowerInputScaling, size_t cmock_size);
#define ePowerSensorsUpdateDatabaseBooster_ReturnThruPtr_pxHpaLimitsConfig(pxHpaLimitsConfig) ePowerSensorsUpdateDatabaseBooster_CMockReturnMemThruPtr_pxHpaLimitsConfig(__LINE__, pxHpaLimitsConfig, sizeof(xHpaLimitsConfig_t))
#define ePowerSensorsUpdateDatabaseBooster_ReturnArrayThruPtr_pxHpaLimitsConfig(pxHpaLimitsConfig, cmock_len) ePowerSensorsUpdateDatabaseBooster_CMockReturnMemThruPtr_pxHpaLimitsConfig(__LINE__, pxHpaLimitsConfig, cmock_len * sizeof(*pxHpaLimitsConfig))
#define ePowerSensorsUpdateDatabaseBooster_ReturnMemThruPtr_pxHpaLimitsConfig(pxHpaLimitsConfig, cmock_size) ePowerSensorsUpdateDatabaseBooster_CMockReturnMemThruPtr_pxHpaLimitsConfig(__LINE__, pxHpaLimitsConfig, cmock_size)
void ePowerSensorsUpdateDatabaseBooster_CMockReturnMemThruPtr_pxHpaLimitsConfig(UNITY_LINE_TYPE cmock_line, xHpaLimitsConfig_t* pxHpaLimitsConfig, size_t cmock_size);
#define ePowerSensorsUpdateDatabaseBooster_ReturnThruPtr_pxHpaPowersConfig(pxHpaPowersConfig) ePowerSensorsUpdateDatabaseBooster_CMockReturnMemThruPtr_pxHpaPowersConfig(__LINE__, pxHpaPowersConfig, sizeof(xHpaPowersConfig_t))
#define ePowerSensorsUpdateDatabaseBooster_ReturnArrayThruPtr_pxHpaPowersConfig(pxHpaPowersConfig, cmock_len) ePowerSensorsUpdateDatabaseBooster_CMockReturnMemThruPtr_pxHpaPowersConfig(__LINE__, pxHpaPowersConfig, cmock_len * sizeof(*pxHpaPowersConfig))
#define ePowerSensorsUpdateDatabaseBooster_ReturnMemThruPtr_pxHpaPowersConfig(pxHpaPowersConfig, cmock_size) ePowerSensorsUpdateDatabaseBooster_CMockReturnMemThruPtr_pxHpaPowersConfig(__LINE__, pxHpaPowersConfig, cmock_size)
void ePowerSensorsUpdateDatabaseBooster_CMockReturnMemThruPtr_pxHpaPowersConfig(UNITY_LINE_TYPE cmock_line, xHpaPowersConfig_t* pxHpaPowersConfig, size_t cmock_size);
#define ePowerSensorsUpdateDatabaseBooster_ReturnThruPtr_pxLosValues(pxLosValues) ePowerSensorsUpdateDatabaseBooster_CMockReturnMemThruPtr_pxLosValues(__LINE__, pxLosValues, sizeof(xLosValues_t))
#define ePowerSensorsUpdateDatabaseBooster_ReturnArrayThruPtr_pxLosValues(pxLosValues, cmock_len) ePowerSensorsUpdateDatabaseBooster_CMockReturnMemThruPtr_pxLosValues(__LINE__, pxLosValues, cmock_len * sizeof(*pxLosValues))
#define ePowerSensorsUpdateDatabaseBooster_ReturnMemThruPtr_pxLosValues(pxLosValues, cmock_size) ePowerSensorsUpdateDatabaseBooster_CMockReturnMemThruPtr_pxLosValues(__LINE__, pxLosValues, cmock_size)
void ePowerSensorsUpdateDatabaseBooster_CMockReturnMemThruPtr_pxLosValues(UNITY_LINE_TYPE cmock_line, xLosValues_t* pxLosValues, size_t cmock_size);
#define ePowerSensorsUpdateDatabaseBooster_IgnoreArg_pxLocalPowerInputScaling() ePowerSensorsUpdateDatabaseBooster_CMockIgnoreArg_pxLocalPowerInputScaling(__LINE__)
void ePowerSensorsUpdateDatabaseBooster_CMockIgnoreArg_pxLocalPowerInputScaling(UNITY_LINE_TYPE cmock_line);
#define ePowerSensorsUpdateDatabaseBooster_IgnoreArg_pxHpaLimitsConfig() ePowerSensorsUpdateDatabaseBooster_CMockIgnoreArg_pxHpaLimitsConfig(__LINE__)
void ePowerSensorsUpdateDatabaseBooster_CMockIgnoreArg_pxHpaLimitsConfig(UNITY_LINE_TYPE cmock_line);
#define ePowerSensorsUpdateDatabaseBooster_IgnoreArg_pxHpaPowersConfig() ePowerSensorsUpdateDatabaseBooster_CMockIgnoreArg_pxHpaPowersConfig(__LINE__)
void ePowerSensorsUpdateDatabaseBooster_CMockIgnoreArg_pxHpaPowersConfig(UNITY_LINE_TYPE cmock_line);
#define ePowerSensorsUpdateDatabaseBooster_IgnoreArg_pxLosValues() ePowerSensorsUpdateDatabaseBooster_CMockIgnoreArg_pxLosValues(__LINE__)
void ePowerSensorsUpdateDatabaseBooster_CMockIgnoreArg_pxLosValues(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
