/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_LASERDATA_H
#define _MOCK_LASERDATA_H

#include "unity.h"
#include "laserData.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_laserData_Init(void);
void mock_laserData_Destroy(void);
void mock_laserData_Verify(void);




#define vLaserInitBooster_Ignore() vLaserInitBooster_CMockIgnore()
void vLaserInitBooster_CMockIgnore(void);
#define vLaserInitBooster_StopIgnore() vLaserInitBooster_CMockStopIgnore()
void vLaserInitBooster_CMockStopIgnore(void);
#define vLaserInitBooster_Expect() vLaserInitBooster_CMockExpect(__LINE__)
void vLaserInitBooster_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_vLaserInitBooster_CALLBACK)(int cmock_num_calls);
void vLaserInitBooster_AddCallback(CMOCK_vLaserInitBooster_CALLBACK Callback);
void vLaserInitBooster_Stub(CMOCK_vLaserInitBooster_CALLBACK Callback);
#define vLaserInitBooster_StubWithCallback vLaserInitBooster_Stub
#define vLaserInitLna_Ignore() vLaserInitLna_CMockIgnore()
void vLaserInitLna_CMockIgnore(void);
#define vLaserInitLna_StopIgnore() vLaserInitLna_CMockStopIgnore()
void vLaserInitLna_CMockStopIgnore(void);
#define vLaserInitLna_Expect() vLaserInitLna_CMockExpect(__LINE__)
void vLaserInitLna_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_vLaserInitLna_CALLBACK)(int cmock_num_calls);
void vLaserInitLna_AddCallback(CMOCK_vLaserInitLna_CALLBACK Callback);
void vLaserInitLna_Stub(CMOCK_vLaserInitLna_CALLBACK Callback);
#define vLaserInitLna_StubWithCallback vLaserInitLna_Stub
#define vLaserDataInit_Ignore() vLaserDataInit_CMockIgnore()
void vLaserDataInit_CMockIgnore(void);
#define vLaserDataInit_StopIgnore() vLaserDataInit_CMockStopIgnore()
void vLaserDataInit_CMockStopIgnore(void);
#define vLaserDataInit_Expect() vLaserDataInit_CMockExpect(__LINE__)
void vLaserDataInit_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_vLaserDataInit_CALLBACK)(int cmock_num_calls);
void vLaserDataInit_AddCallback(CMOCK_vLaserDataInit_CALLBACK Callback);
void vLaserDataInit_Stub(CMOCK_vLaserDataInit_CALLBACK Callback);
#define vLaserDataInit_StubWithCallback vLaserDataInit_Stub
#define vControlAlarmInitAlarms_Ignore() vControlAlarmInitAlarms_CMockIgnore()
void vControlAlarmInitAlarms_CMockIgnore(void);
#define vControlAlarmInitAlarms_StopIgnore() vControlAlarmInitAlarms_CMockStopIgnore()
void vControlAlarmInitAlarms_CMockStopIgnore(void);
#define vControlAlarmInitAlarms_Expect() vControlAlarmInitAlarms_CMockExpect(__LINE__)
void vControlAlarmInitAlarms_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_vControlAlarmInitAlarms_CALLBACK)(int cmock_num_calls);
void vControlAlarmInitAlarms_AddCallback(CMOCK_vControlAlarmInitAlarms_CALLBACK Callback);
void vControlAlarmInitAlarms_Stub(CMOCK_vControlAlarmInitAlarms_CALLBACK Callback);
#define vControlAlarmInitAlarms_StubWithCallback vControlAlarmInitAlarms_Stub
#define getCanSequence_IgnoreAndReturn(cmock_retval) getCanSequence_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void getCanSequence_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, CanSequence_t cmock_to_return);
#define getCanSequence_StopIgnore() getCanSequence_CMockStopIgnore()
void getCanSequence_CMockStopIgnore(void);
#define getCanSequence_ExpectAndReturn(cmock_retval) getCanSequence_CMockExpectAndReturn(__LINE__, cmock_retval)
void getCanSequence_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, CanSequence_t cmock_to_return);
typedef CanSequence_t (* CMOCK_getCanSequence_CALLBACK)(int cmock_num_calls);
void getCanSequence_AddCallback(CMOCK_getCanSequence_CALLBACK Callback);
void getCanSequence_Stub(CMOCK_getCanSequence_CALLBACK Callback);
#define getCanSequence_StubWithCallback getCanSequence_Stub
#define setCanSequence_Ignore() setCanSequence_CMockIgnore()
void setCanSequence_CMockIgnore(void);
#define setCanSequence_StopIgnore() setCanSequence_CMockStopIgnore()
void setCanSequence_CMockStopIgnore(void);
#define setCanSequence_ExpectAnyArgs() setCanSequence_CMockExpectAnyArgs(__LINE__)
void setCanSequence_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define setCanSequence_Expect(CanSequence) setCanSequence_CMockExpect(__LINE__, CanSequence)
void setCanSequence_CMockExpect(UNITY_LINE_TYPE cmock_line, CanSequence_t CanSequence);
typedef void (* CMOCK_setCanSequence_CALLBACK)(CanSequence_t CanSequence, int cmock_num_calls);
void setCanSequence_AddCallback(CMOCK_setCanSequence_CALLBACK Callback);
void setCanSequence_Stub(CMOCK_setCanSequence_CALLBACK Callback);
#define setCanSequence_StubWithCallback setCanSequence_Stub
#define setCanSequence_IgnoreArg_CanSequence() setCanSequence_CMockIgnoreArg_CanSequence(__LINE__)
void setCanSequence_CMockIgnoreArg_CanSequence(UNITY_LINE_TYPE cmock_line);
#define vLaserBeamsFactoryCommonDefaultValues_Ignore() vLaserBeamsFactoryCommonDefaultValues_CMockIgnore()
void vLaserBeamsFactoryCommonDefaultValues_CMockIgnore(void);
#define vLaserBeamsFactoryCommonDefaultValues_StopIgnore() vLaserBeamsFactoryCommonDefaultValues_CMockStopIgnore()
void vLaserBeamsFactoryCommonDefaultValues_CMockStopIgnore(void);
#define vLaserBeamsFactoryCommonDefaultValues_Expect() vLaserBeamsFactoryCommonDefaultValues_CMockExpect(__LINE__)
void vLaserBeamsFactoryCommonDefaultValues_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_vLaserBeamsFactoryCommonDefaultValues_CALLBACK)(int cmock_num_calls);
void vLaserBeamsFactoryCommonDefaultValues_AddCallback(CMOCK_vLaserBeamsFactoryCommonDefaultValues_CALLBACK Callback);
void vLaserBeamsFactoryCommonDefaultValues_Stub(CMOCK_vLaserBeamsFactoryCommonDefaultValues_CALLBACK Callback);
#define vLaserBeamsFactoryCommonDefaultValues_StubWithCallback vLaserBeamsFactoryCommonDefaultValues_Stub
#define vLaserBeamsFactoryLnaDefaultValues_Ignore() vLaserBeamsFactoryLnaDefaultValues_CMockIgnore()
void vLaserBeamsFactoryLnaDefaultValues_CMockIgnore(void);
#define vLaserBeamsFactoryLnaDefaultValues_StopIgnore() vLaserBeamsFactoryLnaDefaultValues_CMockStopIgnore()
void vLaserBeamsFactoryLnaDefaultValues_CMockStopIgnore(void);
#define vLaserBeamsFactoryLnaDefaultValues_Expect() vLaserBeamsFactoryLnaDefaultValues_CMockExpect(__LINE__)
void vLaserBeamsFactoryLnaDefaultValues_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_vLaserBeamsFactoryLnaDefaultValues_CALLBACK)(int cmock_num_calls);
void vLaserBeamsFactoryLnaDefaultValues_AddCallback(CMOCK_vLaserBeamsFactoryLnaDefaultValues_CALLBACK Callback);
void vLaserBeamsFactoryLnaDefaultValues_Stub(CMOCK_vLaserBeamsFactoryLnaDefaultValues_CALLBACK Callback);
#define vLaserBeamsFactoryLnaDefaultValues_StubWithCallback vLaserBeamsFactoryLnaDefaultValues_Stub
#define vLaserBeamsFactoryBoosterDefaultValues_Ignore() vLaserBeamsFactoryBoosterDefaultValues_CMockIgnore()
void vLaserBeamsFactoryBoosterDefaultValues_CMockIgnore(void);
#define vLaserBeamsFactoryBoosterDefaultValues_StopIgnore() vLaserBeamsFactoryBoosterDefaultValues_CMockStopIgnore()
void vLaserBeamsFactoryBoosterDefaultValues_CMockStopIgnore(void);
#define vLaserBeamsFactoryBoosterDefaultValues_Expect() vLaserBeamsFactoryBoosterDefaultValues_CMockExpect(__LINE__)
void vLaserBeamsFactoryBoosterDefaultValues_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_vLaserBeamsFactoryBoosterDefaultValues_CALLBACK)(int cmock_num_calls);
void vLaserBeamsFactoryBoosterDefaultValues_AddCallback(CMOCK_vLaserBeamsFactoryBoosterDefaultValues_CALLBACK Callback);
void vLaserBeamsFactoryBoosterDefaultValues_Stub(CMOCK_vLaserBeamsFactoryBoosterDefaultValues_CALLBACK Callback);
#define vLaserBeamsFactoryBoosterDefaultValues_StubWithCallback vLaserBeamsFactoryBoosterDefaultValues_Stub
#define vGetxAmplifierDescriptor_IgnoreAndReturn(cmock_retval) vGetxAmplifierDescriptor_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void vGetxAmplifierDescriptor_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, xAmplifierDescriptor_t* cmock_to_return);
#define vGetxAmplifierDescriptor_StopIgnore() vGetxAmplifierDescriptor_CMockStopIgnore()
void vGetxAmplifierDescriptor_CMockStopIgnore(void);
#define vGetxAmplifierDescriptor_ExpectAndReturn(cmock_retval) vGetxAmplifierDescriptor_CMockExpectAndReturn(__LINE__, cmock_retval)
void vGetxAmplifierDescriptor_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, xAmplifierDescriptor_t* cmock_to_return);
typedef xAmplifierDescriptor_t* (* CMOCK_vGetxAmplifierDescriptor_CALLBACK)(int cmock_num_calls);
void vGetxAmplifierDescriptor_AddCallback(CMOCK_vGetxAmplifierDescriptor_CALLBACK Callback);
void vGetxAmplifierDescriptor_Stub(CMOCK_vGetxAmplifierDescriptor_CALLBACK Callback);
#define vGetxAmplifierDescriptor_StubWithCallback vGetxAmplifierDescriptor_Stub
#define vGetpxLnaParameters_IgnoreAndReturn(cmock_retval) vGetpxLnaParameters_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void vGetpxLnaParameters_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, xLnaParameters_t* cmock_to_return);
#define vGetpxLnaParameters_StopIgnore() vGetpxLnaParameters_CMockStopIgnore()
void vGetpxLnaParameters_CMockStopIgnore(void);
#define vGetpxLnaParameters_ExpectAndReturn(cmock_retval) vGetpxLnaParameters_CMockExpectAndReturn(__LINE__, cmock_retval)
void vGetpxLnaParameters_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, xLnaParameters_t* cmock_to_return);
typedef xLnaParameters_t* (* CMOCK_vGetpxLnaParameters_CALLBACK)(int cmock_num_calls);
void vGetpxLnaParameters_AddCallback(CMOCK_vGetpxLnaParameters_CALLBACK Callback);
void vGetpxLnaParameters_Stub(CMOCK_vGetpxLnaParameters_CALLBACK Callback);
#define vGetpxLnaParameters_StubWithCallback vGetpxLnaParameters_Stub
#define vGetpxBoosterParameters_IgnoreAndReturn(cmock_retval) vGetpxBoosterParameters_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void vGetpxBoosterParameters_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, xBoosterParameters_t* cmock_to_return);
#define vGetpxBoosterParameters_StopIgnore() vGetpxBoosterParameters_CMockStopIgnore()
void vGetpxBoosterParameters_CMockStopIgnore(void);
#define vGetpxBoosterParameters_ExpectAndReturn(cmock_retval) vGetpxBoosterParameters_CMockExpectAndReturn(__LINE__, cmock_retval)
void vGetpxBoosterParameters_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, xBoosterParameters_t* cmock_to_return);
typedef xBoosterParameters_t* (* CMOCK_vGetpxBoosterParameters_CALLBACK)(int cmock_num_calls);
void vGetpxBoosterParameters_AddCallback(CMOCK_vGetpxBoosterParameters_CALLBACK Callback);
void vGetpxBoosterParameters_Stub(CMOCK_vGetpxBoosterParameters_CALLBACK Callback);
#define vGetpxBoosterParameters_StubWithCallback vGetpxBoosterParameters_Stub
#define vLaserSetTemperatureInCan_Ignore() vLaserSetTemperatureInCan_CMockIgnore()
void vLaserSetTemperatureInCan_CMockIgnore(void);
#define vLaserSetTemperatureInCan_StopIgnore() vLaserSetTemperatureInCan_CMockStopIgnore()
void vLaserSetTemperatureInCan_CMockStopIgnore(void);
#define vLaserSetTemperatureInCan_ExpectAnyArgs() vLaserSetTemperatureInCan_CMockExpectAnyArgs(__LINE__)
void vLaserSetTemperatureInCan_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vLaserSetTemperatureInCan_Expect(xStream, fTemperatureReaded) vLaserSetTemperatureInCan_CMockExpect(__LINE__, xStream, fTemperatureReaded)
void vLaserSetTemperatureInCan_CMockExpect(UNITY_LINE_TYPE cmock_line, handle_t xStream, float fTemperatureReaded);
typedef void (* CMOCK_vLaserSetTemperatureInCan_CALLBACK)(handle_t xStream, float fTemperatureReaded, int cmock_num_calls);
void vLaserSetTemperatureInCan_AddCallback(CMOCK_vLaserSetTemperatureInCan_CALLBACK Callback);
void vLaserSetTemperatureInCan_Stub(CMOCK_vLaserSetTemperatureInCan_CALLBACK Callback);
#define vLaserSetTemperatureInCan_StubWithCallback vLaserSetTemperatureInCan_Stub
#define vLaserSetTemperatureInCan_IgnoreArg_xStream() vLaserSetTemperatureInCan_CMockIgnoreArg_xStream(__LINE__)
void vLaserSetTemperatureInCan_CMockIgnoreArg_xStream(UNITY_LINE_TYPE cmock_line);
#define vLaserSetTemperatureInCan_IgnoreArg_fTemperatureReaded() vLaserSetTemperatureInCan_CMockIgnoreArg_fTemperatureReaded(__LINE__)
void vLaserSetTemperatureInCan_CMockIgnoreArg_fTemperatureReaded(UNITY_LINE_TYPE cmock_line);
#define eLaserGetLimitTemperature_IgnoreAndReturn(cmock_retval) eLaserGetLimitTemperature_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void eLaserGetLimitTemperature_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, eMpbError_t cmock_to_return);
#define eLaserGetLimitTemperature_StopIgnore() eLaserGetLimitTemperature_CMockStopIgnore()
void eLaserGetLimitTemperature_CMockStopIgnore(void);
#define eLaserGetLimitTemperature_ExpectAnyArgsAndReturn(cmock_retval) eLaserGetLimitTemperature_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void eLaserGetLimitTemperature_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, eMpbError_t cmock_to_return);
#define eLaserGetLimitTemperature_ExpectAndReturn(xStream, pfVeryHighLimit, pfVeryLowLimit, pfHighLimit, cmock_retval) eLaserGetLimitTemperature_CMockExpectAndReturn(__LINE__, xStream, pfVeryHighLimit, pfVeryLowLimit, pfHighLimit, cmock_retval)
void eLaserGetLimitTemperature_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, handle_t xStream, float* pfVeryHighLimit, float* pfVeryLowLimit, float* pfHighLimit, eMpbError_t cmock_to_return);
typedef eMpbError_t (* CMOCK_eLaserGetLimitTemperature_CALLBACK)(handle_t xStream, float* pfVeryHighLimit, float* pfVeryLowLimit, float* pfHighLimit, int cmock_num_calls);
void eLaserGetLimitTemperature_AddCallback(CMOCK_eLaserGetLimitTemperature_CALLBACK Callback);
void eLaserGetLimitTemperature_Stub(CMOCK_eLaserGetLimitTemperature_CALLBACK Callback);
#define eLaserGetLimitTemperature_StubWithCallback eLaserGetLimitTemperature_Stub
#define eLaserGetLimitTemperature_ExpectWithArrayAndReturn(xStream, pfVeryHighLimit, pfVeryHighLimit_Depth, pfVeryLowLimit, pfVeryLowLimit_Depth, pfHighLimit, pfHighLimit_Depth, cmock_retval) eLaserGetLimitTemperature_CMockExpectWithArrayAndReturn(__LINE__, xStream, pfVeryHighLimit, pfVeryHighLimit_Depth, pfVeryLowLimit, pfVeryLowLimit_Depth, pfHighLimit, pfHighLimit_Depth, cmock_retval)
void eLaserGetLimitTemperature_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, handle_t xStream, float* pfVeryHighLimit, int pfVeryHighLimit_Depth, float* pfVeryLowLimit, int pfVeryLowLimit_Depth, float* pfHighLimit, int pfHighLimit_Depth, eMpbError_t cmock_to_return);
#define eLaserGetLimitTemperature_ReturnThruPtr_pfVeryHighLimit(pfVeryHighLimit) eLaserGetLimitTemperature_CMockReturnMemThruPtr_pfVeryHighLimit(__LINE__, pfVeryHighLimit, sizeof(float))
#define eLaserGetLimitTemperature_ReturnArrayThruPtr_pfVeryHighLimit(pfVeryHighLimit, cmock_len) eLaserGetLimitTemperature_CMockReturnMemThruPtr_pfVeryHighLimit(__LINE__, pfVeryHighLimit, cmock_len * sizeof(*pfVeryHighLimit))
#define eLaserGetLimitTemperature_ReturnMemThruPtr_pfVeryHighLimit(pfVeryHighLimit, cmock_size) eLaserGetLimitTemperature_CMockReturnMemThruPtr_pfVeryHighLimit(__LINE__, pfVeryHighLimit, cmock_size)
void eLaserGetLimitTemperature_CMockReturnMemThruPtr_pfVeryHighLimit(UNITY_LINE_TYPE cmock_line, float* pfVeryHighLimit, size_t cmock_size);
#define eLaserGetLimitTemperature_ReturnThruPtr_pfVeryLowLimit(pfVeryLowLimit) eLaserGetLimitTemperature_CMockReturnMemThruPtr_pfVeryLowLimit(__LINE__, pfVeryLowLimit, sizeof(float))
#define eLaserGetLimitTemperature_ReturnArrayThruPtr_pfVeryLowLimit(pfVeryLowLimit, cmock_len) eLaserGetLimitTemperature_CMockReturnMemThruPtr_pfVeryLowLimit(__LINE__, pfVeryLowLimit, cmock_len * sizeof(*pfVeryLowLimit))
#define eLaserGetLimitTemperature_ReturnMemThruPtr_pfVeryLowLimit(pfVeryLowLimit, cmock_size) eLaserGetLimitTemperature_CMockReturnMemThruPtr_pfVeryLowLimit(__LINE__, pfVeryLowLimit, cmock_size)
void eLaserGetLimitTemperature_CMockReturnMemThruPtr_pfVeryLowLimit(UNITY_LINE_TYPE cmock_line, float* pfVeryLowLimit, size_t cmock_size);
#define eLaserGetLimitTemperature_ReturnThruPtr_pfHighLimit(pfHighLimit) eLaserGetLimitTemperature_CMockReturnMemThruPtr_pfHighLimit(__LINE__, pfHighLimit, sizeof(float))
#define eLaserGetLimitTemperature_ReturnArrayThruPtr_pfHighLimit(pfHighLimit, cmock_len) eLaserGetLimitTemperature_CMockReturnMemThruPtr_pfHighLimit(__LINE__, pfHighLimit, cmock_len * sizeof(*pfHighLimit))
#define eLaserGetLimitTemperature_ReturnMemThruPtr_pfHighLimit(pfHighLimit, cmock_size) eLaserGetLimitTemperature_CMockReturnMemThruPtr_pfHighLimit(__LINE__, pfHighLimit, cmock_size)
void eLaserGetLimitTemperature_CMockReturnMemThruPtr_pfHighLimit(UNITY_LINE_TYPE cmock_line, float* pfHighLimit, size_t cmock_size);
#define eLaserGetLimitTemperature_IgnoreArg_xStream() eLaserGetLimitTemperature_CMockIgnoreArg_xStream(__LINE__)
void eLaserGetLimitTemperature_CMockIgnoreArg_xStream(UNITY_LINE_TYPE cmock_line);
#define eLaserGetLimitTemperature_IgnoreArg_pfVeryHighLimit() eLaserGetLimitTemperature_CMockIgnoreArg_pfVeryHighLimit(__LINE__)
void eLaserGetLimitTemperature_CMockIgnoreArg_pfVeryHighLimit(UNITY_LINE_TYPE cmock_line);
#define eLaserGetLimitTemperature_IgnoreArg_pfVeryLowLimit() eLaserGetLimitTemperature_CMockIgnoreArg_pfVeryLowLimit(__LINE__)
void eLaserGetLimitTemperature_CMockIgnoreArg_pfVeryLowLimit(UNITY_LINE_TYPE cmock_line);
#define eLaserGetLimitTemperature_IgnoreArg_pfHighLimit() eLaserGetLimitTemperature_CMockIgnoreArg_pfHighLimit(__LINE__)
void eLaserGetLimitTemperature_CMockIgnoreArg_pfHighLimit(UNITY_LINE_TYPE cmock_line);
#define vLaserSetTemperatureFlagAlarm_Ignore() vLaserSetTemperatureFlagAlarm_CMockIgnore()
void vLaserSetTemperatureFlagAlarm_CMockIgnore(void);
#define vLaserSetTemperatureFlagAlarm_StopIgnore() vLaserSetTemperatureFlagAlarm_CMockStopIgnore()
void vLaserSetTemperatureFlagAlarm_CMockStopIgnore(void);
#define vLaserSetTemperatureFlagAlarm_ExpectAnyArgs() vLaserSetTemperatureFlagAlarm_CMockExpectAnyArgs(__LINE__)
void vLaserSetTemperatureFlagAlarm_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vLaserSetTemperatureFlagAlarm_Expect(xStream, bVeryLowAlarm, bVeryHighAlarm, bHighAlarm) vLaserSetTemperatureFlagAlarm_CMockExpect(__LINE__, xStream, bVeryLowAlarm, bVeryHighAlarm, bHighAlarm)
void vLaserSetTemperatureFlagAlarm_CMockExpect(UNITY_LINE_TYPE cmock_line, handle_t xStream, eBool_t bVeryLowAlarm, eBool_t bVeryHighAlarm, eBool_t bHighAlarm);
typedef void (* CMOCK_vLaserSetTemperatureFlagAlarm_CALLBACK)(handle_t xStream, eBool_t bVeryLowAlarm, eBool_t bVeryHighAlarm, eBool_t bHighAlarm, int cmock_num_calls);
void vLaserSetTemperatureFlagAlarm_AddCallback(CMOCK_vLaserSetTemperatureFlagAlarm_CALLBACK Callback);
void vLaserSetTemperatureFlagAlarm_Stub(CMOCK_vLaserSetTemperatureFlagAlarm_CALLBACK Callback);
#define vLaserSetTemperatureFlagAlarm_StubWithCallback vLaserSetTemperatureFlagAlarm_Stub
#define vLaserSetTemperatureFlagAlarm_IgnoreArg_xStream() vLaserSetTemperatureFlagAlarm_CMockIgnoreArg_xStream(__LINE__)
void vLaserSetTemperatureFlagAlarm_CMockIgnoreArg_xStream(UNITY_LINE_TYPE cmock_line);
#define vLaserSetTemperatureFlagAlarm_IgnoreArg_bVeryLowAlarm() vLaserSetTemperatureFlagAlarm_CMockIgnoreArg_bVeryLowAlarm(__LINE__)
void vLaserSetTemperatureFlagAlarm_CMockIgnoreArg_bVeryLowAlarm(UNITY_LINE_TYPE cmock_line);
#define vLaserSetTemperatureFlagAlarm_IgnoreArg_bVeryHighAlarm() vLaserSetTemperatureFlagAlarm_CMockIgnoreArg_bVeryHighAlarm(__LINE__)
void vLaserSetTemperatureFlagAlarm_CMockIgnoreArg_bVeryHighAlarm(UNITY_LINE_TYPE cmock_line);
#define vLaserSetTemperatureFlagAlarm_IgnoreArg_bHighAlarm() vLaserSetTemperatureFlagAlarm_CMockIgnoreArg_bHighAlarm(__LINE__)
void vLaserSetTemperatureFlagAlarm_CMockIgnoreArg_bHighAlarm(UNITY_LINE_TYPE cmock_line);
#define vGetpxCommonControlParameters_IgnoreAndReturn(cmock_retval) vGetpxCommonControlParameters_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void vGetpxCommonControlParameters_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, xCommonControlParameters_t* cmock_to_return);
#define vGetpxCommonControlParameters_StopIgnore() vGetpxCommonControlParameters_CMockStopIgnore()
void vGetpxCommonControlParameters_CMockStopIgnore(void);
#define vGetpxCommonControlParameters_ExpectAndReturn(cmock_retval) vGetpxCommonControlParameters_CMockExpectAndReturn(__LINE__, cmock_retval)
void vGetpxCommonControlParameters_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, xCommonControlParameters_t* cmock_to_return);
typedef xCommonControlParameters_t* (* CMOCK_vGetpxCommonControlParameters_CALLBACK)(int cmock_num_calls);
void vGetpxCommonControlParameters_AddCallback(CMOCK_vGetpxCommonControlParameters_CALLBACK Callback);
void vGetpxCommonControlParameters_Stub(CMOCK_vGetpxCommonControlParameters_CALLBACK Callback);
#define vGetpxCommonControlParameters_StubWithCallback vGetpxCommonControlParameters_Stub
#define vGet402Message_IgnoreAndReturn(cmock_retval) vGet402Message_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void vGet402Message_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, c402StatusDefinition_t* cmock_to_return);
#define vGet402Message_StopIgnore() vGet402Message_CMockStopIgnore()
void vGet402Message_CMockStopIgnore(void);
#define vGet402Message_ExpectAndReturn(cmock_retval) vGet402Message_CMockExpectAndReturn(__LINE__, cmock_retval)
void vGet402Message_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, c402StatusDefinition_t* cmock_to_return);
typedef c402StatusDefinition_t* (* CMOCK_vGet402Message_CALLBACK)(int cmock_num_calls);
void vGet402Message_AddCallback(CMOCK_vGet402Message_CALLBACK Callback);
void vGet402Message_Stub(CMOCK_vGet402Message_CALLBACK Callback);
#define vGet402Message_StubWithCallback vGet402Message_Stub
#define bCanPort1IsSelected_IgnoreAndReturn(cmock_retval) bCanPort1IsSelected_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void bCanPort1IsSelected_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, eBool_t cmock_to_return);
#define bCanPort1IsSelected_StopIgnore() bCanPort1IsSelected_CMockStopIgnore()
void bCanPort1IsSelected_CMockStopIgnore(void);
#define bCanPort1IsSelected_ExpectAndReturn(cmock_retval) bCanPort1IsSelected_CMockExpectAndReturn(__LINE__, cmock_retval)
void bCanPort1IsSelected_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, eBool_t cmock_to_return);
typedef eBool_t (* CMOCK_bCanPort1IsSelected_CALLBACK)(int cmock_num_calls);
void bCanPort1IsSelected_AddCallback(CMOCK_bCanPort1IsSelected_CALLBACK Callback);
void bCanPort1IsSelected_Stub(CMOCK_bCanPort1IsSelected_CALLBACK Callback);
#define bCanPort1IsSelected_StubWithCallback bCanPort1IsSelected_Stub
#define vSetCanPort1_Ignore() vSetCanPort1_CMockIgnore()
void vSetCanPort1_CMockIgnore(void);
#define vSetCanPort1_StopIgnore() vSetCanPort1_CMockStopIgnore()
void vSetCanPort1_CMockStopIgnore(void);
#define vSetCanPort1_ExpectAnyArgs() vSetCanPort1_CMockExpectAnyArgs(__LINE__)
void vSetCanPort1_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vSetCanPort1_Expect(bSelectCan1) vSetCanPort1_CMockExpect(__LINE__, bSelectCan1)
void vSetCanPort1_CMockExpect(UNITY_LINE_TYPE cmock_line, eBool_t bSelectCan1);
typedef void (* CMOCK_vSetCanPort1_CALLBACK)(eBool_t bSelectCan1, int cmock_num_calls);
void vSetCanPort1_AddCallback(CMOCK_vSetCanPort1_CALLBACK Callback);
void vSetCanPort1_Stub(CMOCK_vSetCanPort1_CALLBACK Callback);
#define vSetCanPort1_StubWithCallback vSetCanPort1_Stub
#define vSetCanPort1_IgnoreArg_bSelectCan1() vSetCanPort1_CMockIgnoreArg_bSelectCan1(__LINE__)
void vSetCanPort1_CMockIgnoreArg_bSelectCan1(UNITY_LINE_TYPE cmock_line);
#define vGetSerialNumber_Ignore() vGetSerialNumber_CMockIgnore()
void vGetSerialNumber_CMockIgnore(void);
#define vGetSerialNumber_StopIgnore() vGetSerialNumber_CMockStopIgnore()
void vGetSerialNumber_CMockStopIgnore(void);
#define vGetSerialNumber_ExpectAnyArgs() vGetSerialNumber_CMockExpectAnyArgs(__LINE__)
void vGetSerialNumber_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vGetSerialNumber_Expect(uSerialNumber) vGetSerialNumber_CMockExpect(__LINE__, uSerialNumber)
void vGetSerialNumber_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t* uSerialNumber);
typedef void (* CMOCK_vGetSerialNumber_CALLBACK)(uint32_t* uSerialNumber, int cmock_num_calls);
void vGetSerialNumber_AddCallback(CMOCK_vGetSerialNumber_CALLBACK Callback);
void vGetSerialNumber_Stub(CMOCK_vGetSerialNumber_CALLBACK Callback);
#define vGetSerialNumber_StubWithCallback vGetSerialNumber_Stub
#define vGetSerialNumber_ExpectWithArray(uSerialNumber, uSerialNumber_Depth) vGetSerialNumber_CMockExpectWithArray(__LINE__, uSerialNumber, uSerialNumber_Depth)
void vGetSerialNumber_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, uint32_t* uSerialNumber, int uSerialNumber_Depth);
#define vGetSerialNumber_ReturnThruPtr_uSerialNumber(uSerialNumber) vGetSerialNumber_CMockReturnMemThruPtr_uSerialNumber(__LINE__, uSerialNumber, sizeof(uint32_t))
#define vGetSerialNumber_ReturnArrayThruPtr_uSerialNumber(uSerialNumber, cmock_len) vGetSerialNumber_CMockReturnMemThruPtr_uSerialNumber(__LINE__, uSerialNumber, cmock_len * sizeof(*uSerialNumber))
#define vGetSerialNumber_ReturnMemThruPtr_uSerialNumber(uSerialNumber, cmock_size) vGetSerialNumber_CMockReturnMemThruPtr_uSerialNumber(__LINE__, uSerialNumber, cmock_size)
void vGetSerialNumber_CMockReturnMemThruPtr_uSerialNumber(UNITY_LINE_TYPE cmock_line, uint32_t* uSerialNumber, size_t cmock_size);
#define vGetSerialNumber_IgnoreArg_uSerialNumber() vGetSerialNumber_CMockIgnoreArg_uSerialNumber(__LINE__)
void vGetSerialNumber_CMockIgnoreArg_uSerialNumber(UNITY_LINE_TYPE cmock_line);
#define vSetSerialNumber_Ignore() vSetSerialNumber_CMockIgnore()
void vSetSerialNumber_CMockIgnore(void);
#define vSetSerialNumber_StopIgnore() vSetSerialNumber_CMockStopIgnore()
void vSetSerialNumber_CMockStopIgnore(void);
#define vSetSerialNumber_ExpectAnyArgs() vSetSerialNumber_CMockExpectAnyArgs(__LINE__)
void vSetSerialNumber_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vSetSerialNumber_Expect(uSerialNumber) vSetSerialNumber_CMockExpect(__LINE__, uSerialNumber)
void vSetSerialNumber_CMockExpect(UNITY_LINE_TYPE cmock_line, uint32_t uSerialNumber);
typedef void (* CMOCK_vSetSerialNumber_CALLBACK)(uint32_t uSerialNumber, int cmock_num_calls);
void vSetSerialNumber_AddCallback(CMOCK_vSetSerialNumber_CALLBACK Callback);
void vSetSerialNumber_Stub(CMOCK_vSetSerialNumber_CALLBACK Callback);
#define vSetSerialNumber_StubWithCallback vSetSerialNumber_Stub
#define vSetSerialNumber_IgnoreArg_uSerialNumber() vSetSerialNumber_CMockIgnoreArg_uSerialNumber(__LINE__)
void vSetSerialNumber_CMockIgnoreArg_uSerialNumber(UNITY_LINE_TYPE cmock_line);
#define vSetSendConfig_Ignore() vSetSendConfig_CMockIgnore()
void vSetSendConfig_CMockIgnore(void);
#define vSetSendConfig_StopIgnore() vSetSendConfig_CMockStopIgnore()
void vSetSendConfig_CMockStopIgnore(void);
#define vSetSendConfig_Expect() vSetSendConfig_CMockExpect(__LINE__)
void vSetSendConfig_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_vSetSendConfig_CALLBACK)(int cmock_num_calls);
void vSetSendConfig_AddCallback(CMOCK_vSetSendConfig_CALLBACK Callback);
void vSetSendConfig_Stub(CMOCK_vSetSendConfig_CALLBACK Callback);
#define vSetSendConfig_StubWithCallback vSetSendConfig_Stub
#define bGetSendConfig_IgnoreAndReturn(cmock_retval) bGetSendConfig_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void bGetSendConfig_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, eBool_t cmock_to_return);
#define bGetSendConfig_StopIgnore() bGetSendConfig_CMockStopIgnore()
void bGetSendConfig_CMockStopIgnore(void);
#define bGetSendConfig_ExpectAndReturn(cmock_retval) bGetSendConfig_CMockExpectAndReturn(__LINE__, cmock_retval)
void bGetSendConfig_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, eBool_t cmock_to_return);
typedef eBool_t (* CMOCK_bGetSendConfig_CALLBACK)(int cmock_num_calls);
void bGetSendConfig_AddCallback(CMOCK_bGetSendConfig_CALLBACK Callback);
void bGetSendConfig_Stub(CMOCK_bGetSendConfig_CALLBACK Callback);
#define bGetSendConfig_StubWithCallback bGetSendConfig_Stub
#define vResetSendConfig_Ignore() vResetSendConfig_CMockIgnore()
void vResetSendConfig_CMockIgnore(void);
#define vResetSendConfig_StopIgnore() vResetSendConfig_CMockStopIgnore()
void vResetSendConfig_CMockStopIgnore(void);
#define vResetSendConfig_Expect() vResetSendConfig_CMockExpect(__LINE__)
void vResetSendConfig_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_vResetSendConfig_CALLBACK)(int cmock_num_calls);
void vResetSendConfig_AddCallback(CMOCK_vResetSendConfig_CALLBACK Callback);
void vResetSendConfig_Stub(CMOCK_vResetSendConfig_CALLBACK Callback);
#define vResetSendConfig_StubWithCallback vResetSendConfig_Stub
#define vGetCompanyId_Ignore() vGetCompanyId_CMockIgnore()
void vGetCompanyId_CMockIgnore(void);
#define vGetCompanyId_StopIgnore() vGetCompanyId_CMockStopIgnore()
void vGetCompanyId_CMockStopIgnore(void);
#define vGetCompanyId_ExpectAnyArgs() vGetCompanyId_CMockExpectAnyArgs(__LINE__)
void vGetCompanyId_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vGetCompanyId_Expect(ucCompanyId) vGetCompanyId_CMockExpect(__LINE__, ucCompanyId)
void vGetCompanyId_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8_t* ucCompanyId);
typedef void (* CMOCK_vGetCompanyId_CALLBACK)(uint8_t* ucCompanyId, int cmock_num_calls);
void vGetCompanyId_AddCallback(CMOCK_vGetCompanyId_CALLBACK Callback);
void vGetCompanyId_Stub(CMOCK_vGetCompanyId_CALLBACK Callback);
#define vGetCompanyId_StubWithCallback vGetCompanyId_Stub
#define vGetCompanyId_ExpectWithArray(ucCompanyId, ucCompanyId_Depth) vGetCompanyId_CMockExpectWithArray(__LINE__, ucCompanyId, ucCompanyId_Depth)
void vGetCompanyId_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, uint8_t* ucCompanyId, int ucCompanyId_Depth);
#define vGetCompanyId_ReturnThruPtr_ucCompanyId(ucCompanyId) vGetCompanyId_CMockReturnMemThruPtr_ucCompanyId(__LINE__, ucCompanyId, sizeof(uint8_t))
#define vGetCompanyId_ReturnArrayThruPtr_ucCompanyId(ucCompanyId, cmock_len) vGetCompanyId_CMockReturnMemThruPtr_ucCompanyId(__LINE__, ucCompanyId, cmock_len * sizeof(*ucCompanyId))
#define vGetCompanyId_ReturnMemThruPtr_ucCompanyId(ucCompanyId, cmock_size) vGetCompanyId_CMockReturnMemThruPtr_ucCompanyId(__LINE__, ucCompanyId, cmock_size)
void vGetCompanyId_CMockReturnMemThruPtr_ucCompanyId(UNITY_LINE_TYPE cmock_line, uint8_t* ucCompanyId, size_t cmock_size);
#define vGetCompanyId_IgnoreArg_ucCompanyId() vGetCompanyId_CMockIgnoreArg_ucCompanyId(__LINE__)
void vGetCompanyId_CMockIgnoreArg_ucCompanyId(UNITY_LINE_TYPE cmock_line);
#define vSetCompanyId_Ignore() vSetCompanyId_CMockIgnore()
void vSetCompanyId_CMockIgnore(void);
#define vSetCompanyId_StopIgnore() vSetCompanyId_CMockStopIgnore()
void vSetCompanyId_CMockStopIgnore(void);
#define vSetCompanyId_ExpectAnyArgs() vSetCompanyId_CMockExpectAnyArgs(__LINE__)
void vSetCompanyId_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vSetCompanyId_Expect(ucCompanyId) vSetCompanyId_CMockExpect(__LINE__, ucCompanyId)
void vSetCompanyId_CMockExpect(UNITY_LINE_TYPE cmock_line, uint8_t ucCompanyId);
typedef void (* CMOCK_vSetCompanyId_CALLBACK)(uint8_t ucCompanyId, int cmock_num_calls);
void vSetCompanyId_AddCallback(CMOCK_vSetCompanyId_CALLBACK Callback);
void vSetCompanyId_Stub(CMOCK_vSetCompanyId_CALLBACK Callback);
#define vSetCompanyId_StubWithCallback vSetCompanyId_Stub
#define vSetCompanyId_IgnoreArg_ucCompanyId() vSetCompanyId_CMockIgnoreArg_ucCompanyId(__LINE__)
void vSetCompanyId_CMockIgnoreArg_ucCompanyId(UNITY_LINE_TYPE cmock_line);
#define vLaserDataGetCan401Info_Ignore() vLaserDataGetCan401Info_CMockIgnore()
void vLaserDataGetCan401Info_CMockIgnore(void);
#define vLaserDataGetCan401Info_StopIgnore() vLaserDataGetCan401Info_CMockStopIgnore()
void vLaserDataGetCan401Info_CMockStopIgnore(void);
#define vLaserDataGetCan401Info_ExpectAnyArgs() vLaserDataGetCan401Info_CMockExpectAnyArgs(__LINE__)
void vLaserDataGetCan401Info_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vLaserDataGetCan401Info_Expect(c401Status1Definition) vLaserDataGetCan401Info_CMockExpect(__LINE__, c401Status1Definition)
void vLaserDataGetCan401Info_CMockExpect(UNITY_LINE_TYPE cmock_line, c401StatusDefinition_t* c401Status1Definition);
typedef void (* CMOCK_vLaserDataGetCan401Info_CALLBACK)(c401StatusDefinition_t* c401Status1Definition, int cmock_num_calls);
void vLaserDataGetCan401Info_AddCallback(CMOCK_vLaserDataGetCan401Info_CALLBACK Callback);
void vLaserDataGetCan401Info_Stub(CMOCK_vLaserDataGetCan401Info_CALLBACK Callback);
#define vLaserDataGetCan401Info_StubWithCallback vLaserDataGetCan401Info_Stub
#define vLaserDataGetCan401Info_ExpectWithArray(c401Status1Definition, c401Status1Definition_Depth) vLaserDataGetCan401Info_CMockExpectWithArray(__LINE__, c401Status1Definition, c401Status1Definition_Depth)
void vLaserDataGetCan401Info_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, c401StatusDefinition_t* c401Status1Definition, int c401Status1Definition_Depth);
#define vLaserDataGetCan401Info_ReturnThruPtr_c401Status1Definition(c401Status1Definition) vLaserDataGetCan401Info_CMockReturnMemThruPtr_c401Status1Definition(__LINE__, c401Status1Definition, sizeof(c401StatusDefinition_t))
#define vLaserDataGetCan401Info_ReturnArrayThruPtr_c401Status1Definition(c401Status1Definition, cmock_len) vLaserDataGetCan401Info_CMockReturnMemThruPtr_c401Status1Definition(__LINE__, c401Status1Definition, cmock_len * sizeof(*c401Status1Definition))
#define vLaserDataGetCan401Info_ReturnMemThruPtr_c401Status1Definition(c401Status1Definition, cmock_size) vLaserDataGetCan401Info_CMockReturnMemThruPtr_c401Status1Definition(__LINE__, c401Status1Definition, cmock_size)
void vLaserDataGetCan401Info_CMockReturnMemThruPtr_c401Status1Definition(UNITY_LINE_TYPE cmock_line, c401StatusDefinition_t* c401Status1Definition, size_t cmock_size);
#define vLaserDataGetCan401Info_IgnoreArg_c401Status1Definition() vLaserDataGetCan401Info_CMockIgnoreArg_c401Status1Definition(__LINE__)
void vLaserDataGetCan401Info_CMockIgnoreArg_c401Status1Definition(UNITY_LINE_TYPE cmock_line);
#define pLaserDataGetCan414Info_IgnoreAndReturn(cmock_retval) pLaserDataGetCan414Info_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void pLaserDataGetCan414Info_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, c414StatusDefinition_t* cmock_to_return);
#define pLaserDataGetCan414Info_StopIgnore() pLaserDataGetCan414Info_CMockStopIgnore()
void pLaserDataGetCan414Info_CMockStopIgnore(void);
#define pLaserDataGetCan414Info_ExpectAndReturn(cmock_retval) pLaserDataGetCan414Info_CMockExpectAndReturn(__LINE__, cmock_retval)
void pLaserDataGetCan414Info_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, c414StatusDefinition_t* cmock_to_return);
typedef c414StatusDefinition_t* (* CMOCK_pLaserDataGetCan414Info_CALLBACK)(int cmock_num_calls);
void pLaserDataGetCan414Info_AddCallback(CMOCK_pLaserDataGetCan414Info_CALLBACK Callback);
void pLaserDataGetCan414Info_Stub(CMOCK_pLaserDataGetCan414Info_CALLBACK Callback);
#define pLaserDataGetCan414Info_StubWithCallback pLaserDataGetCan414Info_Stub
#define pLaserDataGetCan415Info_IgnoreAndReturn(cmock_retval) pLaserDataGetCan415Info_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void pLaserDataGetCan415Info_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, c415StatusDefinition_t* cmock_to_return);
#define pLaserDataGetCan415Info_StopIgnore() pLaserDataGetCan415Info_CMockStopIgnore()
void pLaserDataGetCan415Info_CMockStopIgnore(void);
#define pLaserDataGetCan415Info_ExpectAndReturn(cmock_retval) pLaserDataGetCan415Info_CMockExpectAndReturn(__LINE__, cmock_retval)
void pLaserDataGetCan415Info_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, c415StatusDefinition_t* cmock_to_return);
typedef c415StatusDefinition_t* (* CMOCK_pLaserDataGetCan415Info_CALLBACK)(int cmock_num_calls);
void pLaserDataGetCan415Info_AddCallback(CMOCK_pLaserDataGetCan415Info_CALLBACK Callback);
void pLaserDataGetCan415Info_Stub(CMOCK_pLaserDataGetCan415Info_CALLBACK Callback);
#define pLaserDataGetCan415Info_StubWithCallback pLaserDataGetCan415Info_Stub
#define vLaserDataGetData402_IgnoreAndReturn(cmock_retval) vLaserDataGetData402_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void vLaserDataGetData402_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, c402StatusDefinition_t* cmock_to_return);
#define vLaserDataGetData402_StopIgnore() vLaserDataGetData402_CMockStopIgnore()
void vLaserDataGetData402_CMockStopIgnore(void);
#define vLaserDataGetData402_ExpectAndReturn(cmock_retval) vLaserDataGetData402_CMockExpectAndReturn(__LINE__, cmock_retval)
void vLaserDataGetData402_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, c402StatusDefinition_t* cmock_to_return);
typedef c402StatusDefinition_t* (* CMOCK_vLaserDataGetData402_CALLBACK)(int cmock_num_calls);
void vLaserDataGetData402_AddCallback(CMOCK_vLaserDataGetData402_CALLBACK Callback);
void vLaserDataGetData402_Stub(CMOCK_vLaserDataGetData402_CALLBACK Callback);
#define vLaserDataGetData402_StubWithCallback vLaserDataGetData402_Stub
#define vLaserDataGetCan402Info_Ignore() vLaserDataGetCan402Info_CMockIgnore()
void vLaserDataGetCan402Info_CMockIgnore(void);
#define vLaserDataGetCan402Info_StopIgnore() vLaserDataGetCan402Info_CMockStopIgnore()
void vLaserDataGetCan402Info_CMockStopIgnore(void);
#define vLaserDataGetCan402Info_ExpectAnyArgs() vLaserDataGetCan402Info_CMockExpectAnyArgs(__LINE__)
void vLaserDataGetCan402Info_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vLaserDataGetCan402Info_Expect(c402StatusDefinition) vLaserDataGetCan402Info_CMockExpect(__LINE__, c402StatusDefinition)
void vLaserDataGetCan402Info_CMockExpect(UNITY_LINE_TYPE cmock_line, c402StatusDefinition_t* c402StatusDefinition);
typedef void (* CMOCK_vLaserDataGetCan402Info_CALLBACK)(c402StatusDefinition_t* c402StatusDefinition, int cmock_num_calls);
void vLaserDataGetCan402Info_AddCallback(CMOCK_vLaserDataGetCan402Info_CALLBACK Callback);
void vLaserDataGetCan402Info_Stub(CMOCK_vLaserDataGetCan402Info_CALLBACK Callback);
#define vLaserDataGetCan402Info_StubWithCallback vLaserDataGetCan402Info_Stub
#define vLaserDataGetCan402Info_ExpectWithArray(c402StatusDefinition, c402StatusDefinition_Depth) vLaserDataGetCan402Info_CMockExpectWithArray(__LINE__, c402StatusDefinition, c402StatusDefinition_Depth)
void vLaserDataGetCan402Info_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, c402StatusDefinition_t* c402StatusDefinition, int c402StatusDefinition_Depth);
#define vLaserDataGetCan402Info_ReturnThruPtr_c402StatusDefinition(c402StatusDefinition) vLaserDataGetCan402Info_CMockReturnMemThruPtr_c402StatusDefinition(__LINE__, c402StatusDefinition, sizeof(c402StatusDefinition_t))
#define vLaserDataGetCan402Info_ReturnArrayThruPtr_c402StatusDefinition(c402StatusDefinition, cmock_len) vLaserDataGetCan402Info_CMockReturnMemThruPtr_c402StatusDefinition(__LINE__, c402StatusDefinition, cmock_len * sizeof(*c402StatusDefinition))
#define vLaserDataGetCan402Info_ReturnMemThruPtr_c402StatusDefinition(c402StatusDefinition, cmock_size) vLaserDataGetCan402Info_CMockReturnMemThruPtr_c402StatusDefinition(__LINE__, c402StatusDefinition, cmock_size)
void vLaserDataGetCan402Info_CMockReturnMemThruPtr_c402StatusDefinition(UNITY_LINE_TYPE cmock_line, c402StatusDefinition_t* c402StatusDefinition, size_t cmock_size);
#define vLaserDataGetCan402Info_IgnoreArg_c402StatusDefinition() vLaserDataGetCan402Info_CMockIgnoreArg_c402StatusDefinition(__LINE__)
void vLaserDataGetCan402Info_CMockIgnoreArg_c402StatusDefinition(UNITY_LINE_TYPE cmock_line);
#define pLaserDataGetCan402Pointer_IgnoreAndReturn(cmock_retval) pLaserDataGetCan402Pointer_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void pLaserDataGetCan402Pointer_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, c402StatusDefinition_t* cmock_to_return);
#define pLaserDataGetCan402Pointer_StopIgnore() pLaserDataGetCan402Pointer_CMockStopIgnore()
void pLaserDataGetCan402Pointer_CMockStopIgnore(void);
#define pLaserDataGetCan402Pointer_ExpectAndReturn(cmock_retval) pLaserDataGetCan402Pointer_CMockExpectAndReturn(__LINE__, cmock_retval)
void pLaserDataGetCan402Pointer_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, c402StatusDefinition_t* cmock_to_return);
typedef c402StatusDefinition_t* (* CMOCK_pLaserDataGetCan402Pointer_CALLBACK)(int cmock_num_calls);
void pLaserDataGetCan402Pointer_AddCallback(CMOCK_pLaserDataGetCan402Pointer_CALLBACK Callback);
void pLaserDataGetCan402Pointer_Stub(CMOCK_pLaserDataGetCan402Pointer_CALLBACK Callback);
#define pLaserDataGetCan402Pointer_StubWithCallback pLaserDataGetCan402Pointer_Stub
#define vLaserDataGetCan403Info_Ignore() vLaserDataGetCan403Info_CMockIgnore()
void vLaserDataGetCan403Info_CMockIgnore(void);
#define vLaserDataGetCan403Info_StopIgnore() vLaserDataGetCan403Info_CMockStopIgnore()
void vLaserDataGetCan403Info_CMockStopIgnore(void);
#define vLaserDataGetCan403Info_ExpectAnyArgs() vLaserDataGetCan403Info_CMockExpectAnyArgs(__LINE__)
void vLaserDataGetCan403Info_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vLaserDataGetCan403Info_Expect(c403StatusDefinition) vLaserDataGetCan403Info_CMockExpect(__LINE__, c403StatusDefinition)
void vLaserDataGetCan403Info_CMockExpect(UNITY_LINE_TYPE cmock_line, c403StatusDefinition_t* c403StatusDefinition);
typedef void (* CMOCK_vLaserDataGetCan403Info_CALLBACK)(c403StatusDefinition_t* c403StatusDefinition, int cmock_num_calls);
void vLaserDataGetCan403Info_AddCallback(CMOCK_vLaserDataGetCan403Info_CALLBACK Callback);
void vLaserDataGetCan403Info_Stub(CMOCK_vLaserDataGetCan403Info_CALLBACK Callback);
#define vLaserDataGetCan403Info_StubWithCallback vLaserDataGetCan403Info_Stub
#define vLaserDataGetCan403Info_ExpectWithArray(c403StatusDefinition, c403StatusDefinition_Depth) vLaserDataGetCan403Info_CMockExpectWithArray(__LINE__, c403StatusDefinition, c403StatusDefinition_Depth)
void vLaserDataGetCan403Info_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, c403StatusDefinition_t* c403StatusDefinition, int c403StatusDefinition_Depth);
#define vLaserDataGetCan403Info_ReturnThruPtr_c403StatusDefinition(c403StatusDefinition) vLaserDataGetCan403Info_CMockReturnMemThruPtr_c403StatusDefinition(__LINE__, c403StatusDefinition, sizeof(c403StatusDefinition_t))
#define vLaserDataGetCan403Info_ReturnArrayThruPtr_c403StatusDefinition(c403StatusDefinition, cmock_len) vLaserDataGetCan403Info_CMockReturnMemThruPtr_c403StatusDefinition(__LINE__, c403StatusDefinition, cmock_len * sizeof(*c403StatusDefinition))
#define vLaserDataGetCan403Info_ReturnMemThruPtr_c403StatusDefinition(c403StatusDefinition, cmock_size) vLaserDataGetCan403Info_CMockReturnMemThruPtr_c403StatusDefinition(__LINE__, c403StatusDefinition, cmock_size)
void vLaserDataGetCan403Info_CMockReturnMemThruPtr_c403StatusDefinition(UNITY_LINE_TYPE cmock_line, c403StatusDefinition_t* c403StatusDefinition, size_t cmock_size);
#define vLaserDataGetCan403Info_IgnoreArg_c403StatusDefinition() vLaserDataGetCan403Info_CMockIgnoreArg_c403StatusDefinition(__LINE__)
void vLaserDataGetCan403Info_CMockIgnoreArg_c403StatusDefinition(UNITY_LINE_TYPE cmock_line);
#define vLaserDataGetCan404Info_Ignore() vLaserDataGetCan404Info_CMockIgnore()
void vLaserDataGetCan404Info_CMockIgnore(void);
#define vLaserDataGetCan404Info_StopIgnore() vLaserDataGetCan404Info_CMockStopIgnore()
void vLaserDataGetCan404Info_CMockStopIgnore(void);
#define vLaserDataGetCan404Info_ExpectAnyArgs() vLaserDataGetCan404Info_CMockExpectAnyArgs(__LINE__)
void vLaserDataGetCan404Info_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vLaserDataGetCan404Info_Expect(c404StatusDefinition) vLaserDataGetCan404Info_CMockExpect(__LINE__, c404StatusDefinition)
void vLaserDataGetCan404Info_CMockExpect(UNITY_LINE_TYPE cmock_line, c404StatusDefinition_t* c404StatusDefinition);
typedef void (* CMOCK_vLaserDataGetCan404Info_CALLBACK)(c404StatusDefinition_t* c404StatusDefinition, int cmock_num_calls);
void vLaserDataGetCan404Info_AddCallback(CMOCK_vLaserDataGetCan404Info_CALLBACK Callback);
void vLaserDataGetCan404Info_Stub(CMOCK_vLaserDataGetCan404Info_CALLBACK Callback);
#define vLaserDataGetCan404Info_StubWithCallback vLaserDataGetCan404Info_Stub
#define vLaserDataGetCan404Info_ExpectWithArray(c404StatusDefinition, c404StatusDefinition_Depth) vLaserDataGetCan404Info_CMockExpectWithArray(__LINE__, c404StatusDefinition, c404StatusDefinition_Depth)
void vLaserDataGetCan404Info_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, c404StatusDefinition_t* c404StatusDefinition, int c404StatusDefinition_Depth);
#define vLaserDataGetCan404Info_ReturnThruPtr_c404StatusDefinition(c404StatusDefinition) vLaserDataGetCan404Info_CMockReturnMemThruPtr_c404StatusDefinition(__LINE__, c404StatusDefinition, sizeof(c404StatusDefinition_t))
#define vLaserDataGetCan404Info_ReturnArrayThruPtr_c404StatusDefinition(c404StatusDefinition, cmock_len) vLaserDataGetCan404Info_CMockReturnMemThruPtr_c404StatusDefinition(__LINE__, c404StatusDefinition, cmock_len * sizeof(*c404StatusDefinition))
#define vLaserDataGetCan404Info_ReturnMemThruPtr_c404StatusDefinition(c404StatusDefinition, cmock_size) vLaserDataGetCan404Info_CMockReturnMemThruPtr_c404StatusDefinition(__LINE__, c404StatusDefinition, cmock_size)
void vLaserDataGetCan404Info_CMockReturnMemThruPtr_c404StatusDefinition(UNITY_LINE_TYPE cmock_line, c404StatusDefinition_t* c404StatusDefinition, size_t cmock_size);
#define vLaserDataGetCan404Info_IgnoreArg_c404StatusDefinition() vLaserDataGetCan404Info_CMockIgnoreArg_c404StatusDefinition(__LINE__)
void vLaserDataGetCan404Info_CMockIgnoreArg_c404StatusDefinition(UNITY_LINE_TYPE cmock_line);
#define vLaserDataGetCan405Info_Ignore() vLaserDataGetCan405Info_CMockIgnore()
void vLaserDataGetCan405Info_CMockIgnore(void);
#define vLaserDataGetCan405Info_StopIgnore() vLaserDataGetCan405Info_CMockStopIgnore()
void vLaserDataGetCan405Info_CMockStopIgnore(void);
#define vLaserDataGetCan405Info_ExpectAnyArgs() vLaserDataGetCan405Info_CMockExpectAnyArgs(__LINE__)
void vLaserDataGetCan405Info_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vLaserDataGetCan405Info_Expect(c405Definition) vLaserDataGetCan405Info_CMockExpect(__LINE__, c405Definition)
void vLaserDataGetCan405Info_CMockExpect(UNITY_LINE_TYPE cmock_line, c405Definition_t* c405Definition);
typedef void (* CMOCK_vLaserDataGetCan405Info_CALLBACK)(c405Definition_t* c405Definition, int cmock_num_calls);
void vLaserDataGetCan405Info_AddCallback(CMOCK_vLaserDataGetCan405Info_CALLBACK Callback);
void vLaserDataGetCan405Info_Stub(CMOCK_vLaserDataGetCan405Info_CALLBACK Callback);
#define vLaserDataGetCan405Info_StubWithCallback vLaserDataGetCan405Info_Stub
#define vLaserDataGetCan405Info_ExpectWithArray(c405Definition, c405Definition_Depth) vLaserDataGetCan405Info_CMockExpectWithArray(__LINE__, c405Definition, c405Definition_Depth)
void vLaserDataGetCan405Info_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, c405Definition_t* c405Definition, int c405Definition_Depth);
#define vLaserDataGetCan405Info_ReturnThruPtr_c405Definition(c405Definition) vLaserDataGetCan405Info_CMockReturnMemThruPtr_c405Definition(__LINE__, c405Definition, sizeof(c405Definition_t))
#define vLaserDataGetCan405Info_ReturnArrayThruPtr_c405Definition(c405Definition, cmock_len) vLaserDataGetCan405Info_CMockReturnMemThruPtr_c405Definition(__LINE__, c405Definition, cmock_len * sizeof(*c405Definition))
#define vLaserDataGetCan405Info_ReturnMemThruPtr_c405Definition(c405Definition, cmock_size) vLaserDataGetCan405Info_CMockReturnMemThruPtr_c405Definition(__LINE__, c405Definition, cmock_size)
void vLaserDataGetCan405Info_CMockReturnMemThruPtr_c405Definition(UNITY_LINE_TYPE cmock_line, c405Definition_t* c405Definition, size_t cmock_size);
#define vLaserDataGetCan405Info_IgnoreArg_c405Definition() vLaserDataGetCan405Info_CMockIgnoreArg_c405Definition(__LINE__)
void vLaserDataGetCan405Info_CMockIgnoreArg_c405Definition(UNITY_LINE_TYPE cmock_line);
#define vLaserDataGetData406_IgnoreAndReturn(cmock_retval) vLaserDataGetData406_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void vLaserDataGetData406_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, c406PacketControlDefinition_t* cmock_to_return);
#define vLaserDataGetData406_StopIgnore() vLaserDataGetData406_CMockStopIgnore()
void vLaserDataGetData406_CMockStopIgnore(void);
#define vLaserDataGetData406_ExpectAndReturn(cmock_retval) vLaserDataGetData406_CMockExpectAndReturn(__LINE__, cmock_retval)
void vLaserDataGetData406_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, c406PacketControlDefinition_t* cmock_to_return);
typedef c406PacketControlDefinition_t* (* CMOCK_vLaserDataGetData406_CALLBACK)(int cmock_num_calls);
void vLaserDataGetData406_AddCallback(CMOCK_vLaserDataGetData406_CALLBACK Callback);
void vLaserDataGetData406_Stub(CMOCK_vLaserDataGetData406_CALLBACK Callback);
#define vLaserDataGetData406_StubWithCallback vLaserDataGetData406_Stub
#define vLaserDataGetCan406Info_Ignore() vLaserDataGetCan406Info_CMockIgnore()
void vLaserDataGetCan406Info_CMockIgnore(void);
#define vLaserDataGetCan406Info_StopIgnore() vLaserDataGetCan406Info_CMockStopIgnore()
void vLaserDataGetCan406Info_CMockStopIgnore(void);
#define vLaserDataGetCan406Info_ExpectAnyArgs() vLaserDataGetCan406Info_CMockExpectAnyArgs(__LINE__)
void vLaserDataGetCan406Info_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vLaserDataGetCan406Info_Expect(c406PacketControlDefinition) vLaserDataGetCan406Info_CMockExpect(__LINE__, c406PacketControlDefinition)
void vLaserDataGetCan406Info_CMockExpect(UNITY_LINE_TYPE cmock_line, c406PacketControlDefinition_t* c406PacketControlDefinition);
typedef void (* CMOCK_vLaserDataGetCan406Info_CALLBACK)(c406PacketControlDefinition_t* c406PacketControlDefinition, int cmock_num_calls);
void vLaserDataGetCan406Info_AddCallback(CMOCK_vLaserDataGetCan406Info_CALLBACK Callback);
void vLaserDataGetCan406Info_Stub(CMOCK_vLaserDataGetCan406Info_CALLBACK Callback);
#define vLaserDataGetCan406Info_StubWithCallback vLaserDataGetCan406Info_Stub
#define vLaserDataGetCan406Info_ExpectWithArray(c406PacketControlDefinition, c406PacketControlDefinition_Depth) vLaserDataGetCan406Info_CMockExpectWithArray(__LINE__, c406PacketControlDefinition, c406PacketControlDefinition_Depth)
void vLaserDataGetCan406Info_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, c406PacketControlDefinition_t* c406PacketControlDefinition, int c406PacketControlDefinition_Depth);
#define vLaserDataGetCan406Info_ReturnThruPtr_c406PacketControlDefinition(c406PacketControlDefinition) vLaserDataGetCan406Info_CMockReturnMemThruPtr_c406PacketControlDefinition(__LINE__, c406PacketControlDefinition, sizeof(c406PacketControlDefinition_t))
#define vLaserDataGetCan406Info_ReturnArrayThruPtr_c406PacketControlDefinition(c406PacketControlDefinition, cmock_len) vLaserDataGetCan406Info_CMockReturnMemThruPtr_c406PacketControlDefinition(__LINE__, c406PacketControlDefinition, cmock_len * sizeof(*c406PacketControlDefinition))
#define vLaserDataGetCan406Info_ReturnMemThruPtr_c406PacketControlDefinition(c406PacketControlDefinition, cmock_size) vLaserDataGetCan406Info_CMockReturnMemThruPtr_c406PacketControlDefinition(__LINE__, c406PacketControlDefinition, cmock_size)
void vLaserDataGetCan406Info_CMockReturnMemThruPtr_c406PacketControlDefinition(UNITY_LINE_TYPE cmock_line, c406PacketControlDefinition_t* c406PacketControlDefinition, size_t cmock_size);
#define vLaserDataGetCan406Info_IgnoreArg_c406PacketControlDefinition() vLaserDataGetCan406Info_CMockIgnoreArg_c406PacketControlDefinition(__LINE__)
void vLaserDataGetCan406Info_CMockIgnoreArg_c406PacketControlDefinition(UNITY_LINE_TYPE cmock_line);
#define vLaserDataSetCan406Info_Ignore() vLaserDataSetCan406Info_CMockIgnore()
void vLaserDataSetCan406Info_CMockIgnore(void);
#define vLaserDataSetCan406Info_StopIgnore() vLaserDataSetCan406Info_CMockStopIgnore()
void vLaserDataSetCan406Info_CMockStopIgnore(void);
#define vLaserDataSetCan406Info_ExpectAnyArgs() vLaserDataSetCan406Info_CMockExpectAnyArgs(__LINE__)
void vLaserDataSetCan406Info_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vLaserDataSetCan406Info_Expect(c406PacketControlDefinition) vLaserDataSetCan406Info_CMockExpect(__LINE__, c406PacketControlDefinition)
void vLaserDataSetCan406Info_CMockExpect(UNITY_LINE_TYPE cmock_line, c406PacketControlDefinition_t* c406PacketControlDefinition);
typedef void (* CMOCK_vLaserDataSetCan406Info_CALLBACK)(c406PacketControlDefinition_t* c406PacketControlDefinition, int cmock_num_calls);
void vLaserDataSetCan406Info_AddCallback(CMOCK_vLaserDataSetCan406Info_CALLBACK Callback);
void vLaserDataSetCan406Info_Stub(CMOCK_vLaserDataSetCan406Info_CALLBACK Callback);
#define vLaserDataSetCan406Info_StubWithCallback vLaserDataSetCan406Info_Stub
#define vLaserDataSetCan406Info_ExpectWithArray(c406PacketControlDefinition, c406PacketControlDefinition_Depth) vLaserDataSetCan406Info_CMockExpectWithArray(__LINE__, c406PacketControlDefinition, c406PacketControlDefinition_Depth)
void vLaserDataSetCan406Info_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, c406PacketControlDefinition_t* c406PacketControlDefinition, int c406PacketControlDefinition_Depth);
#define vLaserDataSetCan406Info_ReturnThruPtr_c406PacketControlDefinition(c406PacketControlDefinition) vLaserDataSetCan406Info_CMockReturnMemThruPtr_c406PacketControlDefinition(__LINE__, c406PacketControlDefinition, sizeof(c406PacketControlDefinition_t))
#define vLaserDataSetCan406Info_ReturnArrayThruPtr_c406PacketControlDefinition(c406PacketControlDefinition, cmock_len) vLaserDataSetCan406Info_CMockReturnMemThruPtr_c406PacketControlDefinition(__LINE__, c406PacketControlDefinition, cmock_len * sizeof(*c406PacketControlDefinition))
#define vLaserDataSetCan406Info_ReturnMemThruPtr_c406PacketControlDefinition(c406PacketControlDefinition, cmock_size) vLaserDataSetCan406Info_CMockReturnMemThruPtr_c406PacketControlDefinition(__LINE__, c406PacketControlDefinition, cmock_size)
void vLaserDataSetCan406Info_CMockReturnMemThruPtr_c406PacketControlDefinition(UNITY_LINE_TYPE cmock_line, c406PacketControlDefinition_t* c406PacketControlDefinition, size_t cmock_size);
#define vLaserDataSetCan406Info_IgnoreArg_c406PacketControlDefinition() vLaserDataSetCan406Info_CMockIgnoreArg_c406PacketControlDefinition(__LINE__)
void vLaserDataSetCan406Info_CMockIgnoreArg_c406PacketControlDefinition(UNITY_LINE_TYPE cmock_line);
#define vLaserDataGetData407_IgnoreAndReturn(cmock_retval) vLaserDataGetData407_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void vLaserDataGetData407_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, c407PacketControlDefinition_t* cmock_to_return);
#define vLaserDataGetData407_StopIgnore() vLaserDataGetData407_CMockStopIgnore()
void vLaserDataGetData407_CMockStopIgnore(void);
#define vLaserDataGetData407_ExpectAndReturn(cmock_retval) vLaserDataGetData407_CMockExpectAndReturn(__LINE__, cmock_retval)
void vLaserDataGetData407_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, c407PacketControlDefinition_t* cmock_to_return);
typedef c407PacketControlDefinition_t* (* CMOCK_vLaserDataGetData407_CALLBACK)(int cmock_num_calls);
void vLaserDataGetData407_AddCallback(CMOCK_vLaserDataGetData407_CALLBACK Callback);
void vLaserDataGetData407_Stub(CMOCK_vLaserDataGetData407_CALLBACK Callback);
#define vLaserDataGetData407_StubWithCallback vLaserDataGetData407_Stub
#define vLaserDataGetCan407Info_Ignore() vLaserDataGetCan407Info_CMockIgnore()
void vLaserDataGetCan407Info_CMockIgnore(void);
#define vLaserDataGetCan407Info_StopIgnore() vLaserDataGetCan407Info_CMockStopIgnore()
void vLaserDataGetCan407Info_CMockStopIgnore(void);
#define vLaserDataGetCan407Info_ExpectAnyArgs() vLaserDataGetCan407Info_CMockExpectAnyArgs(__LINE__)
void vLaserDataGetCan407Info_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vLaserDataGetCan407Info_Expect(c407PacketControlDefinition) vLaserDataGetCan407Info_CMockExpect(__LINE__, c407PacketControlDefinition)
void vLaserDataGetCan407Info_CMockExpect(UNITY_LINE_TYPE cmock_line, c407PacketControlDefinition_t* c407PacketControlDefinition);
typedef void (* CMOCK_vLaserDataGetCan407Info_CALLBACK)(c407PacketControlDefinition_t* c407PacketControlDefinition, int cmock_num_calls);
void vLaserDataGetCan407Info_AddCallback(CMOCK_vLaserDataGetCan407Info_CALLBACK Callback);
void vLaserDataGetCan407Info_Stub(CMOCK_vLaserDataGetCan407Info_CALLBACK Callback);
#define vLaserDataGetCan407Info_StubWithCallback vLaserDataGetCan407Info_Stub
#define vLaserDataGetCan407Info_ExpectWithArray(c407PacketControlDefinition, c407PacketControlDefinition_Depth) vLaserDataGetCan407Info_CMockExpectWithArray(__LINE__, c407PacketControlDefinition, c407PacketControlDefinition_Depth)
void vLaserDataGetCan407Info_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, c407PacketControlDefinition_t* c407PacketControlDefinition, int c407PacketControlDefinition_Depth);
#define vLaserDataGetCan407Info_ReturnThruPtr_c407PacketControlDefinition(c407PacketControlDefinition) vLaserDataGetCan407Info_CMockReturnMemThruPtr_c407PacketControlDefinition(__LINE__, c407PacketControlDefinition, sizeof(c407PacketControlDefinition_t))
#define vLaserDataGetCan407Info_ReturnArrayThruPtr_c407PacketControlDefinition(c407PacketControlDefinition, cmock_len) vLaserDataGetCan407Info_CMockReturnMemThruPtr_c407PacketControlDefinition(__LINE__, c407PacketControlDefinition, cmock_len * sizeof(*c407PacketControlDefinition))
#define vLaserDataGetCan407Info_ReturnMemThruPtr_c407PacketControlDefinition(c407PacketControlDefinition, cmock_size) vLaserDataGetCan407Info_CMockReturnMemThruPtr_c407PacketControlDefinition(__LINE__, c407PacketControlDefinition, cmock_size)
void vLaserDataGetCan407Info_CMockReturnMemThruPtr_c407PacketControlDefinition(UNITY_LINE_TYPE cmock_line, c407PacketControlDefinition_t* c407PacketControlDefinition, size_t cmock_size);
#define vLaserDataGetCan407Info_IgnoreArg_c407PacketControlDefinition() vLaserDataGetCan407Info_CMockIgnoreArg_c407PacketControlDefinition(__LINE__)
void vLaserDataGetCan407Info_CMockIgnoreArg_c407PacketControlDefinition(UNITY_LINE_TYPE cmock_line);
#define vLaserDataSetCan407Info_Ignore() vLaserDataSetCan407Info_CMockIgnore()
void vLaserDataSetCan407Info_CMockIgnore(void);
#define vLaserDataSetCan407Info_StopIgnore() vLaserDataSetCan407Info_CMockStopIgnore()
void vLaserDataSetCan407Info_CMockStopIgnore(void);
#define vLaserDataSetCan407Info_ExpectAnyArgs() vLaserDataSetCan407Info_CMockExpectAnyArgs(__LINE__)
void vLaserDataSetCan407Info_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vLaserDataSetCan407Info_Expect(c407PacketControlDefinition) vLaserDataSetCan407Info_CMockExpect(__LINE__, c407PacketControlDefinition)
void vLaserDataSetCan407Info_CMockExpect(UNITY_LINE_TYPE cmock_line, c407PacketControlDefinition_t* c407PacketControlDefinition);
typedef void (* CMOCK_vLaserDataSetCan407Info_CALLBACK)(c407PacketControlDefinition_t* c407PacketControlDefinition, int cmock_num_calls);
void vLaserDataSetCan407Info_AddCallback(CMOCK_vLaserDataSetCan407Info_CALLBACK Callback);
void vLaserDataSetCan407Info_Stub(CMOCK_vLaserDataSetCan407Info_CALLBACK Callback);
#define vLaserDataSetCan407Info_StubWithCallback vLaserDataSetCan407Info_Stub
#define vLaserDataSetCan407Info_ExpectWithArray(c407PacketControlDefinition, c407PacketControlDefinition_Depth) vLaserDataSetCan407Info_CMockExpectWithArray(__LINE__, c407PacketControlDefinition, c407PacketControlDefinition_Depth)
void vLaserDataSetCan407Info_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, c407PacketControlDefinition_t* c407PacketControlDefinition, int c407PacketControlDefinition_Depth);
#define vLaserDataSetCan407Info_ReturnThruPtr_c407PacketControlDefinition(c407PacketControlDefinition) vLaserDataSetCan407Info_CMockReturnMemThruPtr_c407PacketControlDefinition(__LINE__, c407PacketControlDefinition, sizeof(c407PacketControlDefinition_t))
#define vLaserDataSetCan407Info_ReturnArrayThruPtr_c407PacketControlDefinition(c407PacketControlDefinition, cmock_len) vLaserDataSetCan407Info_CMockReturnMemThruPtr_c407PacketControlDefinition(__LINE__, c407PacketControlDefinition, cmock_len * sizeof(*c407PacketControlDefinition))
#define vLaserDataSetCan407Info_ReturnMemThruPtr_c407PacketControlDefinition(c407PacketControlDefinition, cmock_size) vLaserDataSetCan407Info_CMockReturnMemThruPtr_c407PacketControlDefinition(__LINE__, c407PacketControlDefinition, cmock_size)
void vLaserDataSetCan407Info_CMockReturnMemThruPtr_c407PacketControlDefinition(UNITY_LINE_TYPE cmock_line, c407PacketControlDefinition_t* c407PacketControlDefinition, size_t cmock_size);
#define vLaserDataSetCan407Info_IgnoreArg_c407PacketControlDefinition() vLaserDataSetCan407Info_CMockIgnoreArg_c407PacketControlDefinition(__LINE__)
void vLaserDataSetCan407Info_CMockIgnoreArg_c407PacketControlDefinition(UNITY_LINE_TYPE cmock_line);
#define vLaserDataGetData408_IgnoreAndReturn(cmock_retval) vLaserDataGetData408_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void vLaserDataGetData408_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, c408StatusDefinition_t* cmock_to_return);
#define vLaserDataGetData408_StopIgnore() vLaserDataGetData408_CMockStopIgnore()
void vLaserDataGetData408_CMockStopIgnore(void);
#define vLaserDataGetData408_ExpectAndReturn(cmock_retval) vLaserDataGetData408_CMockExpectAndReturn(__LINE__, cmock_retval)
void vLaserDataGetData408_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, c408StatusDefinition_t* cmock_to_return);
typedef c408StatusDefinition_t* (* CMOCK_vLaserDataGetData408_CALLBACK)(int cmock_num_calls);
void vLaserDataGetData408_AddCallback(CMOCK_vLaserDataGetData408_CALLBACK Callback);
void vLaserDataGetData408_Stub(CMOCK_vLaserDataGetData408_CALLBACK Callback);
#define vLaserDataGetData408_StubWithCallback vLaserDataGetData408_Stub
#define vLaserDataGetCan408Info_Ignore() vLaserDataGetCan408Info_CMockIgnore()
void vLaserDataGetCan408Info_CMockIgnore(void);
#define vLaserDataGetCan408Info_StopIgnore() vLaserDataGetCan408Info_CMockStopIgnore()
void vLaserDataGetCan408Info_CMockStopIgnore(void);
#define vLaserDataGetCan408Info_ExpectAnyArgs() vLaserDataGetCan408Info_CMockExpectAnyArgs(__LINE__)
void vLaserDataGetCan408Info_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vLaserDataGetCan408Info_Expect(c408StatusDefinition) vLaserDataGetCan408Info_CMockExpect(__LINE__, c408StatusDefinition)
void vLaserDataGetCan408Info_CMockExpect(UNITY_LINE_TYPE cmock_line, c408StatusDefinition_t* c408StatusDefinition);
typedef void (* CMOCK_vLaserDataGetCan408Info_CALLBACK)(c408StatusDefinition_t* c408StatusDefinition, int cmock_num_calls);
void vLaserDataGetCan408Info_AddCallback(CMOCK_vLaserDataGetCan408Info_CALLBACK Callback);
void vLaserDataGetCan408Info_Stub(CMOCK_vLaserDataGetCan408Info_CALLBACK Callback);
#define vLaserDataGetCan408Info_StubWithCallback vLaserDataGetCan408Info_Stub
#define vLaserDataGetCan408Info_ExpectWithArray(c408StatusDefinition, c408StatusDefinition_Depth) vLaserDataGetCan408Info_CMockExpectWithArray(__LINE__, c408StatusDefinition, c408StatusDefinition_Depth)
void vLaserDataGetCan408Info_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, c408StatusDefinition_t* c408StatusDefinition, int c408StatusDefinition_Depth);
#define vLaserDataGetCan408Info_ReturnThruPtr_c408StatusDefinition(c408StatusDefinition) vLaserDataGetCan408Info_CMockReturnMemThruPtr_c408StatusDefinition(__LINE__, c408StatusDefinition, sizeof(c408StatusDefinition_t))
#define vLaserDataGetCan408Info_ReturnArrayThruPtr_c408StatusDefinition(c408StatusDefinition, cmock_len) vLaserDataGetCan408Info_CMockReturnMemThruPtr_c408StatusDefinition(__LINE__, c408StatusDefinition, cmock_len * sizeof(*c408StatusDefinition))
#define vLaserDataGetCan408Info_ReturnMemThruPtr_c408StatusDefinition(c408StatusDefinition, cmock_size) vLaserDataGetCan408Info_CMockReturnMemThruPtr_c408StatusDefinition(__LINE__, c408StatusDefinition, cmock_size)
void vLaserDataGetCan408Info_CMockReturnMemThruPtr_c408StatusDefinition(UNITY_LINE_TYPE cmock_line, c408StatusDefinition_t* c408StatusDefinition, size_t cmock_size);
#define vLaserDataGetCan408Info_IgnoreArg_c408StatusDefinition() vLaserDataGetCan408Info_CMockIgnoreArg_c408StatusDefinition(__LINE__)
void vLaserDataGetCan408Info_CMockIgnoreArg_c408StatusDefinition(UNITY_LINE_TYPE cmock_line);
#define vLaserDataGetData403_IgnoreAndReturn(cmock_retval) vLaserDataGetData403_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void vLaserDataGetData403_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, c403StatusDefinition_t* cmock_to_return);
#define vLaserDataGetData403_StopIgnore() vLaserDataGetData403_CMockStopIgnore()
void vLaserDataGetData403_CMockStopIgnore(void);
#define vLaserDataGetData403_ExpectAndReturn(cmock_retval) vLaserDataGetData403_CMockExpectAndReturn(__LINE__, cmock_retval)
void vLaserDataGetData403_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, c403StatusDefinition_t* cmock_to_return);
typedef c403StatusDefinition_t* (* CMOCK_vLaserDataGetData403_CALLBACK)(int cmock_num_calls);
void vLaserDataGetData403_AddCallback(CMOCK_vLaserDataGetData403_CALLBACK Callback);
void vLaserDataGetData403_Stub(CMOCK_vLaserDataGetData403_CALLBACK Callback);
#define vLaserDataGetData403_StubWithCallback vLaserDataGetData403_Stub
#define vLaserDataGetData404_IgnoreAndReturn(cmock_retval) vLaserDataGetData404_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void vLaserDataGetData404_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, c404StatusDefinition_t* cmock_to_return);
#define vLaserDataGetData404_StopIgnore() vLaserDataGetData404_CMockStopIgnore()
void vLaserDataGetData404_CMockStopIgnore(void);
#define vLaserDataGetData404_ExpectAndReturn(cmock_retval) vLaserDataGetData404_CMockExpectAndReturn(__LINE__, cmock_retval)
void vLaserDataGetData404_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, c404StatusDefinition_t* cmock_to_return);
typedef c404StatusDefinition_t* (* CMOCK_vLaserDataGetData404_CALLBACK)(int cmock_num_calls);
void vLaserDataGetData404_AddCallback(CMOCK_vLaserDataGetData404_CALLBACK Callback);
void vLaserDataGetData404_Stub(CMOCK_vLaserDataGetData404_CALLBACK Callback);
#define vLaserDataGetData404_StubWithCallback vLaserDataGetData404_Stub
#define vLaserDataGetData409_IgnoreAndReturn(cmock_retval) vLaserDataGetData409_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void vLaserDataGetData409_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, c409StatusDefinition_t* cmock_to_return);
#define vLaserDataGetData409_StopIgnore() vLaserDataGetData409_CMockStopIgnore()
void vLaserDataGetData409_CMockStopIgnore(void);
#define vLaserDataGetData409_ExpectAndReturn(cmock_retval) vLaserDataGetData409_CMockExpectAndReturn(__LINE__, cmock_retval)
void vLaserDataGetData409_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, c409StatusDefinition_t* cmock_to_return);
typedef c409StatusDefinition_t* (* CMOCK_vLaserDataGetData409_CALLBACK)(int cmock_num_calls);
void vLaserDataGetData409_AddCallback(CMOCK_vLaserDataGetData409_CALLBACK Callback);
void vLaserDataGetData409_Stub(CMOCK_vLaserDataGetData409_CALLBACK Callback);
#define vLaserDataGetData409_StubWithCallback vLaserDataGetData409_Stub
#define vLaserDataGetData410_IgnoreAndReturn(cmock_retval) vLaserDataGetData410_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void vLaserDataGetData410_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, c410StatusDefinition_t* cmock_to_return);
#define vLaserDataGetData410_StopIgnore() vLaserDataGetData410_CMockStopIgnore()
void vLaserDataGetData410_CMockStopIgnore(void);
#define vLaserDataGetData410_ExpectAndReturn(cmock_retval) vLaserDataGetData410_CMockExpectAndReturn(__LINE__, cmock_retval)
void vLaserDataGetData410_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, c410StatusDefinition_t* cmock_to_return);
typedef c410StatusDefinition_t* (* CMOCK_vLaserDataGetData410_CALLBACK)(int cmock_num_calls);
void vLaserDataGetData410_AddCallback(CMOCK_vLaserDataGetData410_CALLBACK Callback);
void vLaserDataGetData410_Stub(CMOCK_vLaserDataGetData410_CALLBACK Callback);
#define vLaserDataGetData410_StubWithCallback vLaserDataGetData410_Stub
#define vLaserDataGetData412_IgnoreAndReturn(cmock_retval) vLaserDataGetData412_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void vLaserDataGetData412_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, c412StatusDefinition_t* cmock_to_return);
#define vLaserDataGetData412_StopIgnore() vLaserDataGetData412_CMockStopIgnore()
void vLaserDataGetData412_CMockStopIgnore(void);
#define vLaserDataGetData412_ExpectAndReturn(cmock_retval) vLaserDataGetData412_CMockExpectAndReturn(__LINE__, cmock_retval)
void vLaserDataGetData412_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, c412StatusDefinition_t* cmock_to_return);
typedef c412StatusDefinition_t* (* CMOCK_vLaserDataGetData412_CALLBACK)(int cmock_num_calls);
void vLaserDataGetData412_AddCallback(CMOCK_vLaserDataGetData412_CALLBACK Callback);
void vLaserDataGetData412_Stub(CMOCK_vLaserDataGetData412_CALLBACK Callback);
#define vLaserDataGetData412_StubWithCallback vLaserDataGetData412_Stub
#define vLaserDataGetData413_IgnoreAndReturn(cmock_retval) vLaserDataGetData413_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void vLaserDataGetData413_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, c413StatusDefinition_t* cmock_to_return);
#define vLaserDataGetData413_StopIgnore() vLaserDataGetData413_CMockStopIgnore()
void vLaserDataGetData413_CMockStopIgnore(void);
#define vLaserDataGetData413_ExpectAndReturn(cmock_retval) vLaserDataGetData413_CMockExpectAndReturn(__LINE__, cmock_retval)
void vLaserDataGetData413_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, c413StatusDefinition_t* cmock_to_return);
typedef c413StatusDefinition_t* (* CMOCK_vLaserDataGetData413_CALLBACK)(int cmock_num_calls);
void vLaserDataGetData413_AddCallback(CMOCK_vLaserDataGetData413_CALLBACK Callback);
void vLaserDataGetData413_Stub(CMOCK_vLaserDataGetData413_CALLBACK Callback);
#define vLaserDataGetData413_StubWithCallback vLaserDataGetData413_Stub
#define bValidatePassword_IgnoreAndReturn(cmock_retval) bValidatePassword_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void bValidatePassword_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, eBool_t cmock_to_return);
#define bValidatePassword_StopIgnore() bValidatePassword_CMockStopIgnore()
void bValidatePassword_CMockStopIgnore(void);
#define bValidatePassword_ExpectAnyArgsAndReturn(cmock_retval) bValidatePassword_CMockExpectAnyArgsAndReturn(__LINE__, cmock_retval)
void bValidatePassword_CMockExpectAnyArgsAndReturn(UNITY_LINE_TYPE cmock_line, eBool_t cmock_to_return);
#define bValidatePassword_ExpectAndReturn(c412StatusDefinition, c413StatusDefinition, cmock_retval) bValidatePassword_CMockExpectAndReturn(__LINE__, c412StatusDefinition, c413StatusDefinition, cmock_retval)
void bValidatePassword_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, c412StatusDefinition_t* c412StatusDefinition, c413StatusDefinition_t* c413StatusDefinition, eBool_t cmock_to_return);
typedef eBool_t (* CMOCK_bValidatePassword_CALLBACK)(c412StatusDefinition_t* c412StatusDefinition, c413StatusDefinition_t* c413StatusDefinition, int cmock_num_calls);
void bValidatePassword_AddCallback(CMOCK_bValidatePassword_CALLBACK Callback);
void bValidatePassword_Stub(CMOCK_bValidatePassword_CALLBACK Callback);
#define bValidatePassword_StubWithCallback bValidatePassword_Stub
#define bValidatePassword_ExpectWithArrayAndReturn(c412StatusDefinition, c412StatusDefinition_Depth, c413StatusDefinition, c413StatusDefinition_Depth, cmock_retval) bValidatePassword_CMockExpectWithArrayAndReturn(__LINE__, c412StatusDefinition, c412StatusDefinition_Depth, c413StatusDefinition, c413StatusDefinition_Depth, cmock_retval)
void bValidatePassword_CMockExpectWithArrayAndReturn(UNITY_LINE_TYPE cmock_line, c412StatusDefinition_t* c412StatusDefinition, int c412StatusDefinition_Depth, c413StatusDefinition_t* c413StatusDefinition, int c413StatusDefinition_Depth, eBool_t cmock_to_return);
#define bValidatePassword_ReturnThruPtr_c412StatusDefinition(c412StatusDefinition) bValidatePassword_CMockReturnMemThruPtr_c412StatusDefinition(__LINE__, c412StatusDefinition, sizeof(c412StatusDefinition_t))
#define bValidatePassword_ReturnArrayThruPtr_c412StatusDefinition(c412StatusDefinition, cmock_len) bValidatePassword_CMockReturnMemThruPtr_c412StatusDefinition(__LINE__, c412StatusDefinition, cmock_len * sizeof(*c412StatusDefinition))
#define bValidatePassword_ReturnMemThruPtr_c412StatusDefinition(c412StatusDefinition, cmock_size) bValidatePassword_CMockReturnMemThruPtr_c412StatusDefinition(__LINE__, c412StatusDefinition, cmock_size)
void bValidatePassword_CMockReturnMemThruPtr_c412StatusDefinition(UNITY_LINE_TYPE cmock_line, c412StatusDefinition_t* c412StatusDefinition, size_t cmock_size);
#define bValidatePassword_ReturnThruPtr_c413StatusDefinition(c413StatusDefinition) bValidatePassword_CMockReturnMemThruPtr_c413StatusDefinition(__LINE__, c413StatusDefinition, sizeof(c413StatusDefinition_t))
#define bValidatePassword_ReturnArrayThruPtr_c413StatusDefinition(c413StatusDefinition, cmock_len) bValidatePassword_CMockReturnMemThruPtr_c413StatusDefinition(__LINE__, c413StatusDefinition, cmock_len * sizeof(*c413StatusDefinition))
#define bValidatePassword_ReturnMemThruPtr_c413StatusDefinition(c413StatusDefinition, cmock_size) bValidatePassword_CMockReturnMemThruPtr_c413StatusDefinition(__LINE__, c413StatusDefinition, cmock_size)
void bValidatePassword_CMockReturnMemThruPtr_c413StatusDefinition(UNITY_LINE_TYPE cmock_line, c413StatusDefinition_t* c413StatusDefinition, size_t cmock_size);
#define bValidatePassword_IgnoreArg_c412StatusDefinition() bValidatePassword_CMockIgnoreArg_c412StatusDefinition(__LINE__)
void bValidatePassword_CMockIgnoreArg_c412StatusDefinition(UNITY_LINE_TYPE cmock_line);
#define bValidatePassword_IgnoreArg_c413StatusDefinition() bValidatePassword_CMockIgnoreArg_c413StatusDefinition(__LINE__)
void bValidatePassword_CMockIgnoreArg_c413StatusDefinition(UNITY_LINE_TYPE cmock_line);
#define vLaserDataGetCan409Info_Ignore() vLaserDataGetCan409Info_CMockIgnore()
void vLaserDataGetCan409Info_CMockIgnore(void);
#define vLaserDataGetCan409Info_StopIgnore() vLaserDataGetCan409Info_CMockStopIgnore()
void vLaserDataGetCan409Info_CMockStopIgnore(void);
#define vLaserDataGetCan409Info_ExpectAnyArgs() vLaserDataGetCan409Info_CMockExpectAnyArgs(__LINE__)
void vLaserDataGetCan409Info_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vLaserDataGetCan409Info_Expect(c409StatusDefinition) vLaserDataGetCan409Info_CMockExpect(__LINE__, c409StatusDefinition)
void vLaserDataGetCan409Info_CMockExpect(UNITY_LINE_TYPE cmock_line, c409StatusDefinition_t* c409StatusDefinition);
typedef void (* CMOCK_vLaserDataGetCan409Info_CALLBACK)(c409StatusDefinition_t* c409StatusDefinition, int cmock_num_calls);
void vLaserDataGetCan409Info_AddCallback(CMOCK_vLaserDataGetCan409Info_CALLBACK Callback);
void vLaserDataGetCan409Info_Stub(CMOCK_vLaserDataGetCan409Info_CALLBACK Callback);
#define vLaserDataGetCan409Info_StubWithCallback vLaserDataGetCan409Info_Stub
#define vLaserDataGetCan409Info_ExpectWithArray(c409StatusDefinition, c409StatusDefinition_Depth) vLaserDataGetCan409Info_CMockExpectWithArray(__LINE__, c409StatusDefinition, c409StatusDefinition_Depth)
void vLaserDataGetCan409Info_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, c409StatusDefinition_t* c409StatusDefinition, int c409StatusDefinition_Depth);
#define vLaserDataGetCan409Info_ReturnThruPtr_c409StatusDefinition(c409StatusDefinition) vLaserDataGetCan409Info_CMockReturnMemThruPtr_c409StatusDefinition(__LINE__, c409StatusDefinition, sizeof(c409StatusDefinition_t))
#define vLaserDataGetCan409Info_ReturnArrayThruPtr_c409StatusDefinition(c409StatusDefinition, cmock_len) vLaserDataGetCan409Info_CMockReturnMemThruPtr_c409StatusDefinition(__LINE__, c409StatusDefinition, cmock_len * sizeof(*c409StatusDefinition))
#define vLaserDataGetCan409Info_ReturnMemThruPtr_c409StatusDefinition(c409StatusDefinition, cmock_size) vLaserDataGetCan409Info_CMockReturnMemThruPtr_c409StatusDefinition(__LINE__, c409StatusDefinition, cmock_size)
void vLaserDataGetCan409Info_CMockReturnMemThruPtr_c409StatusDefinition(UNITY_LINE_TYPE cmock_line, c409StatusDefinition_t* c409StatusDefinition, size_t cmock_size);
#define vLaserDataGetCan409Info_IgnoreArg_c409StatusDefinition() vLaserDataGetCan409Info_CMockIgnoreArg_c409StatusDefinition(__LINE__)
void vLaserDataGetCan409Info_CMockIgnoreArg_c409StatusDefinition(UNITY_LINE_TYPE cmock_line);
#define vLaserDataGetCan409Pointer_IgnoreAndReturn(cmock_retval) vLaserDataGetCan409Pointer_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void vLaserDataGetCan409Pointer_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, c409StatusDefinition_t* cmock_to_return);
#define vLaserDataGetCan409Pointer_StopIgnore() vLaserDataGetCan409Pointer_CMockStopIgnore()
void vLaserDataGetCan409Pointer_CMockStopIgnore(void);
#define vLaserDataGetCan409Pointer_ExpectAndReturn(cmock_retval) vLaserDataGetCan409Pointer_CMockExpectAndReturn(__LINE__, cmock_retval)
void vLaserDataGetCan409Pointer_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, c409StatusDefinition_t* cmock_to_return);
typedef c409StatusDefinition_t* (* CMOCK_vLaserDataGetCan409Pointer_CALLBACK)(int cmock_num_calls);
void vLaserDataGetCan409Pointer_AddCallback(CMOCK_vLaserDataGetCan409Pointer_CALLBACK Callback);
void vLaserDataGetCan409Pointer_Stub(CMOCK_vLaserDataGetCan409Pointer_CALLBACK Callback);
#define vLaserDataGetCan409Pointer_StubWithCallback vLaserDataGetCan409Pointer_Stub
#define vLaserDataGetCan40AInfo_IgnoreAndReturn(cmock_retval) vLaserDataGetCan40AInfo_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void vLaserDataGetCan40AInfo_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, c40AStatusDefinition_t* cmock_to_return);
#define vLaserDataGetCan40AInfo_StopIgnore() vLaserDataGetCan40AInfo_CMockStopIgnore()
void vLaserDataGetCan40AInfo_CMockStopIgnore(void);
#define vLaserDataGetCan40AInfo_ExpectAndReturn(cmock_retval) vLaserDataGetCan40AInfo_CMockExpectAndReturn(__LINE__, cmock_retval)
void vLaserDataGetCan40AInfo_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, c40AStatusDefinition_t* cmock_to_return);
typedef c40AStatusDefinition_t* (* CMOCK_vLaserDataGetCan40AInfo_CALLBACK)(int cmock_num_calls);
void vLaserDataGetCan40AInfo_AddCallback(CMOCK_vLaserDataGetCan40AInfo_CALLBACK Callback);
void vLaserDataGetCan40AInfo_Stub(CMOCK_vLaserDataGetCan40AInfo_CALLBACK Callback);
#define vLaserDataGetCan40AInfo_StubWithCallback vLaserDataGetCan40AInfo_Stub
#define vLaserDataGetCan423Info_Ignore() vLaserDataGetCan423Info_CMockIgnore()
void vLaserDataGetCan423Info_CMockIgnore(void);
#define vLaserDataGetCan423Info_StopIgnore() vLaserDataGetCan423Info_CMockStopIgnore()
void vLaserDataGetCan423Info_CMockStopIgnore(void);
#define vLaserDataGetCan423Info_ExpectAnyArgs() vLaserDataGetCan423Info_CMockExpectAnyArgs(__LINE__)
void vLaserDataGetCan423Info_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vLaserDataGetCan423Info_Expect(c423StatusDefinition) vLaserDataGetCan423Info_CMockExpect(__LINE__, c423StatusDefinition)
void vLaserDataGetCan423Info_CMockExpect(UNITY_LINE_TYPE cmock_line, c423StatusDefinition_t* c423StatusDefinition);
typedef void (* CMOCK_vLaserDataGetCan423Info_CALLBACK)(c423StatusDefinition_t* c423StatusDefinition, int cmock_num_calls);
void vLaserDataGetCan423Info_AddCallback(CMOCK_vLaserDataGetCan423Info_CALLBACK Callback);
void vLaserDataGetCan423Info_Stub(CMOCK_vLaserDataGetCan423Info_CALLBACK Callback);
#define vLaserDataGetCan423Info_StubWithCallback vLaserDataGetCan423Info_Stub
#define vLaserDataGetCan423Info_ExpectWithArray(c423StatusDefinition, c423StatusDefinition_Depth) vLaserDataGetCan423Info_CMockExpectWithArray(__LINE__, c423StatusDefinition, c423StatusDefinition_Depth)
void vLaserDataGetCan423Info_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, c423StatusDefinition_t* c423StatusDefinition, int c423StatusDefinition_Depth);
#define vLaserDataGetCan423Info_ReturnThruPtr_c423StatusDefinition(c423StatusDefinition) vLaserDataGetCan423Info_CMockReturnMemThruPtr_c423StatusDefinition(__LINE__, c423StatusDefinition, sizeof(c423StatusDefinition_t))
#define vLaserDataGetCan423Info_ReturnArrayThruPtr_c423StatusDefinition(c423StatusDefinition, cmock_len) vLaserDataGetCan423Info_CMockReturnMemThruPtr_c423StatusDefinition(__LINE__, c423StatusDefinition, cmock_len * sizeof(*c423StatusDefinition))
#define vLaserDataGetCan423Info_ReturnMemThruPtr_c423StatusDefinition(c423StatusDefinition, cmock_size) vLaserDataGetCan423Info_CMockReturnMemThruPtr_c423StatusDefinition(__LINE__, c423StatusDefinition, cmock_size)
void vLaserDataGetCan423Info_CMockReturnMemThruPtr_c423StatusDefinition(UNITY_LINE_TYPE cmock_line, c423StatusDefinition_t* c423StatusDefinition, size_t cmock_size);
#define vLaserDataGetCan423Info_IgnoreArg_c423StatusDefinition() vLaserDataGetCan423Info_CMockIgnoreArg_c423StatusDefinition(__LINE__)
void vLaserDataGetCan423Info_CMockIgnoreArg_c423StatusDefinition(UNITY_LINE_TYPE cmock_line);
#define pLaserDataGetCan428Info_IgnoreAndReturn(cmock_retval) pLaserDataGetCan428Info_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void pLaserDataGetCan428Info_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, c428StatusDefinition_t* cmock_to_return);
#define pLaserDataGetCan428Info_StopIgnore() pLaserDataGetCan428Info_CMockStopIgnore()
void pLaserDataGetCan428Info_CMockStopIgnore(void);
#define pLaserDataGetCan428Info_ExpectAndReturn(cmock_retval) pLaserDataGetCan428Info_CMockExpectAndReturn(__LINE__, cmock_retval)
void pLaserDataGetCan428Info_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, c428StatusDefinition_t* cmock_to_return);
typedef c428StatusDefinition_t* (* CMOCK_pLaserDataGetCan428Info_CALLBACK)(int cmock_num_calls);
void pLaserDataGetCan428Info_AddCallback(CMOCK_pLaserDataGetCan428Info_CALLBACK Callback);
void pLaserDataGetCan428Info_Stub(CMOCK_pLaserDataGetCan428Info_CALLBACK Callback);
#define pLaserDataGetCan428Info_StubWithCallback pLaserDataGetCan428Info_Stub
#define pLaserDataGetThermistorData_IgnoreAndReturn(cmock_retval) pLaserDataGetThermistorData_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void pLaserDataGetThermistorData_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, xExternalAnalogThermistorsInputs_t* cmock_to_return);
#define pLaserDataGetThermistorData_StopIgnore() pLaserDataGetThermistorData_CMockStopIgnore()
void pLaserDataGetThermistorData_CMockStopIgnore(void);
#define pLaserDataGetThermistorData_ExpectAndReturn(cmock_retval) pLaserDataGetThermistorData_CMockExpectAndReturn(__LINE__, cmock_retval)
void pLaserDataGetThermistorData_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, xExternalAnalogThermistorsInputs_t* cmock_to_return);
typedef xExternalAnalogThermistorsInputs_t* (* CMOCK_pLaserDataGetThermistorData_CALLBACK)(int cmock_num_calls);
void pLaserDataGetThermistorData_AddCallback(CMOCK_pLaserDataGetThermistorData_CALLBACK Callback);
void pLaserDataGetThermistorData_Stub(CMOCK_pLaserDataGetThermistorData_CALLBACK Callback);
#define pLaserDataGetThermistorData_StubWithCallback pLaserDataGetThermistorData_Stub
#define vLaserDataGetCan411Info_Ignore() vLaserDataGetCan411Info_CMockIgnore()
void vLaserDataGetCan411Info_CMockIgnore(void);
#define vLaserDataGetCan411Info_StopIgnore() vLaserDataGetCan411Info_CMockStopIgnore()
void vLaserDataGetCan411Info_CMockStopIgnore(void);
#define vLaserDataGetCan411Info_ExpectAnyArgs() vLaserDataGetCan411Info_CMockExpectAnyArgs(__LINE__)
void vLaserDataGetCan411Info_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vLaserDataGetCan411Info_Expect(c411StatusDefinition) vLaserDataGetCan411Info_CMockExpect(__LINE__, c411StatusDefinition)
void vLaserDataGetCan411Info_CMockExpect(UNITY_LINE_TYPE cmock_line, c411StatusDefinition_t* c411StatusDefinition);
typedef void (* CMOCK_vLaserDataGetCan411Info_CALLBACK)(c411StatusDefinition_t* c411StatusDefinition, int cmock_num_calls);
void vLaserDataGetCan411Info_AddCallback(CMOCK_vLaserDataGetCan411Info_CALLBACK Callback);
void vLaserDataGetCan411Info_Stub(CMOCK_vLaserDataGetCan411Info_CALLBACK Callback);
#define vLaserDataGetCan411Info_StubWithCallback vLaserDataGetCan411Info_Stub
#define vLaserDataGetCan411Info_ExpectWithArray(c411StatusDefinition, c411StatusDefinition_Depth) vLaserDataGetCan411Info_CMockExpectWithArray(__LINE__, c411StatusDefinition, c411StatusDefinition_Depth)
void vLaserDataGetCan411Info_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, c411StatusDefinition_t* c411StatusDefinition, int c411StatusDefinition_Depth);
#define vLaserDataGetCan411Info_ReturnThruPtr_c411StatusDefinition(c411StatusDefinition) vLaserDataGetCan411Info_CMockReturnMemThruPtr_c411StatusDefinition(__LINE__, c411StatusDefinition, sizeof(c411StatusDefinition_t))
#define vLaserDataGetCan411Info_ReturnArrayThruPtr_c411StatusDefinition(c411StatusDefinition, cmock_len) vLaserDataGetCan411Info_CMockReturnMemThruPtr_c411StatusDefinition(__LINE__, c411StatusDefinition, cmock_len * sizeof(*c411StatusDefinition))
#define vLaserDataGetCan411Info_ReturnMemThruPtr_c411StatusDefinition(c411StatusDefinition, cmock_size) vLaserDataGetCan411Info_CMockReturnMemThruPtr_c411StatusDefinition(__LINE__, c411StatusDefinition, cmock_size)
void vLaserDataGetCan411Info_CMockReturnMemThruPtr_c411StatusDefinition(UNITY_LINE_TYPE cmock_line, c411StatusDefinition_t* c411StatusDefinition, size_t cmock_size);
#define vLaserDataGetCan411Info_IgnoreArg_c411StatusDefinition() vLaserDataGetCan411Info_CMockIgnoreArg_c411StatusDefinition(__LINE__)
void vLaserDataGetCan411Info_CMockIgnoreArg_c411StatusDefinition(UNITY_LINE_TYPE cmock_line);
#define vUpdateCommonNvmMemory_Ignore() vUpdateCommonNvmMemory_CMockIgnore()
void vUpdateCommonNvmMemory_CMockIgnore(void);
#define vUpdateCommonNvmMemory_StopIgnore() vUpdateCommonNvmMemory_CMockStopIgnore()
void vUpdateCommonNvmMemory_CMockStopIgnore(void);
#define vUpdateCommonNvmMemory_Expect() vUpdateCommonNvmMemory_CMockExpect(__LINE__)
void vUpdateCommonNvmMemory_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_vUpdateCommonNvmMemory_CALLBACK)(int cmock_num_calls);
void vUpdateCommonNvmMemory_AddCallback(CMOCK_vUpdateCommonNvmMemory_CALLBACK Callback);
void vUpdateCommonNvmMemory_Stub(CMOCK_vUpdateCommonNvmMemory_CALLBACK Callback);
#define vUpdateCommonNvmMemory_StubWithCallback vUpdateCommonNvmMemory_Stub
#define vUpdateLnaNvmMemory_Ignore() vUpdateLnaNvmMemory_CMockIgnore()
void vUpdateLnaNvmMemory_CMockIgnore(void);
#define vUpdateLnaNvmMemory_StopIgnore() vUpdateLnaNvmMemory_CMockStopIgnore()
void vUpdateLnaNvmMemory_CMockStopIgnore(void);
#define vUpdateLnaNvmMemory_Expect() vUpdateLnaNvmMemory_CMockExpect(__LINE__)
void vUpdateLnaNvmMemory_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_vUpdateLnaNvmMemory_CALLBACK)(int cmock_num_calls);
void vUpdateLnaNvmMemory_AddCallback(CMOCK_vUpdateLnaNvmMemory_CALLBACK Callback);
void vUpdateLnaNvmMemory_Stub(CMOCK_vUpdateLnaNvmMemory_CALLBACK Callback);
#define vUpdateLnaNvmMemory_StubWithCallback vUpdateLnaNvmMemory_Stub
#define vUpdateBoostNvmMemory_Ignore() vUpdateBoostNvmMemory_CMockIgnore()
void vUpdateBoostNvmMemory_CMockIgnore(void);
#define vUpdateBoostNvmMemory_StopIgnore() vUpdateBoostNvmMemory_CMockStopIgnore()
void vUpdateBoostNvmMemory_CMockStopIgnore(void);
#define vUpdateBoostNvmMemory_Expect() vUpdateBoostNvmMemory_CMockExpect(__LINE__)
void vUpdateBoostNvmMemory_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_vUpdateBoostNvmMemory_CALLBACK)(int cmock_num_calls);
void vUpdateBoostNvmMemory_AddCallback(CMOCK_vUpdateBoostNvmMemory_CALLBACK Callback);
void vUpdateBoostNvmMemory_Stub(CMOCK_vUpdateBoostNvmMemory_CALLBACK Callback);
#define vUpdateBoostNvmMemory_StubWithCallback vUpdateBoostNvmMemory_Stub
#define vUpdateConfigInfo_Ignore() vUpdateConfigInfo_CMockIgnore()
void vUpdateConfigInfo_CMockIgnore(void);
#define vUpdateConfigInfo_StopIgnore() vUpdateConfigInfo_CMockStopIgnore()
void vUpdateConfigInfo_CMockStopIgnore(void);
#define vUpdateConfigInfo_Expect() vUpdateConfigInfo_CMockExpect(__LINE__)
void vUpdateConfigInfo_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_vUpdateConfigInfo_CALLBACK)(int cmock_num_calls);
void vUpdateConfigInfo_AddCallback(CMOCK_vUpdateConfigInfo_CALLBACK Callback);
void vUpdateConfigInfo_Stub(CMOCK_vUpdateConfigInfo_CALLBACK Callback);
#define vUpdateConfigInfo_StubWithCallback vUpdateConfigInfo_Stub
#define bInitCommonMemoryImageFromNvm_IgnoreAndReturn(cmock_retval) bInitCommonMemoryImageFromNvm_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void bInitCommonMemoryImageFromNvm_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, eBool_t cmock_to_return);
#define bInitCommonMemoryImageFromNvm_StopIgnore() bInitCommonMemoryImageFromNvm_CMockStopIgnore()
void bInitCommonMemoryImageFromNvm_CMockStopIgnore(void);
#define bInitCommonMemoryImageFromNvm_ExpectAndReturn(cmock_retval) bInitCommonMemoryImageFromNvm_CMockExpectAndReturn(__LINE__, cmock_retval)
void bInitCommonMemoryImageFromNvm_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, eBool_t cmock_to_return);
typedef eBool_t (* CMOCK_bInitCommonMemoryImageFromNvm_CALLBACK)(int cmock_num_calls);
void bInitCommonMemoryImageFromNvm_AddCallback(CMOCK_bInitCommonMemoryImageFromNvm_CALLBACK Callback);
void bInitCommonMemoryImageFromNvm_Stub(CMOCK_bInitCommonMemoryImageFromNvm_CALLBACK Callback);
#define bInitCommonMemoryImageFromNvm_StubWithCallback bInitCommonMemoryImageFromNvm_Stub
#define bInitLnaMemoryImageFromNvm_IgnoreAndReturn(cmock_retval) bInitLnaMemoryImageFromNvm_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void bInitLnaMemoryImageFromNvm_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, eBool_t cmock_to_return);
#define bInitLnaMemoryImageFromNvm_StopIgnore() bInitLnaMemoryImageFromNvm_CMockStopIgnore()
void bInitLnaMemoryImageFromNvm_CMockStopIgnore(void);
#define bInitLnaMemoryImageFromNvm_ExpectAndReturn(cmock_retval) bInitLnaMemoryImageFromNvm_CMockExpectAndReturn(__LINE__, cmock_retval)
void bInitLnaMemoryImageFromNvm_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, eBool_t cmock_to_return);
typedef eBool_t (* CMOCK_bInitLnaMemoryImageFromNvm_CALLBACK)(int cmock_num_calls);
void bInitLnaMemoryImageFromNvm_AddCallback(CMOCK_bInitLnaMemoryImageFromNvm_CALLBACK Callback);
void bInitLnaMemoryImageFromNvm_Stub(CMOCK_bInitLnaMemoryImageFromNvm_CALLBACK Callback);
#define bInitLnaMemoryImageFromNvm_StubWithCallback bInitLnaMemoryImageFromNvm_Stub
#define bInitBoostMemoryImageFromNvm_IgnoreAndReturn(cmock_retval) bInitBoostMemoryImageFromNvm_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void bInitBoostMemoryImageFromNvm_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, eBool_t cmock_to_return);
#define bInitBoostMemoryImageFromNvm_StopIgnore() bInitBoostMemoryImageFromNvm_CMockStopIgnore()
void bInitBoostMemoryImageFromNvm_CMockStopIgnore(void);
#define bInitBoostMemoryImageFromNvm_ExpectAndReturn(cmock_retval) bInitBoostMemoryImageFromNvm_CMockExpectAndReturn(__LINE__, cmock_retval)
void bInitBoostMemoryImageFromNvm_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, eBool_t cmock_to_return);
typedef eBool_t (* CMOCK_bInitBoostMemoryImageFromNvm_CALLBACK)(int cmock_num_calls);
void bInitBoostMemoryImageFromNvm_AddCallback(CMOCK_bInitBoostMemoryImageFromNvm_CALLBACK Callback);
void bInitBoostMemoryImageFromNvm_Stub(CMOCK_bInitBoostMemoryImageFromNvm_CALLBACK Callback);
#define bInitBoostMemoryImageFromNvm_StubWithCallback bInitBoostMemoryImageFromNvm_Stub
#define getLnaPidValues_IgnoreAndReturn(cmock_retval) getLnaPidValues_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void getLnaPidValues_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, xPidValues_t* cmock_to_return);
#define getLnaPidValues_StopIgnore() getLnaPidValues_CMockStopIgnore()
void getLnaPidValues_CMockStopIgnore(void);
#define getLnaPidValues_ExpectAndReturn(cmock_retval) getLnaPidValues_CMockExpectAndReturn(__LINE__, cmock_retval)
void getLnaPidValues_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, xPidValues_t* cmock_to_return);
typedef xPidValues_t* (* CMOCK_getLnaPidValues_CALLBACK)(int cmock_num_calls);
void getLnaPidValues_AddCallback(CMOCK_getLnaPidValues_CALLBACK Callback);
void getLnaPidValues_Stub(CMOCK_getLnaPidValues_CALLBACK Callback);
#define getLnaPidValues_StubWithCallback getLnaPidValues_Stub
#define setLnaPidProportionalValue_Ignore() setLnaPidProportionalValue_CMockIgnore()
void setLnaPidProportionalValue_CMockIgnore(void);
#define setLnaPidProportionalValue_StopIgnore() setLnaPidProportionalValue_CMockStopIgnore()
void setLnaPidProportionalValue_CMockStopIgnore(void);
#define setLnaPidProportionalValue_ExpectAnyArgs() setLnaPidProportionalValue_CMockExpectAnyArgs(__LINE__)
void setLnaPidProportionalValue_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define setLnaPidProportionalValue_Expect(fPvalue) setLnaPidProportionalValue_CMockExpect(__LINE__, fPvalue)
void setLnaPidProportionalValue_CMockExpect(UNITY_LINE_TYPE cmock_line, float fPvalue);
typedef void (* CMOCK_setLnaPidProportionalValue_CALLBACK)(float fPvalue, int cmock_num_calls);
void setLnaPidProportionalValue_AddCallback(CMOCK_setLnaPidProportionalValue_CALLBACK Callback);
void setLnaPidProportionalValue_Stub(CMOCK_setLnaPidProportionalValue_CALLBACK Callback);
#define setLnaPidProportionalValue_StubWithCallback setLnaPidProportionalValue_Stub
#define setLnaPidProportionalValue_IgnoreArg_fPvalue() setLnaPidProportionalValue_CMockIgnoreArg_fPvalue(__LINE__)
void setLnaPidProportionalValue_CMockIgnoreArg_fPvalue(UNITY_LINE_TYPE cmock_line);
#define setLnaPidIntegralValue_Ignore() setLnaPidIntegralValue_CMockIgnore()
void setLnaPidIntegralValue_CMockIgnore(void);
#define setLnaPidIntegralValue_StopIgnore() setLnaPidIntegralValue_CMockStopIgnore()
void setLnaPidIntegralValue_CMockStopIgnore(void);
#define setLnaPidIntegralValue_ExpectAnyArgs() setLnaPidIntegralValue_CMockExpectAnyArgs(__LINE__)
void setLnaPidIntegralValue_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define setLnaPidIntegralValue_Expect(fPvalue) setLnaPidIntegralValue_CMockExpect(__LINE__, fPvalue)
void setLnaPidIntegralValue_CMockExpect(UNITY_LINE_TYPE cmock_line, float fPvalue);
typedef void (* CMOCK_setLnaPidIntegralValue_CALLBACK)(float fPvalue, int cmock_num_calls);
void setLnaPidIntegralValue_AddCallback(CMOCK_setLnaPidIntegralValue_CALLBACK Callback);
void setLnaPidIntegralValue_Stub(CMOCK_setLnaPidIntegralValue_CALLBACK Callback);
#define setLnaPidIntegralValue_StubWithCallback setLnaPidIntegralValue_Stub
#define setLnaPidIntegralValue_IgnoreArg_fPvalue() setLnaPidIntegralValue_CMockIgnoreArg_fPvalue(__LINE__)
void setLnaPidIntegralValue_CMockIgnoreArg_fPvalue(UNITY_LINE_TYPE cmock_line);
#define setLnaPidDerivativeValue_Ignore() setLnaPidDerivativeValue_CMockIgnore()
void setLnaPidDerivativeValue_CMockIgnore(void);
#define setLnaPidDerivativeValue_StopIgnore() setLnaPidDerivativeValue_CMockStopIgnore()
void setLnaPidDerivativeValue_CMockStopIgnore(void);
#define setLnaPidDerivativeValue_ExpectAnyArgs() setLnaPidDerivativeValue_CMockExpectAnyArgs(__LINE__)
void setLnaPidDerivativeValue_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define setLnaPidDerivativeValue_Expect(fPvalue) setLnaPidDerivativeValue_CMockExpect(__LINE__, fPvalue)
void setLnaPidDerivativeValue_CMockExpect(UNITY_LINE_TYPE cmock_line, float fPvalue);
typedef void (* CMOCK_setLnaPidDerivativeValue_CALLBACK)(float fPvalue, int cmock_num_calls);
void setLnaPidDerivativeValue_AddCallback(CMOCK_setLnaPidDerivativeValue_CALLBACK Callback);
void setLnaPidDerivativeValue_Stub(CMOCK_setLnaPidDerivativeValue_CALLBACK Callback);
#define setLnaPidDerivativeValue_StubWithCallback setLnaPidDerivativeValue_Stub
#define setLnaPidDerivativeValue_IgnoreArg_fPvalue() setLnaPidDerivativeValue_CMockIgnoreArg_fPvalue(__LINE__)
void setLnaPidDerivativeValue_CMockIgnoreArg_fPvalue(UNITY_LINE_TYPE cmock_line);
#define cGetresetCause_IgnoreAndReturn(cmock_retval) cGetresetCause_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void cGetresetCause_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
#define cGetresetCause_StopIgnore() cGetresetCause_CMockStopIgnore()
void cGetresetCause_CMockStopIgnore(void);
#define cGetresetCause_ExpectAndReturn(cmock_retval) cGetresetCause_CMockExpectAndReturn(__LINE__, cmock_retval)
void cGetresetCause_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, uint8_t cmock_to_return);
typedef uint8_t (* CMOCK_cGetresetCause_CALLBACK)(int cmock_num_calls);
void cGetresetCause_AddCallback(CMOCK_cGetresetCause_CALLBACK Callback);
void cGetresetCause_Stub(CMOCK_cGetresetCause_CALLBACK Callback);
#define cGetresetCause_StubWithCallback cGetresetCause_Stub
#define setInternalCriticalErrorFlag_Ignore() setInternalCriticalErrorFlag_CMockIgnore()
void setInternalCriticalErrorFlag_CMockIgnore(void);
#define setInternalCriticalErrorFlag_StopIgnore() setInternalCriticalErrorFlag_CMockStopIgnore()
void setInternalCriticalErrorFlag_CMockStopIgnore(void);
#define setInternalCriticalErrorFlag_ExpectAnyArgs() setInternalCriticalErrorFlag_CMockExpectAnyArgs(__LINE__)
void setInternalCriticalErrorFlag_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define setInternalCriticalErrorFlag_Expect(value) setInternalCriticalErrorFlag_CMockExpect(__LINE__, value)
void setInternalCriticalErrorFlag_CMockExpect(UNITY_LINE_TYPE cmock_line, eBool_t value);
typedef void (* CMOCK_setInternalCriticalErrorFlag_CALLBACK)(eBool_t value, int cmock_num_calls);
void setInternalCriticalErrorFlag_AddCallback(CMOCK_setInternalCriticalErrorFlag_CALLBACK Callback);
void setInternalCriticalErrorFlag_Stub(CMOCK_setInternalCriticalErrorFlag_CALLBACK Callback);
#define setInternalCriticalErrorFlag_StubWithCallback setInternalCriticalErrorFlag_Stub
#define setInternalCriticalErrorFlag_IgnoreArg_value() setInternalCriticalErrorFlag_CMockIgnoreArg_value(__LINE__)
void setInternalCriticalErrorFlag_CMockIgnoreArg_value(UNITY_LINE_TYPE cmock_line);
#define vInitWithFullResetRequest_Ignore() vInitWithFullResetRequest_CMockIgnore()
void vInitWithFullResetRequest_CMockIgnore(void);
#define vInitWithFullResetRequest_StopIgnore() vInitWithFullResetRequest_CMockStopIgnore()
void vInitWithFullResetRequest_CMockStopIgnore(void);
#define vInitWithFullResetRequest_Expect() vInitWithFullResetRequest_CMockExpect(__LINE__)
void vInitWithFullResetRequest_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_vInitWithFullResetRequest_CALLBACK)(int cmock_num_calls);
void vInitWithFullResetRequest_AddCallback(CMOCK_vInitWithFullResetRequest_CALLBACK Callback);
void vInitWithFullResetRequest_Stub(CMOCK_vInitWithFullResetRequest_CALLBACK Callback);
#define vInitWithFullResetRequest_StubWithCallback vInitWithFullResetRequest_Stub
#define vIncreaseSpiAdcErrors_Ignore() vIncreaseSpiAdcErrors_CMockIgnore()
void vIncreaseSpiAdcErrors_CMockIgnore(void);
#define vIncreaseSpiAdcErrors_StopIgnore() vIncreaseSpiAdcErrors_CMockStopIgnore()
void vIncreaseSpiAdcErrors_CMockStopIgnore(void);
#define vIncreaseSpiAdcErrors_Expect() vIncreaseSpiAdcErrors_CMockExpect(__LINE__)
void vIncreaseSpiAdcErrors_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_vIncreaseSpiAdcErrors_CALLBACK)(int cmock_num_calls);
void vIncreaseSpiAdcErrors_AddCallback(CMOCK_vIncreaseSpiAdcErrors_CALLBACK Callback);
void vIncreaseSpiAdcErrors_Stub(CMOCK_vIncreaseSpiAdcErrors_CALLBACK Callback);
#define vIncreaseSpiAdcErrors_StubWithCallback vIncreaseSpiAdcErrors_Stub
#define vClearSpiAdcErrors_Ignore() vClearSpiAdcErrors_CMockIgnore()
void vClearSpiAdcErrors_CMockIgnore(void);
#define vClearSpiAdcErrors_StopIgnore() vClearSpiAdcErrors_CMockStopIgnore()
void vClearSpiAdcErrors_CMockStopIgnore(void);
#define vClearSpiAdcErrors_Expect() vClearSpiAdcErrors_CMockExpect(__LINE__)
void vClearSpiAdcErrors_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_vClearSpiAdcErrors_CALLBACK)(int cmock_num_calls);
void vClearSpiAdcErrors_AddCallback(CMOCK_vClearSpiAdcErrors_CALLBACK Callback);
void vClearSpiAdcErrors_Stub(CMOCK_vClearSpiAdcErrors_CALLBACK Callback);
#define vClearSpiAdcErrors_StubWithCallback vClearSpiAdcErrors_Stub
#define vIncreaseSpiFramErrors_Ignore() vIncreaseSpiFramErrors_CMockIgnore()
void vIncreaseSpiFramErrors_CMockIgnore(void);
#define vIncreaseSpiFramErrors_StopIgnore() vIncreaseSpiFramErrors_CMockStopIgnore()
void vIncreaseSpiFramErrors_CMockStopIgnore(void);
#define vIncreaseSpiFramErrors_Expect() vIncreaseSpiFramErrors_CMockExpect(__LINE__)
void vIncreaseSpiFramErrors_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_vIncreaseSpiFramErrors_CALLBACK)(int cmock_num_calls);
void vIncreaseSpiFramErrors_AddCallback(CMOCK_vIncreaseSpiFramErrors_CALLBACK Callback);
void vIncreaseSpiFramErrors_Stub(CMOCK_vIncreaseSpiFramErrors_CALLBACK Callback);
#define vIncreaseSpiFramErrors_StubWithCallback vIncreaseSpiFramErrors_Stub
#define vClearSpiFramErrors_Ignore() vClearSpiFramErrors_CMockIgnore()
void vClearSpiFramErrors_CMockIgnore(void);
#define vClearSpiFramErrors_StopIgnore() vClearSpiFramErrors_CMockStopIgnore()
void vClearSpiFramErrors_CMockStopIgnore(void);
#define vClearSpiFramErrors_Expect() vClearSpiFramErrors_CMockExpect(__LINE__)
void vClearSpiFramErrors_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_vClearSpiFramErrors_CALLBACK)(int cmock_num_calls);
void vClearSpiFramErrors_AddCallback(CMOCK_vClearSpiFramErrors_CALLBACK Callback);
void vClearSpiFramErrors_Stub(CMOCK_vClearSpiFramErrors_CALLBACK Callback);
#define vClearSpiFramErrors_StubWithCallback vClearSpiFramErrors_Stub
#define vIncreaseCanErrors_Ignore() vIncreaseCanErrors_CMockIgnore()
void vIncreaseCanErrors_CMockIgnore(void);
#define vIncreaseCanErrors_StopIgnore() vIncreaseCanErrors_CMockStopIgnore()
void vIncreaseCanErrors_CMockStopIgnore(void);
#define vIncreaseCanErrors_Expect() vIncreaseCanErrors_CMockExpect(__LINE__)
void vIncreaseCanErrors_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_vIncreaseCanErrors_CALLBACK)(int cmock_num_calls);
void vIncreaseCanErrors_AddCallback(CMOCK_vIncreaseCanErrors_CALLBACK Callback);
void vIncreaseCanErrors_Stub(CMOCK_vIncreaseCanErrors_CALLBACK Callback);
#define vIncreaseCanErrors_StubWithCallback vIncreaseCanErrors_Stub
#define vGetUpdateMemoryWriteNeeded_IgnoreAndReturn(cmock_retval) vGetUpdateMemoryWriteNeeded_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void vGetUpdateMemoryWriteNeeded_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, eBool_t cmock_to_return);
#define vGetUpdateMemoryWriteNeeded_StopIgnore() vGetUpdateMemoryWriteNeeded_CMockStopIgnore()
void vGetUpdateMemoryWriteNeeded_CMockStopIgnore(void);
#define vGetUpdateMemoryWriteNeeded_ExpectAndReturn(cmock_retval) vGetUpdateMemoryWriteNeeded_CMockExpectAndReturn(__LINE__, cmock_retval)
void vGetUpdateMemoryWriteNeeded_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, eBool_t cmock_to_return);
typedef eBool_t (* CMOCK_vGetUpdateMemoryWriteNeeded_CALLBACK)(int cmock_num_calls);
void vGetUpdateMemoryWriteNeeded_AddCallback(CMOCK_vGetUpdateMemoryWriteNeeded_CALLBACK Callback);
void vGetUpdateMemoryWriteNeeded_Stub(CMOCK_vGetUpdateMemoryWriteNeeded_CALLBACK Callback);
#define vGetUpdateMemoryWriteNeeded_StubWithCallback vGetUpdateMemoryWriteNeeded_Stub
#define bResetIsDemanded_IgnoreAndReturn(cmock_retval) bResetIsDemanded_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void bResetIsDemanded_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, eBool_t cmock_to_return);
#define bResetIsDemanded_StopIgnore() bResetIsDemanded_CMockStopIgnore()
void bResetIsDemanded_CMockStopIgnore(void);
#define bResetIsDemanded_ExpectAndReturn(cmock_retval) bResetIsDemanded_CMockExpectAndReturn(__LINE__, cmock_retval)
void bResetIsDemanded_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, eBool_t cmock_to_return);
typedef eBool_t (* CMOCK_bResetIsDemanded_CALLBACK)(int cmock_num_calls);
void bResetIsDemanded_AddCallback(CMOCK_bResetIsDemanded_CALLBACK Callback);
void bResetIsDemanded_Stub(CMOCK_bResetIsDemanded_CALLBACK Callback);
#define bResetIsDemanded_StubWithCallback bResetIsDemanded_Stub
#define vGetUpdateCommonMemoryWriteNeeded_IgnoreAndReturn(cmock_retval) vGetUpdateCommonMemoryWriteNeeded_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void vGetUpdateCommonMemoryWriteNeeded_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, eBool_t cmock_to_return);
#define vGetUpdateCommonMemoryWriteNeeded_StopIgnore() vGetUpdateCommonMemoryWriteNeeded_CMockStopIgnore()
void vGetUpdateCommonMemoryWriteNeeded_CMockStopIgnore(void);
#define vGetUpdateCommonMemoryWriteNeeded_ExpectAndReturn(cmock_retval) vGetUpdateCommonMemoryWriteNeeded_CMockExpectAndReturn(__LINE__, cmock_retval)
void vGetUpdateCommonMemoryWriteNeeded_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, eBool_t cmock_to_return);
typedef eBool_t (* CMOCK_vGetUpdateCommonMemoryWriteNeeded_CALLBACK)(int cmock_num_calls);
void vGetUpdateCommonMemoryWriteNeeded_AddCallback(CMOCK_vGetUpdateCommonMemoryWriteNeeded_CALLBACK Callback);
void vGetUpdateCommonMemoryWriteNeeded_Stub(CMOCK_vGetUpdateCommonMemoryWriteNeeded_CALLBACK Callback);
#define vGetUpdateCommonMemoryWriteNeeded_StubWithCallback vGetUpdateCommonMemoryWriteNeeded_Stub
#define vGetUpdateLnaMemoryWriteNeeded_IgnoreAndReturn(cmock_retval) vGetUpdateLnaMemoryWriteNeeded_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void vGetUpdateLnaMemoryWriteNeeded_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, eBool_t cmock_to_return);
#define vGetUpdateLnaMemoryWriteNeeded_StopIgnore() vGetUpdateLnaMemoryWriteNeeded_CMockStopIgnore()
void vGetUpdateLnaMemoryWriteNeeded_CMockStopIgnore(void);
#define vGetUpdateLnaMemoryWriteNeeded_ExpectAndReturn(cmock_retval) vGetUpdateLnaMemoryWriteNeeded_CMockExpectAndReturn(__LINE__, cmock_retval)
void vGetUpdateLnaMemoryWriteNeeded_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, eBool_t cmock_to_return);
typedef eBool_t (* CMOCK_vGetUpdateLnaMemoryWriteNeeded_CALLBACK)(int cmock_num_calls);
void vGetUpdateLnaMemoryWriteNeeded_AddCallback(CMOCK_vGetUpdateLnaMemoryWriteNeeded_CALLBACK Callback);
void vGetUpdateLnaMemoryWriteNeeded_Stub(CMOCK_vGetUpdateLnaMemoryWriteNeeded_CALLBACK Callback);
#define vGetUpdateLnaMemoryWriteNeeded_StubWithCallback vGetUpdateLnaMemoryWriteNeeded_Stub
#define vGetUpdateBoosterMemoryWriteNeeded_IgnoreAndReturn(cmock_retval) vGetUpdateBoosterMemoryWriteNeeded_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void vGetUpdateBoosterMemoryWriteNeeded_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, eBool_t cmock_to_return);
#define vGetUpdateBoosterMemoryWriteNeeded_StopIgnore() vGetUpdateBoosterMemoryWriteNeeded_CMockStopIgnore()
void vGetUpdateBoosterMemoryWriteNeeded_CMockStopIgnore(void);
#define vGetUpdateBoosterMemoryWriteNeeded_ExpectAndReturn(cmock_retval) vGetUpdateBoosterMemoryWriteNeeded_CMockExpectAndReturn(__LINE__, cmock_retval)
void vGetUpdateBoosterMemoryWriteNeeded_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, eBool_t cmock_to_return);
typedef eBool_t (* CMOCK_vGetUpdateBoosterMemoryWriteNeeded_CALLBACK)(int cmock_num_calls);
void vGetUpdateBoosterMemoryWriteNeeded_AddCallback(CMOCK_vGetUpdateBoosterMemoryWriteNeeded_CALLBACK Callback);
void vGetUpdateBoosterMemoryWriteNeeded_Stub(CMOCK_vGetUpdateBoosterMemoryWriteNeeded_CALLBACK Callback);
#define vGetUpdateBoosterMemoryWriteNeeded_StubWithCallback vGetUpdateBoosterMemoryWriteNeeded_Stub
#define vSetUpdateMemoryWriteNeeded_Ignore() vSetUpdateMemoryWriteNeeded_CMockIgnore()
void vSetUpdateMemoryWriteNeeded_CMockIgnore(void);
#define vSetUpdateMemoryWriteNeeded_StopIgnore() vSetUpdateMemoryWriteNeeded_CMockStopIgnore()
void vSetUpdateMemoryWriteNeeded_CMockStopIgnore(void);
#define vSetUpdateMemoryWriteNeeded_ExpectAnyArgs() vSetUpdateMemoryWriteNeeded_CMockExpectAnyArgs(__LINE__)
void vSetUpdateMemoryWriteNeeded_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vSetUpdateMemoryWriteNeeded_Expect(bWriteMemoryNeeded) vSetUpdateMemoryWriteNeeded_CMockExpect(__LINE__, bWriteMemoryNeeded)
void vSetUpdateMemoryWriteNeeded_CMockExpect(UNITY_LINE_TYPE cmock_line, eBool_t bWriteMemoryNeeded);
typedef void (* CMOCK_vSetUpdateMemoryWriteNeeded_CALLBACK)(eBool_t bWriteMemoryNeeded, int cmock_num_calls);
void vSetUpdateMemoryWriteNeeded_AddCallback(CMOCK_vSetUpdateMemoryWriteNeeded_CALLBACK Callback);
void vSetUpdateMemoryWriteNeeded_Stub(CMOCK_vSetUpdateMemoryWriteNeeded_CALLBACK Callback);
#define vSetUpdateMemoryWriteNeeded_StubWithCallback vSetUpdateMemoryWriteNeeded_Stub
#define vSetUpdateMemoryWriteNeeded_IgnoreArg_bWriteMemoryNeeded() vSetUpdateMemoryWriteNeeded_CMockIgnoreArg_bWriteMemoryNeeded(__LINE__)
void vSetUpdateMemoryWriteNeeded_CMockIgnoreArg_bWriteMemoryNeeded(UNITY_LINE_TYPE cmock_line);
#define vSetUpdateCommonMemoryWriteNeeded_Ignore() vSetUpdateCommonMemoryWriteNeeded_CMockIgnore()
void vSetUpdateCommonMemoryWriteNeeded_CMockIgnore(void);
#define vSetUpdateCommonMemoryWriteNeeded_StopIgnore() vSetUpdateCommonMemoryWriteNeeded_CMockStopIgnore()
void vSetUpdateCommonMemoryWriteNeeded_CMockStopIgnore(void);
#define vSetUpdateCommonMemoryWriteNeeded_ExpectAnyArgs() vSetUpdateCommonMemoryWriteNeeded_CMockExpectAnyArgs(__LINE__)
void vSetUpdateCommonMemoryWriteNeeded_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vSetUpdateCommonMemoryWriteNeeded_Expect(bWriteMemoryNeeded) vSetUpdateCommonMemoryWriteNeeded_CMockExpect(__LINE__, bWriteMemoryNeeded)
void vSetUpdateCommonMemoryWriteNeeded_CMockExpect(UNITY_LINE_TYPE cmock_line, eBool_t bWriteMemoryNeeded);
typedef void (* CMOCK_vSetUpdateCommonMemoryWriteNeeded_CALLBACK)(eBool_t bWriteMemoryNeeded, int cmock_num_calls);
void vSetUpdateCommonMemoryWriteNeeded_AddCallback(CMOCK_vSetUpdateCommonMemoryWriteNeeded_CALLBACK Callback);
void vSetUpdateCommonMemoryWriteNeeded_Stub(CMOCK_vSetUpdateCommonMemoryWriteNeeded_CALLBACK Callback);
#define vSetUpdateCommonMemoryWriteNeeded_StubWithCallback vSetUpdateCommonMemoryWriteNeeded_Stub
#define vSetUpdateCommonMemoryWriteNeeded_IgnoreArg_bWriteMemoryNeeded() vSetUpdateCommonMemoryWriteNeeded_CMockIgnoreArg_bWriteMemoryNeeded(__LINE__)
void vSetUpdateCommonMemoryWriteNeeded_CMockIgnoreArg_bWriteMemoryNeeded(UNITY_LINE_TYPE cmock_line);
#define vSetUpdateLnaMemoryWriteNeeded_Ignore() vSetUpdateLnaMemoryWriteNeeded_CMockIgnore()
void vSetUpdateLnaMemoryWriteNeeded_CMockIgnore(void);
#define vSetUpdateLnaMemoryWriteNeeded_StopIgnore() vSetUpdateLnaMemoryWriteNeeded_CMockStopIgnore()
void vSetUpdateLnaMemoryWriteNeeded_CMockStopIgnore(void);
#define vSetUpdateLnaMemoryWriteNeeded_ExpectAnyArgs() vSetUpdateLnaMemoryWriteNeeded_CMockExpectAnyArgs(__LINE__)
void vSetUpdateLnaMemoryWriteNeeded_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vSetUpdateLnaMemoryWriteNeeded_Expect(bWriteMemoryNeeded) vSetUpdateLnaMemoryWriteNeeded_CMockExpect(__LINE__, bWriteMemoryNeeded)
void vSetUpdateLnaMemoryWriteNeeded_CMockExpect(UNITY_LINE_TYPE cmock_line, eBool_t bWriteMemoryNeeded);
typedef void (* CMOCK_vSetUpdateLnaMemoryWriteNeeded_CALLBACK)(eBool_t bWriteMemoryNeeded, int cmock_num_calls);
void vSetUpdateLnaMemoryWriteNeeded_AddCallback(CMOCK_vSetUpdateLnaMemoryWriteNeeded_CALLBACK Callback);
void vSetUpdateLnaMemoryWriteNeeded_Stub(CMOCK_vSetUpdateLnaMemoryWriteNeeded_CALLBACK Callback);
#define vSetUpdateLnaMemoryWriteNeeded_StubWithCallback vSetUpdateLnaMemoryWriteNeeded_Stub
#define vSetUpdateLnaMemoryWriteNeeded_IgnoreArg_bWriteMemoryNeeded() vSetUpdateLnaMemoryWriteNeeded_CMockIgnoreArg_bWriteMemoryNeeded(__LINE__)
void vSetUpdateLnaMemoryWriteNeeded_CMockIgnoreArg_bWriteMemoryNeeded(UNITY_LINE_TYPE cmock_line);
#define vSetUpdateBoosterMemoryWriteNeeded_Ignore() vSetUpdateBoosterMemoryWriteNeeded_CMockIgnore()
void vSetUpdateBoosterMemoryWriteNeeded_CMockIgnore(void);
#define vSetUpdateBoosterMemoryWriteNeeded_StopIgnore() vSetUpdateBoosterMemoryWriteNeeded_CMockStopIgnore()
void vSetUpdateBoosterMemoryWriteNeeded_CMockStopIgnore(void);
#define vSetUpdateBoosterMemoryWriteNeeded_ExpectAnyArgs() vSetUpdateBoosterMemoryWriteNeeded_CMockExpectAnyArgs(__LINE__)
void vSetUpdateBoosterMemoryWriteNeeded_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vSetUpdateBoosterMemoryWriteNeeded_Expect(bWriteMemoryNeeded) vSetUpdateBoosterMemoryWriteNeeded_CMockExpect(__LINE__, bWriteMemoryNeeded)
void vSetUpdateBoosterMemoryWriteNeeded_CMockExpect(UNITY_LINE_TYPE cmock_line, eBool_t bWriteMemoryNeeded);
typedef void (* CMOCK_vSetUpdateBoosterMemoryWriteNeeded_CALLBACK)(eBool_t bWriteMemoryNeeded, int cmock_num_calls);
void vSetUpdateBoosterMemoryWriteNeeded_AddCallback(CMOCK_vSetUpdateBoosterMemoryWriteNeeded_CALLBACK Callback);
void vSetUpdateBoosterMemoryWriteNeeded_Stub(CMOCK_vSetUpdateBoosterMemoryWriteNeeded_CALLBACK Callback);
#define vSetUpdateBoosterMemoryWriteNeeded_StubWithCallback vSetUpdateBoosterMemoryWriteNeeded_Stub
#define vSetUpdateBoosterMemoryWriteNeeded_IgnoreArg_bWriteMemoryNeeded() vSetUpdateBoosterMemoryWriteNeeded_CMockIgnoreArg_bWriteMemoryNeeded(__LINE__)
void vSetUpdateBoosterMemoryWriteNeeded_CMockIgnoreArg_bWriteMemoryNeeded(UNITY_LINE_TYPE cmock_line);
#define vCopyImageCommonNvm_Ignore() vCopyImageCommonNvm_CMockIgnore()
void vCopyImageCommonNvm_CMockIgnore(void);
#define vCopyImageCommonNvm_StopIgnore() vCopyImageCommonNvm_CMockStopIgnore()
void vCopyImageCommonNvm_CMockStopIgnore(void);
#define vCopyImageCommonNvm_Expect() vCopyImageCommonNvm_CMockExpect(__LINE__)
void vCopyImageCommonNvm_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_vCopyImageCommonNvm_CALLBACK)(int cmock_num_calls);
void vCopyImageCommonNvm_AddCallback(CMOCK_vCopyImageCommonNvm_CALLBACK Callback);
void vCopyImageCommonNvm_Stub(CMOCK_vCopyImageCommonNvm_CALLBACK Callback);
#define vCopyImageCommonNvm_StubWithCallback vCopyImageCommonNvm_Stub
#define vCopyImageLnaNvm_Ignore() vCopyImageLnaNvm_CMockIgnore()
void vCopyImageLnaNvm_CMockIgnore(void);
#define vCopyImageLnaNvm_StopIgnore() vCopyImageLnaNvm_CMockStopIgnore()
void vCopyImageLnaNvm_CMockStopIgnore(void);
#define vCopyImageLnaNvm_Expect() vCopyImageLnaNvm_CMockExpect(__LINE__)
void vCopyImageLnaNvm_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_vCopyImageLnaNvm_CALLBACK)(int cmock_num_calls);
void vCopyImageLnaNvm_AddCallback(CMOCK_vCopyImageLnaNvm_CALLBACK Callback);
void vCopyImageLnaNvm_Stub(CMOCK_vCopyImageLnaNvm_CALLBACK Callback);
#define vCopyImageLnaNvm_StubWithCallback vCopyImageLnaNvm_Stub
#define vCopyImageBoosterNvm_Ignore() vCopyImageBoosterNvm_CMockIgnore()
void vCopyImageBoosterNvm_CMockIgnore(void);
#define vCopyImageBoosterNvm_StopIgnore() vCopyImageBoosterNvm_CMockStopIgnore()
void vCopyImageBoosterNvm_CMockStopIgnore(void);
#define vCopyImageBoosterNvm_Expect() vCopyImageBoosterNvm_CMockExpect(__LINE__)
void vCopyImageBoosterNvm_CMockExpect(UNITY_LINE_TYPE cmock_line);
typedef void (* CMOCK_vCopyImageBoosterNvm_CALLBACK)(int cmock_num_calls);
void vCopyImageBoosterNvm_AddCallback(CMOCK_vCopyImageBoosterNvm_CALLBACK Callback);
void vCopyImageBoosterNvm_Stub(CMOCK_vCopyImageBoosterNvm_CALLBACK Callback);
#define vCopyImageBoosterNvm_StubWithCallback vCopyImageBoosterNvm_Stub
#define vLaserSetCurrentAlarm_Ignore() vLaserSetCurrentAlarm_CMockIgnore()
void vLaserSetCurrentAlarm_CMockIgnore(void);
#define vLaserSetCurrentAlarm_StopIgnore() vLaserSetCurrentAlarm_CMockStopIgnore()
void vLaserSetCurrentAlarm_CMockStopIgnore(void);
#define vLaserSetCurrentAlarm_ExpectAnyArgs() vLaserSetCurrentAlarm_CMockExpectAnyArgs(__LINE__)
void vLaserSetCurrentAlarm_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vLaserSetCurrentAlarm_Expect(bAlarmExist) vLaserSetCurrentAlarm_CMockExpect(__LINE__, bAlarmExist)
void vLaserSetCurrentAlarm_CMockExpect(UNITY_LINE_TYPE cmock_line, eBool_t bAlarmExist);
typedef void (* CMOCK_vLaserSetCurrentAlarm_CALLBACK)(eBool_t bAlarmExist, int cmock_num_calls);
void vLaserSetCurrentAlarm_AddCallback(CMOCK_vLaserSetCurrentAlarm_CALLBACK Callback);
void vLaserSetCurrentAlarm_Stub(CMOCK_vLaserSetCurrentAlarm_CALLBACK Callback);
#define vLaserSetCurrentAlarm_StubWithCallback vLaserSetCurrentAlarm_Stub
#define vLaserSetCurrentAlarm_IgnoreArg_bAlarmExist() vLaserSetCurrentAlarm_CMockIgnoreArg_bAlarmExist(__LINE__)
void vLaserSetCurrentAlarm_CMockIgnoreArg_bAlarmExist(UNITY_LINE_TYPE cmock_line);
#define vUpdateLnaPIDValues_Ignore() vUpdateLnaPIDValues_CMockIgnore()
void vUpdateLnaPIDValues_CMockIgnore(void);
#define vUpdateLnaPIDValues_StopIgnore() vUpdateLnaPIDValues_CMockStopIgnore()
void vUpdateLnaPIDValues_CMockStopIgnore(void);
#define vUpdateLnaPIDValues_ExpectAnyArgs() vUpdateLnaPIDValues_CMockExpectAnyArgs(__LINE__)
void vUpdateLnaPIDValues_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vUpdateLnaPIDValues_Expect(fLnasingleProportional, fLnasingleIntegralGain, fLnasingleDerivativeGain) vUpdateLnaPIDValues_CMockExpect(__LINE__, fLnasingleProportional, fLnasingleIntegralGain, fLnasingleDerivativeGain)
void vUpdateLnaPIDValues_CMockExpect(UNITY_LINE_TYPE cmock_line, float fLnasingleProportional, float fLnasingleIntegralGain, float fLnasingleDerivativeGain);
typedef void (* CMOCK_vUpdateLnaPIDValues_CALLBACK)(float fLnasingleProportional, float fLnasingleIntegralGain, float fLnasingleDerivativeGain, int cmock_num_calls);
void vUpdateLnaPIDValues_AddCallback(CMOCK_vUpdateLnaPIDValues_CALLBACK Callback);
void vUpdateLnaPIDValues_Stub(CMOCK_vUpdateLnaPIDValues_CALLBACK Callback);
#define vUpdateLnaPIDValues_StubWithCallback vUpdateLnaPIDValues_Stub
#define vUpdateLnaPIDValues_IgnoreArg_fLnasingleProportional() vUpdateLnaPIDValues_CMockIgnoreArg_fLnasingleProportional(__LINE__)
void vUpdateLnaPIDValues_CMockIgnoreArg_fLnasingleProportional(UNITY_LINE_TYPE cmock_line);
#define vUpdateLnaPIDValues_IgnoreArg_fLnasingleIntegralGain() vUpdateLnaPIDValues_CMockIgnoreArg_fLnasingleIntegralGain(__LINE__)
void vUpdateLnaPIDValues_CMockIgnoreArg_fLnasingleIntegralGain(UNITY_LINE_TYPE cmock_line);
#define vUpdateLnaPIDValues_IgnoreArg_fLnasingleDerivativeGain() vUpdateLnaPIDValues_CMockIgnoreArg_fLnasingleDerivativeGain(__LINE__)
void vUpdateLnaPIDValues_CMockIgnoreArg_fLnasingleDerivativeGain(UNITY_LINE_TYPE cmock_line);
#define vUpdateHpaSmPIDValues_Ignore() vUpdateHpaSmPIDValues_CMockIgnore()
void vUpdateHpaSmPIDValues_CMockIgnore(void);
#define vUpdateHpaSmPIDValues_StopIgnore() vUpdateHpaSmPIDValues_CMockStopIgnore()
void vUpdateHpaSmPIDValues_CMockStopIgnore(void);
#define vUpdateHpaSmPIDValues_ExpectAnyArgs() vUpdateHpaSmPIDValues_CMockExpectAnyArgs(__LINE__)
void vUpdateHpaSmPIDValues_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vUpdateHpaSmPIDValues_Expect(fHpaSingleProportional, fHpaSingleIntegralGain, fHpaSingleDerivativeGain) vUpdateHpaSmPIDValues_CMockExpect(__LINE__, fHpaSingleProportional, fHpaSingleIntegralGain, fHpaSingleDerivativeGain)
void vUpdateHpaSmPIDValues_CMockExpect(UNITY_LINE_TYPE cmock_line, float fHpaSingleProportional, float fHpaSingleIntegralGain, float fHpaSingleDerivativeGain);
typedef void (* CMOCK_vUpdateHpaSmPIDValues_CALLBACK)(float fHpaSingleProportional, float fHpaSingleIntegralGain, float fHpaSingleDerivativeGain, int cmock_num_calls);
void vUpdateHpaSmPIDValues_AddCallback(CMOCK_vUpdateHpaSmPIDValues_CALLBACK Callback);
void vUpdateHpaSmPIDValues_Stub(CMOCK_vUpdateHpaSmPIDValues_CALLBACK Callback);
#define vUpdateHpaSmPIDValues_StubWithCallback vUpdateHpaSmPIDValues_Stub
#define vUpdateHpaSmPIDValues_IgnoreArg_fHpaSingleProportional() vUpdateHpaSmPIDValues_CMockIgnoreArg_fHpaSingleProportional(__LINE__)
void vUpdateHpaSmPIDValues_CMockIgnoreArg_fHpaSingleProportional(UNITY_LINE_TYPE cmock_line);
#define vUpdateHpaSmPIDValues_IgnoreArg_fHpaSingleIntegralGain() vUpdateHpaSmPIDValues_CMockIgnoreArg_fHpaSingleIntegralGain(__LINE__)
void vUpdateHpaSmPIDValues_CMockIgnoreArg_fHpaSingleIntegralGain(UNITY_LINE_TYPE cmock_line);
#define vUpdateHpaSmPIDValues_IgnoreArg_fHpaSingleDerivativeGain() vUpdateHpaSmPIDValues_CMockIgnoreArg_fHpaSingleDerivativeGain(__LINE__)
void vUpdateHpaSmPIDValues_CMockIgnoreArg_fHpaSingleDerivativeGain(UNITY_LINE_TYPE cmock_line);
#define vUploadHpaSmPIDValues_Ignore() vUploadHpaSmPIDValues_CMockIgnore()
void vUploadHpaSmPIDValues_CMockIgnore(void);
#define vUploadHpaSmPIDValues_StopIgnore() vUploadHpaSmPIDValues_CMockStopIgnore()
void vUploadHpaSmPIDValues_CMockStopIgnore(void);
#define vUploadHpaSmPIDValues_ExpectAnyArgs() vUploadHpaSmPIDValues_CMockExpectAnyArgs(__LINE__)
void vUploadHpaSmPIDValues_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vUploadHpaSmPIDValues_Expect(pfHpaSingleProportional, pfHpasingleIntegralGain, pfHpasingleDerivativeGain) vUploadHpaSmPIDValues_CMockExpect(__LINE__, pfHpaSingleProportional, pfHpasingleIntegralGain, pfHpasingleDerivativeGain)
void vUploadHpaSmPIDValues_CMockExpect(UNITY_LINE_TYPE cmock_line, float* pfHpaSingleProportional, float* pfHpasingleIntegralGain, float* pfHpasingleDerivativeGain);
typedef void (* CMOCK_vUploadHpaSmPIDValues_CALLBACK)(float* pfHpaSingleProportional, float* pfHpasingleIntegralGain, float* pfHpasingleDerivativeGain, int cmock_num_calls);
void vUploadHpaSmPIDValues_AddCallback(CMOCK_vUploadHpaSmPIDValues_CALLBACK Callback);
void vUploadHpaSmPIDValues_Stub(CMOCK_vUploadHpaSmPIDValues_CALLBACK Callback);
#define vUploadHpaSmPIDValues_StubWithCallback vUploadHpaSmPIDValues_Stub
#define vUploadHpaSmPIDValues_ExpectWithArray(pfHpaSingleProportional, pfHpaSingleProportional_Depth, pfHpasingleIntegralGain, pfHpasingleIntegralGain_Depth, pfHpasingleDerivativeGain, pfHpasingleDerivativeGain_Depth) vUploadHpaSmPIDValues_CMockExpectWithArray(__LINE__, pfHpaSingleProportional, pfHpaSingleProportional_Depth, pfHpasingleIntegralGain, pfHpasingleIntegralGain_Depth, pfHpasingleDerivativeGain, pfHpasingleDerivativeGain_Depth)
void vUploadHpaSmPIDValues_CMockExpectWithArray(UNITY_LINE_TYPE cmock_line, float* pfHpaSingleProportional, int pfHpaSingleProportional_Depth, float* pfHpasingleIntegralGain, int pfHpasingleIntegralGain_Depth, float* pfHpasingleDerivativeGain, int pfHpasingleDerivativeGain_Depth);
#define vUploadHpaSmPIDValues_ReturnThruPtr_pfHpaSingleProportional(pfHpaSingleProportional) vUploadHpaSmPIDValues_CMockReturnMemThruPtr_pfHpaSingleProportional(__LINE__, pfHpaSingleProportional, sizeof(float))
#define vUploadHpaSmPIDValues_ReturnArrayThruPtr_pfHpaSingleProportional(pfHpaSingleProportional, cmock_len) vUploadHpaSmPIDValues_CMockReturnMemThruPtr_pfHpaSingleProportional(__LINE__, pfHpaSingleProportional, cmock_len * sizeof(*pfHpaSingleProportional))
#define vUploadHpaSmPIDValues_ReturnMemThruPtr_pfHpaSingleProportional(pfHpaSingleProportional, cmock_size) vUploadHpaSmPIDValues_CMockReturnMemThruPtr_pfHpaSingleProportional(__LINE__, pfHpaSingleProportional, cmock_size)
void vUploadHpaSmPIDValues_CMockReturnMemThruPtr_pfHpaSingleProportional(UNITY_LINE_TYPE cmock_line, float* pfHpaSingleProportional, size_t cmock_size);
#define vUploadHpaSmPIDValues_ReturnThruPtr_pfHpasingleIntegralGain(pfHpasingleIntegralGain) vUploadHpaSmPIDValues_CMockReturnMemThruPtr_pfHpasingleIntegralGain(__LINE__, pfHpasingleIntegralGain, sizeof(float))
#define vUploadHpaSmPIDValues_ReturnArrayThruPtr_pfHpasingleIntegralGain(pfHpasingleIntegralGain, cmock_len) vUploadHpaSmPIDValues_CMockReturnMemThruPtr_pfHpasingleIntegralGain(__LINE__, pfHpasingleIntegralGain, cmock_len * sizeof(*pfHpasingleIntegralGain))
#define vUploadHpaSmPIDValues_ReturnMemThruPtr_pfHpasingleIntegralGain(pfHpasingleIntegralGain, cmock_size) vUploadHpaSmPIDValues_CMockReturnMemThruPtr_pfHpasingleIntegralGain(__LINE__, pfHpasingleIntegralGain, cmock_size)
void vUploadHpaSmPIDValues_CMockReturnMemThruPtr_pfHpasingleIntegralGain(UNITY_LINE_TYPE cmock_line, float* pfHpasingleIntegralGain, size_t cmock_size);
#define vUploadHpaSmPIDValues_ReturnThruPtr_pfHpasingleDerivativeGain(pfHpasingleDerivativeGain) vUploadHpaSmPIDValues_CMockReturnMemThruPtr_pfHpasingleDerivativeGain(__LINE__, pfHpasingleDerivativeGain, sizeof(float))
#define vUploadHpaSmPIDValues_ReturnArrayThruPtr_pfHpasingleDerivativeGain(pfHpasingleDerivativeGain, cmock_len) vUploadHpaSmPIDValues_CMockReturnMemThruPtr_pfHpasingleDerivativeGain(__LINE__, pfHpasingleDerivativeGain, cmock_len * sizeof(*pfHpasingleDerivativeGain))
#define vUploadHpaSmPIDValues_ReturnMemThruPtr_pfHpasingleDerivativeGain(pfHpasingleDerivativeGain, cmock_size) vUploadHpaSmPIDValues_CMockReturnMemThruPtr_pfHpasingleDerivativeGain(__LINE__, pfHpasingleDerivativeGain, cmock_size)
void vUploadHpaSmPIDValues_CMockReturnMemThruPtr_pfHpasingleDerivativeGain(UNITY_LINE_TYPE cmock_line, float* pfHpasingleDerivativeGain, size_t cmock_size);
#define vUploadHpaSmPIDValues_IgnoreArg_pfHpaSingleProportional() vUploadHpaSmPIDValues_CMockIgnoreArg_pfHpaSingleProportional(__LINE__)
void vUploadHpaSmPIDValues_CMockIgnoreArg_pfHpaSingleProportional(UNITY_LINE_TYPE cmock_line);
#define vUploadHpaSmPIDValues_IgnoreArg_pfHpasingleIntegralGain() vUploadHpaSmPIDValues_CMockIgnoreArg_pfHpasingleIntegralGain(__LINE__)
void vUploadHpaSmPIDValues_CMockIgnoreArg_pfHpasingleIntegralGain(UNITY_LINE_TYPE cmock_line);
#define vUploadHpaSmPIDValues_IgnoreArg_pfHpasingleDerivativeGain() vUploadHpaSmPIDValues_CMockIgnoreArg_pfHpasingleDerivativeGain(__LINE__)
void vUploadHpaSmPIDValues_CMockIgnoreArg_pfHpasingleDerivativeGain(UNITY_LINE_TYPE cmock_line);
#define vUpdateHpaMm1PIDValues_Ignore() vUpdateHpaMm1PIDValues_CMockIgnore()
void vUpdateHpaMm1PIDValues_CMockIgnore(void);
#define vUpdateHpaMm1PIDValues_StopIgnore() vUpdateHpaMm1PIDValues_CMockStopIgnore()
void vUpdateHpaMm1PIDValues_CMockStopIgnore(void);
#define vUpdateHpaMm1PIDValues_ExpectAnyArgs() vUpdateHpaMm1PIDValues_CMockExpectAnyArgs(__LINE__)
void vUpdateHpaMm1PIDValues_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vUpdateHpaMm1PIDValues_Expect(fHpaSingleProportional, fHpaSingleIntegralGain, fHpaSingleDerivativeGain) vUpdateHpaMm1PIDValues_CMockExpect(__LINE__, fHpaSingleProportional, fHpaSingleIntegralGain, fHpaSingleDerivativeGain)
void vUpdateHpaMm1PIDValues_CMockExpect(UNITY_LINE_TYPE cmock_line, float fHpaSingleProportional, float fHpaSingleIntegralGain, float fHpaSingleDerivativeGain);
typedef void (* CMOCK_vUpdateHpaMm1PIDValues_CALLBACK)(float fHpaSingleProportional, float fHpaSingleIntegralGain, float fHpaSingleDerivativeGain, int cmock_num_calls);
void vUpdateHpaMm1PIDValues_AddCallback(CMOCK_vUpdateHpaMm1PIDValues_CALLBACK Callback);
void vUpdateHpaMm1PIDValues_Stub(CMOCK_vUpdateHpaMm1PIDValues_CALLBACK Callback);
#define vUpdateHpaMm1PIDValues_StubWithCallback vUpdateHpaMm1PIDValues_Stub
#define vUpdateHpaMm1PIDValues_IgnoreArg_fHpaSingleProportional() vUpdateHpaMm1PIDValues_CMockIgnoreArg_fHpaSingleProportional(__LINE__)
void vUpdateHpaMm1PIDValues_CMockIgnoreArg_fHpaSingleProportional(UNITY_LINE_TYPE cmock_line);
#define vUpdateHpaMm1PIDValues_IgnoreArg_fHpaSingleIntegralGain() vUpdateHpaMm1PIDValues_CMockIgnoreArg_fHpaSingleIntegralGain(__LINE__)
void vUpdateHpaMm1PIDValues_CMockIgnoreArg_fHpaSingleIntegralGain(UNITY_LINE_TYPE cmock_line);
#define vUpdateHpaMm1PIDValues_IgnoreArg_fHpaSingleDerivativeGain() vUpdateHpaMm1PIDValues_CMockIgnoreArg_fHpaSingleDerivativeGain(__LINE__)
void vUpdateHpaMm1PIDValues_CMockIgnoreArg_fHpaSingleDerivativeGain(UNITY_LINE_TYPE cmock_line);
#define vUpdateHpaMm2PIDValues_Ignore() vUpdateHpaMm2PIDValues_CMockIgnore()
void vUpdateHpaMm2PIDValues_CMockIgnore(void);
#define vUpdateHpaMm2PIDValues_StopIgnore() vUpdateHpaMm2PIDValues_CMockStopIgnore()
void vUpdateHpaMm2PIDValues_CMockStopIgnore(void);
#define vUpdateHpaMm2PIDValues_ExpectAnyArgs() vUpdateHpaMm2PIDValues_CMockExpectAnyArgs(__LINE__)
void vUpdateHpaMm2PIDValues_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vUpdateHpaMm2PIDValues_Expect(fHpaSingleProportional, fHpaSingleIntegralGain, fHpaSingleDerivativeGain) vUpdateHpaMm2PIDValues_CMockExpect(__LINE__, fHpaSingleProportional, fHpaSingleIntegralGain, fHpaSingleDerivativeGain)
void vUpdateHpaMm2PIDValues_CMockExpect(UNITY_LINE_TYPE cmock_line, float fHpaSingleProportional, float fHpaSingleIntegralGain, float fHpaSingleDerivativeGain);
typedef void (* CMOCK_vUpdateHpaMm2PIDValues_CALLBACK)(float fHpaSingleProportional, float fHpaSingleIntegralGain, float fHpaSingleDerivativeGain, int cmock_num_calls);
void vUpdateHpaMm2PIDValues_AddCallback(CMOCK_vUpdateHpaMm2PIDValues_CALLBACK Callback);
void vUpdateHpaMm2PIDValues_Stub(CMOCK_vUpdateHpaMm2PIDValues_CALLBACK Callback);
#define vUpdateHpaMm2PIDValues_StubWithCallback vUpdateHpaMm2PIDValues_Stub
#define vUpdateHpaMm2PIDValues_IgnoreArg_fHpaSingleProportional() vUpdateHpaMm2PIDValues_CMockIgnoreArg_fHpaSingleProportional(__LINE__)
void vUpdateHpaMm2PIDValues_CMockIgnoreArg_fHpaSingleProportional(UNITY_LINE_TYPE cmock_line);
#define vUpdateHpaMm2PIDValues_IgnoreArg_fHpaSingleIntegralGain() vUpdateHpaMm2PIDValues_CMockIgnoreArg_fHpaSingleIntegralGain(__LINE__)
void vUpdateHpaMm2PIDValues_CMockIgnoreArg_fHpaSingleIntegralGain(UNITY_LINE_TYPE cmock_line);
#define vUpdateHpaMm2PIDValues_IgnoreArg_fHpaSingleDerivativeGain() vUpdateHpaMm2PIDValues_CMockIgnoreArg_fHpaSingleDerivativeGain(__LINE__)
void vUpdateHpaMm2PIDValues_CMockIgnoreArg_fHpaSingleDerivativeGain(UNITY_LINE_TYPE cmock_line);
#define vUpdateHpaMm1and2PIDValues_Ignore() vUpdateHpaMm1and2PIDValues_CMockIgnore()
void vUpdateHpaMm1and2PIDValues_CMockIgnore(void);
#define vUpdateHpaMm1and2PIDValues_StopIgnore() vUpdateHpaMm1and2PIDValues_CMockStopIgnore()
void vUpdateHpaMm1and2PIDValues_CMockStopIgnore(void);
#define vUpdateHpaMm1and2PIDValues_ExpectAnyArgs() vUpdateHpaMm1and2PIDValues_CMockExpectAnyArgs(__LINE__)
void vUpdateHpaMm1and2PIDValues_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vUpdateHpaMm1and2PIDValues_Expect(fHpaMM1and2Proportional, fHpaMM1and2IntegralGain, fHpaMM1and2DerivativeGain) vUpdateHpaMm1and2PIDValues_CMockExpect(__LINE__, fHpaMM1and2Proportional, fHpaMM1and2IntegralGain, fHpaMM1and2DerivativeGain)
void vUpdateHpaMm1and2PIDValues_CMockExpect(UNITY_LINE_TYPE cmock_line, float fHpaMM1and2Proportional, float fHpaMM1and2IntegralGain, float fHpaMM1and2DerivativeGain);
typedef void (* CMOCK_vUpdateHpaMm1and2PIDValues_CALLBACK)(float fHpaMM1and2Proportional, float fHpaMM1and2IntegralGain, float fHpaMM1and2DerivativeGain, int cmock_num_calls);
void vUpdateHpaMm1and2PIDValues_AddCallback(CMOCK_vUpdateHpaMm1and2PIDValues_CALLBACK Callback);
void vUpdateHpaMm1and2PIDValues_Stub(CMOCK_vUpdateHpaMm1and2PIDValues_CALLBACK Callback);
#define vUpdateHpaMm1and2PIDValues_StubWithCallback vUpdateHpaMm1and2PIDValues_Stub
#define vUpdateHpaMm1and2PIDValues_IgnoreArg_fHpaMM1and2Proportional() vUpdateHpaMm1and2PIDValues_CMockIgnoreArg_fHpaMM1and2Proportional(__LINE__)
void vUpdateHpaMm1and2PIDValues_CMockIgnoreArg_fHpaMM1and2Proportional(UNITY_LINE_TYPE cmock_line);
#define vUpdateHpaMm1and2PIDValues_IgnoreArg_fHpaMM1and2IntegralGain() vUpdateHpaMm1and2PIDValues_CMockIgnoreArg_fHpaMM1and2IntegralGain(__LINE__)
void vUpdateHpaMm1and2PIDValues_CMockIgnoreArg_fHpaMM1and2IntegralGain(UNITY_LINE_TYPE cmock_line);
#define vUpdateHpaMm1and2PIDValues_IgnoreArg_fHpaMM1and2DerivativeGain() vUpdateHpaMm1and2PIDValues_CMockIgnoreArg_fHpaMM1and2DerivativeGain(__LINE__)
void vUpdateHpaMm1and2PIDValues_CMockIgnoreArg_fHpaMM1and2DerivativeGain(UNITY_LINE_TYPE cmock_line);
#define vEnableLna_Ignore() vEnableLna_CMockIgnore()
void vEnableLna_CMockIgnore(void);
#define vEnableLna_StopIgnore() vEnableLna_CMockStopIgnore()
void vEnableLna_CMockStopIgnore(void);
#define vEnableLna_ExpectAnyArgs() vEnableLna_CMockExpectAnyArgs(__LINE__)
void vEnableLna_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vEnableLna_Expect(bEnable) vEnableLna_CMockExpect(__LINE__, bEnable)
void vEnableLna_CMockExpect(UNITY_LINE_TYPE cmock_line, eBool_t bEnable);
typedef void (* CMOCK_vEnableLna_CALLBACK)(eBool_t bEnable, int cmock_num_calls);
void vEnableLna_AddCallback(CMOCK_vEnableLna_CALLBACK Callback);
void vEnableLna_Stub(CMOCK_vEnableLna_CALLBACK Callback);
#define vEnableLna_StubWithCallback vEnableLna_Stub
#define vEnableLna_IgnoreArg_bEnable() vEnableLna_CMockIgnoreArg_bEnable(__LINE__)
void vEnableLna_CMockIgnoreArg_bEnable(UNITY_LINE_TYPE cmock_line);
#define vEnableHpaSingleMode_Ignore() vEnableHpaSingleMode_CMockIgnore()
void vEnableHpaSingleMode_CMockIgnore(void);
#define vEnableHpaSingleMode_StopIgnore() vEnableHpaSingleMode_CMockStopIgnore()
void vEnableHpaSingleMode_CMockStopIgnore(void);
#define vEnableHpaSingleMode_ExpectAnyArgs() vEnableHpaSingleMode_CMockExpectAnyArgs(__LINE__)
void vEnableHpaSingleMode_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vEnableHpaSingleMode_Expect(bEnable) vEnableHpaSingleMode_CMockExpect(__LINE__, bEnable)
void vEnableHpaSingleMode_CMockExpect(UNITY_LINE_TYPE cmock_line, eBool_t bEnable);
typedef void (* CMOCK_vEnableHpaSingleMode_CALLBACK)(eBool_t bEnable, int cmock_num_calls);
void vEnableHpaSingleMode_AddCallback(CMOCK_vEnableHpaSingleMode_CALLBACK Callback);
void vEnableHpaSingleMode_Stub(CMOCK_vEnableHpaSingleMode_CALLBACK Callback);
#define vEnableHpaSingleMode_StubWithCallback vEnableHpaSingleMode_Stub
#define vEnableHpaSingleMode_IgnoreArg_bEnable() vEnableHpaSingleMode_CMockIgnoreArg_bEnable(__LINE__)
void vEnableHpaSingleMode_CMockIgnoreArg_bEnable(UNITY_LINE_TYPE cmock_line);
#define vEnableHpaMultiMode1_Ignore() vEnableHpaMultiMode1_CMockIgnore()
void vEnableHpaMultiMode1_CMockIgnore(void);
#define vEnableHpaMultiMode1_StopIgnore() vEnableHpaMultiMode1_CMockStopIgnore()
void vEnableHpaMultiMode1_CMockStopIgnore(void);
#define vEnableHpaMultiMode1_ExpectAnyArgs() vEnableHpaMultiMode1_CMockExpectAnyArgs(__LINE__)
void vEnableHpaMultiMode1_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vEnableHpaMultiMode1_Expect(bEnable) vEnableHpaMultiMode1_CMockExpect(__LINE__, bEnable)
void vEnableHpaMultiMode1_CMockExpect(UNITY_LINE_TYPE cmock_line, eBool_t bEnable);
typedef void (* CMOCK_vEnableHpaMultiMode1_CALLBACK)(eBool_t bEnable, int cmock_num_calls);
void vEnableHpaMultiMode1_AddCallback(CMOCK_vEnableHpaMultiMode1_CALLBACK Callback);
void vEnableHpaMultiMode1_Stub(CMOCK_vEnableHpaMultiMode1_CALLBACK Callback);
#define vEnableHpaMultiMode1_StubWithCallback vEnableHpaMultiMode1_Stub
#define vEnableHpaMultiMode1_IgnoreArg_bEnable() vEnableHpaMultiMode1_CMockIgnoreArg_bEnable(__LINE__)
void vEnableHpaMultiMode1_CMockIgnoreArg_bEnable(UNITY_LINE_TYPE cmock_line);
#define vEnableHpaMultiMode2_Ignore() vEnableHpaMultiMode2_CMockIgnore()
void vEnableHpaMultiMode2_CMockIgnore(void);
#define vEnableHpaMultiMode2_StopIgnore() vEnableHpaMultiMode2_CMockStopIgnore()
void vEnableHpaMultiMode2_CMockStopIgnore(void);
#define vEnableHpaMultiMode2_ExpectAnyArgs() vEnableHpaMultiMode2_CMockExpectAnyArgs(__LINE__)
void vEnableHpaMultiMode2_CMockExpectAnyArgs(UNITY_LINE_TYPE cmock_line);
#define vEnableHpaMultiMode2_Expect(bEnable) vEnableHpaMultiMode2_CMockExpect(__LINE__, bEnable)
void vEnableHpaMultiMode2_CMockExpect(UNITY_LINE_TYPE cmock_line, eBool_t bEnable);
typedef void (* CMOCK_vEnableHpaMultiMode2_CALLBACK)(eBool_t bEnable, int cmock_num_calls);
void vEnableHpaMultiMode2_AddCallback(CMOCK_vEnableHpaMultiMode2_CALLBACK Callback);
void vEnableHpaMultiMode2_Stub(CMOCK_vEnableHpaMultiMode2_CALLBACK Callback);
#define vEnableHpaMultiMode2_StubWithCallback vEnableHpaMultiMode2_Stub
#define vEnableHpaMultiMode2_IgnoreArg_bEnable() vEnableHpaMultiMode2_CMockIgnoreArg_bEnable(__LINE__)
void vEnableHpaMultiMode2_CMockIgnoreArg_bEnable(UNITY_LINE_TYPE cmock_line);
#define vpGetPumpTemperatureLimits_IgnoreAndReturn(cmock_retval) vpGetPumpTemperatureLimits_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void vpGetPumpTemperatureLimits_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, xPumpTemperaturesLimits_t* cmock_to_return);
#define vpGetPumpTemperatureLimits_StopIgnore() vpGetPumpTemperatureLimits_CMockStopIgnore()
void vpGetPumpTemperatureLimits_CMockStopIgnore(void);
#define vpGetPumpTemperatureLimits_ExpectAndReturn(cmock_retval) vpGetPumpTemperatureLimits_CMockExpectAndReturn(__LINE__, cmock_retval)
void vpGetPumpTemperatureLimits_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, xPumpTemperaturesLimits_t* cmock_to_return);
typedef xPumpTemperaturesLimits_t* (* CMOCK_vpGetPumpTemperatureLimits_CALLBACK)(int cmock_num_calls);
void vpGetPumpTemperatureLimits_AddCallback(CMOCK_vpGetPumpTemperatureLimits_CALLBACK Callback);
void vpGetPumpTemperatureLimits_Stub(CMOCK_vpGetPumpTemperatureLimits_CALLBACK Callback);
#define vpGetPumpTemperatureLimits_StubWithCallback vpGetPumpTemperatureLimits_Stub

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
